{"remainingRequest":"G:\\biyesheji\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\biyesheji\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\biyesheji\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\biyesheji\\admin\\admin\\src\\components\\index\\IndexAsideStatic.vue?vue&type=template&id=0175fa3e&scoped=true&","dependencies":[{"path":"G:\\biyesheji\\admin\\admin\\src\\components\\index\\IndexAsideStatic.vue","mtime":1717644083389},{"path":"G:\\biyesheji\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\biyesheji\\admin\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\biyesheji\\admin\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\biyesheji\\admin\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}