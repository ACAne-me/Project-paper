{"remainingRequest":"G:\\biyesheji\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!G:\\biyesheji\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\biyesheji\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\biyesheji\\front\\front\\src\\pages\\yonghu\\add.vue?vue&type=template&id=9b7c819c&scoped=true&","dependencies":[{"path":"G:\\biyesheji\\front\\front\\src\\pages\\yonghu\\add.vue","mtime":1710774356000},{"path":"G:\\biyesheji\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\biyesheji\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"G:\\biyesheji\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"G:\\biyesheji\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}