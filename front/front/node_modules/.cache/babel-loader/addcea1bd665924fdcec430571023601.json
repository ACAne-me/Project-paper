{"remainingRequest":"D:\\codeTest\\front\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\codeTest\\front\\front\\src\\common\\cryptojs.js","dependencies":[{"path":"D:\\codeTest\\front\\front\\src\\common\\cryptojs.js","mtime":1708480077000},{"path":"D:\\codeTest\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\codeTest\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["D:/codeTest/front/front/src/common/cryptojs.js"],"names":["root","factory","exports","module","define","amd","CryptoJS","Math","undefined","create","Object","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","hasOwnProperty","init","$super","apply","arguments","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","length","encoder","Hex","stringify","concat","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","i","thatByte","ceil","call","slice","random","nBytes","r","m_w","m_z","mask","result","rcache","_r","push","C_enc","enc","hexChars","bite","join","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","Error","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","data","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","max","_minBufferSize","nWordsReady","nBytesReady","min","offset","_doProcessBlock","processedWords","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","hash","_doFinalize","_createHelper","hasher","message","_createHmacHelper","key","C_algo","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","indexOf","parseLoop","bits1","bits2","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","a","b","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","H_i","x","s","t","n","HmacMD5","W","SHA1","HmacSHA1","K","isPrime","sqrtN","sqrt","factor","getFractionalBits","nPrime","pow","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","Utf16BE","Utf16","utf16Chars","codePoint","utf16Str","utf16StrLength","Utf16LE","swapEndian","word","ArrayBuffer","superInit","subInit","typedArray","Uint8Array","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","buffer","byteOffset","byteLength","typedArrayByteLength","_zl","_zr","_sl","_sr","_hl","_hr","RIPEMD160","hl","hr","zl","zr","sl","sr","al","bl","cl","dl","el","ar","br","cr","dr","er","f1","f2","f3","f4","f5","rotl","y","z","HmacRIPEMD160","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","hmac","PBKDF2","keySize","iterations","compute","password","salt","derivedKey","blockIndex","derivedKeyWords","blockIndexWords","block","blockWords","blockWordsLength","intermediate","intermediateWords","EvpKDF","SHA224","HmacSHA224","X32WordArray","C_x64","x64","X64Word","Word","high","low","X64WordArray","toX32","x64Words","x64WordsLength","x32Words","x64Word","wordsLength","RHO_OFFSETS","PI_INDEXES","ROUND_CONSTANTS","newX","newY","LFSR","roundConstantMsw","roundConstantLsw","bitPosition","SHA3","outputLength","state","_state","nBlockSizeLanes","M2i","M2i1","lane","round","tMsw","tLsw","Tx","Tx4","Tx1","Tx1Msw","Tx1Lsw","laneIndex","laneMsw","laneLsw","rhoOffset","TPiLane","T0","state0","TLane","Tx1Lane","Tx2Lane","roundConstant","blockSizeBits","outputLengthBytes","outputLengthLanes","hashWords","HmacSHA3","X64Word_create","SHA512","H0","H1","H2","H3","H4","H5","H6","H7","H0h","H0l","H1h","H1l","H2h","H2l","H3h","H3l","H4h","H4l","H5h","H5l","H6h","H6l","H7h","H7l","ah","bh","dh","eh","fh","fl","gh","gl","hh","Wi","Wih","Wil","gamma0xh","gamma0xl","gamma0h","gamma0l","gamma1xh","gamma1xl","gamma1h","gamma1l","Wi7","Wi7h","Wi7l","Wi16","Wi16h","Wi16l","chh","chl","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Ki","Kih","Kil","t1l","t1h","t2l","t2h","HmacSHA512","SHA384","HmacSHA384","Cipher","createEncryptor","_ENC_XFORM_MODE","createDecryptor","_DEC_XFORM_MODE","xformMode","_xformMode","_key","process","dataUpdate","finalProcessedData","ivSize","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","cipher","encrypt","decrypt","ciphertext","StreamCipher","finalProcessedBlocks","C_mode","mode","BlockCipherMode","iv","Encryptor","Decryptor","_cipher","_iv","CBC","processBlock","xorBlock","encryptBlock","_prevBlock","thisBlock","decryptBlock","C_pad","pad","Pkcs7","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","modeCreator","_mode","__creator","CipherParams","cipherParams","formatter","C_format","format","OpenSSLFormatter","OpenSSL","openSSLStr","ciphertextWords","encryptor","cipherCfg","algorithm","_parse","plaintext","C_kdf","kdf","OpenSSLKdf","execute","derivedParams","CFB","generateKeystreamAndEncrypt","keystream","ECB","AnsiX923","lastBytePos","Iso10126","Iso97971","ZeroPadding","OFB","_keystream","NoPadding","HexFormatter","input","SBOX","INV_SBOX","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AES","_nRounds","_keyPriorReset","keyWords","nRounds","ksRows","keySchedule","_keySchedule","ksRow","invKeySchedule","_invKeySchedule","invKsRow","_doCryptBlock","s0","s1","s2","s3","t0","t3","PC1","PC2","BIT_SHIFTS","SBOX_P","SBOX_MASK","DES","keyBits","keyBitPos","subKeys","_subKeys","nSubKey","subKey","bitShift","invSubKeys","_invSubKeys","_lBlock","_rBlock","exchangeLR","exchangeRL","lBlock","rBlock","TripleDES","_des1","_des2","_des3","RC4","keySigBytes","S","_S","keyByteIndex","keyByte","_i","_j","generateKeystreamWord","keystreamWord","RC4Drop","drop","CTRGladman","incWord","b1","b2","b3","incCounter","counter","_counter","C_","G","Rabbit","X","_X","_C","_b","nextState","IV","IV_0","IV_1","i0","i2","i1","i3","gx","ga","gb","CTR","RabbitLegacy"],"mappings":"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Aa/R,IAAI,CAACC,MAAL,CAAY;AACtC;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGI,MAAAA,IAAI,EAAE,cAAS2R,IAAT,EAAeC,GAAf,EAAoB;AACzB,aAAKD,IAAL,GAAYA,IAAZ;AACA,aAAKC,GAAL,GAAWA,GAAX;AACA;AAED;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AAEA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AAEA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AAEA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AAEA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;;AAEA;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACA;AACA;AACA;AAEA;AACA;;AAnLsC,KAAZ,CAA3B;AAsLA;AACF;AACA;AACA;AACA;AACA;;AACE,QAAIC,YAAY,GAAGN,KAAK,CAAC9Q,SAAN,GAAkBd,IAAI,CAACC,MAAL,CAAY;AAChD;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACGI,MAAAA,IAAI,EAAE,cAASU,KAAT,EAAgBC,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","sourcesContent":[";\r\n(function(root, factory) {\r\n\tif (typeof exports === \"object\") {\r\n\t\t// CommonJS\r\n\t\tmodule.exports = exports = factory();\r\n\t} else if (typeof define === \"function\" && define.amd) {\r\n\t\t// AMD\r\n\t\tdefine([], factory);\r\n\t} else {\r\n\t\t// Global (browser)\r\n\t\troot.CryptoJS = factory();\r\n\t}\r\n}(this, function() {\r\n\r\n\t/**\r\n\t * CryptoJS core components.\r\n\t */\r\n\tvar CryptoJS = CryptoJS || (function(Math, undefined) {\r\n\t\t/*\r\n\t\t * Local polyfil of Object.create\r\n\t\t */\r\n\t\tvar create = Object.create || (function() {\r\n\t\t\tfunction F() {};\r\n\r\n\t\t\treturn function(obj) {\r\n\t\t\t\tvar subtype;\r\n\r\n\t\t\t\tF.prototype = obj;\r\n\r\n\t\t\t\tsubtype = new F();\r\n\r\n\t\t\t\tF.prototype = null;\r\n\r\n\t\t\t\treturn subtype;\r\n\t\t\t};\r\n\t\t}())\r\n\r\n\t\t/**\r\n\t\t * CryptoJS namespace.\r\n\t\t */\r\n\t\tvar C = {};\r\n\r\n\t\t/**\r\n\t\t * Library namespace.\r\n\t\t */\r\n\t\tvar C_lib = C.lib = {};\r\n\r\n\t\t/**\r\n\t\t * Base object for prototypal inheritance.\r\n\t\t */\r\n\t\tvar Base = C_lib.Base = (function() {\r\n\r\n\r\n\t\t\treturn {\r\n\t\t\t\t/**\r\n\t\t\t\t * Creates a new object that inherits from this object.\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Object} overrides Properties to copy into the new object.\r\n\t\t\t\t *\r\n\t\t\t\t * @return {Object} The new object.\r\n\t\t\t\t *\r\n\t\t\t\t * @static\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     var MyType = CryptoJS.lib.Base.extend({\r\n\t\t\t\t *         field: 'value',\r\n\t\t\t\t *\r\n\t\t\t\t *         method: function () {\r\n\t\t\t\t *         }\r\n\t\t\t\t *     });\r\n\t\t\t\t */\r\n\t\t\t\textend: function(overrides) {\r\n\t\t\t\t\t// Spawn\r\n\t\t\t\t\tvar subtype = create(this);\r\n\r\n\t\t\t\t\t// Augment\r\n\t\t\t\t\tif (overrides) {\r\n\t\t\t\t\t\tsubtype.mixIn(overrides);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Create default initializer\r\n\t\t\t\t\tif (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\r\n\t\t\t\t\t\tsubtype.init = function() {\r\n\t\t\t\t\t\t\tsubtype.$super.init.apply(this, arguments);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Initializer's prototype is the subtype object\r\n\t\t\t\t\tsubtype.init.prototype = subtype;\r\n\r\n\t\t\t\t\t// Reference supertype\r\n\t\t\t\t\tsubtype.$super = this;\r\n\r\n\t\t\t\t\treturn subtype;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Extends this object and runs the init method.\r\n\t\t\t\t * Arguments to create() will be passed to init().\r\n\t\t\t\t *\r\n\t\t\t\t * @return {Object} The new object.\r\n\t\t\t\t *\r\n\t\t\t\t * @static\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     var instance = MyType.create();\r\n\t\t\t\t */\r\n\t\t\t\tcreate: function() {\r\n\t\t\t\t\tvar instance = this.extend();\r\n\t\t\t\t\tinstance.init.apply(instance, arguments);\r\n\r\n\t\t\t\t\treturn instance;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Initializes a newly created object.\r\n\t\t\t\t * Override this method to add some logic when your objects are created.\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     var MyType = CryptoJS.lib.Base.extend({\r\n\t\t\t\t *         init: function () {\r\n\t\t\t\t *             // ...\r\n\t\t\t\t *         }\r\n\t\t\t\t *     });\r\n\t\t\t\t */\r\n\t\t\t\tinit: function() {},\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Copies properties into this object.\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Object} properties The properties to mix in.\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     MyType.mixIn({\r\n\t\t\t\t *         field: 'value'\r\n\t\t\t\t *     });\r\n\t\t\t\t */\r\n\t\t\t\tmixIn: function(properties) {\r\n\t\t\t\t\tfor (var propertyName in properties) {\r\n\t\t\t\t\t\tif (properties.hasOwnProperty(propertyName)) {\r\n\t\t\t\t\t\t\tthis[propertyName] = properties[propertyName];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// IE won't copy toString using the loop above\r\n\t\t\t\t\tif (properties.hasOwnProperty('toString')) {\r\n\t\t\t\t\t\tthis.toString = properties.toString;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * Creates a copy of this object.\r\n\t\t\t\t *\r\n\t\t\t\t * @return {Object} The clone.\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     var clone = instance.clone();\r\n\t\t\t\t */\r\n\t\t\t\tclone: function() {\r\n\t\t\t\t\treturn this.init.prototype.extend(this);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}());\r\n\r\n\t\t/**\r\n\t\t * An array of 32-bit words.\r\n\t\t *\r\n\t\t * @property {Array} words The array of 32-bit words.\r\n\t\t * @property {number} sigBytes The number of significant bytes in this word array.\r\n\t\t */\r\n\t\tvar WordArray = C_lib.WordArray = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created word array.\r\n\t\t\t *\r\n\t\t\t * @param {Array} words (Optional) An array of 32-bit words.\r\n\t\t\t * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.lib.WordArray.create();\r\n\t\t\t *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\r\n\t\t\t *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\r\n\t\t\t */\r\n\t\t\tinit: function(words, sigBytes) {\r\n\t\t\t\twords = this.words = words || [];\r\n\r\n\t\t\t\tif (sigBytes != undefined) {\r\n\t\t\t\t\tthis.sigBytes = sigBytes;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sigBytes = words.length * 4;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts this word array to a string.\r\n\t\t\t *\r\n\t\t\t * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\r\n\t\t\t *\r\n\t\t\t * @return {string} The stringified word array.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var string = wordArray + '';\r\n\t\t\t *     var string = wordArray.toString();\r\n\t\t\t *     var string = wordArray.toString(CryptoJS.enc.Utf8);\r\n\t\t\t */\r\n\t\t\ttoString: function(encoder) {\r\n\t\t\t\treturn (encoder || Hex).stringify(this);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Concatenates a word array to this word array.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array to append.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} This word array.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     wordArray1.concat(wordArray2);\r\n\t\t\t */\r\n\t\t\tconcat: function(wordArray) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar thisWords = this.words;\r\n\t\t\t\tvar thatWords = wordArray.words;\r\n\t\t\t\tvar thisSigBytes = this.sigBytes;\r\n\t\t\t\tvar thatSigBytes = wordArray.sigBytes;\r\n\r\n\t\t\t\t// Clamp excess bits\r\n\t\t\t\tthis.clamp();\r\n\r\n\t\t\t\t// Concat\r\n\t\t\t\tif (thisSigBytes % 4) {\r\n\t\t\t\t\t// Copy one byte at a time\r\n\t\t\t\t\tfor (var i = 0; i < thatSigBytes; i++) {\r\n\t\t\t\t\t\tvar thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\t\t\t\tthisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((\r\n\t\t\t\t\t\t\tthisSigBytes + i) % 4) * 8);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Copy one word at a time\r\n\t\t\t\t\tfor (var i = 0; i < thatSigBytes; i += 4) {\r\n\t\t\t\t\t\tthisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.sigBytes += thatSigBytes;\r\n\r\n\t\t\t\t// Chainable\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Removes insignificant bits.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     wordArray.clamp();\r\n\t\t\t */\r\n\t\t\tclamp: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar words = this.words;\r\n\t\t\t\tvar sigBytes = this.sigBytes;\r\n\r\n\t\t\t\t// Clamp\r\n\t\t\t\twords[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\r\n\t\t\t\twords.length = Math.ceil(sigBytes / 4);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a copy of this word array.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The clone.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var clone = wordArray.clone();\r\n\t\t\t */\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Base.clone.call(this);\r\n\t\t\t\tclone.words = this.words.slice(0);\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a word array filled with random bytes.\r\n\t\t\t *\r\n\t\t\t * @param {number} nBytes The number of random bytes to generate.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The random word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.lib.WordArray.random(16);\r\n\t\t\t */\r\n\t\t\trandom: function(nBytes) {\r\n\t\t\t\tvar words = [];\r\n\r\n\t\t\t\tvar r = (function(m_w) {\r\n\t\t\t\t\tvar m_w = m_w;\r\n\t\t\t\t\tvar m_z = 0x3ade68b1;\r\n\t\t\t\t\tvar mask = 0xffffffff;\r\n\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\r\n\t\t\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\r\n\t\t\t\t\t\tvar result = ((m_z << 0x10) + m_w) & mask;\r\n\t\t\t\t\t\tresult /= 0x100000000;\r\n\t\t\t\t\t\tresult += 0.5;\r\n\t\t\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tfor (var i = 0, rcache; i < nBytes; i += 4) {\r\n\t\t\t\t\tvar _r = r((rcache || Math.random()) * 0x100000000);\r\n\r\n\t\t\t\t\trcache = _r() * 0x3ade67b7;\r\n\t\t\t\t\twords.push((_r() * 0x100000000) | 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new WordArray.init(words, nBytes);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Encoder namespace.\r\n\t\t */\r\n\t\tvar C_enc = C.enc = {};\r\n\r\n\t\t/**\r\n\t\t * Hex encoding strategy.\r\n\t\t */\r\n\t\tvar Hex = C_enc.Hex = {\r\n\t\t\t/**\r\n\t\t\t * Converts a word array to a hex string.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array.\r\n\t\t\t *\r\n\t\t\t * @return {string} The hex string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\r\n\t\t\t */\r\n\t\t\tstringify: function(wordArray) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar words = wordArray.words;\r\n\t\t\t\tvar sigBytes = wordArray.sigBytes;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar hexChars = [];\r\n\t\t\t\tfor (var i = 0; i < sigBytes; i++) {\r\n\t\t\t\t\tvar bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\t\t\thexChars.push((bite >>> 4).toString(16));\r\n\t\t\t\t\thexChars.push((bite & 0x0f).toString(16));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn hexChars.join('');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a hex string to a word array.\r\n\t\t\t *\r\n\t\t\t * @param {string} hexStr The hex string.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\r\n\t\t\t */\r\n\t\t\tparse: function(hexStr) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar hexStrLength = hexStr.length;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar words = [];\r\n\t\t\t\tfor (var i = 0; i < hexStrLength; i += 2) {\r\n\t\t\t\t\twords[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new WordArray.init(words, hexStrLength / 2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Latin1 encoding strategy.\r\n\t\t */\r\n\t\tvar Latin1 = C_enc.Latin1 = {\r\n\t\t\t/**\r\n\t\t\t * Converts a word array to a Latin1 string.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array.\r\n\t\t\t *\r\n\t\t\t * @return {string} The Latin1 string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\r\n\t\t\t */\r\n\t\t\tstringify: function(wordArray) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar words = wordArray.words;\r\n\t\t\t\tvar sigBytes = wordArray.sigBytes;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar latin1Chars = [];\r\n\t\t\t\tfor (var i = 0; i < sigBytes; i++) {\r\n\t\t\t\t\tvar bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\t\t\tlatin1Chars.push(String.fromCharCode(bite));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn latin1Chars.join('');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a Latin1 string to a word array.\r\n\t\t\t *\r\n\t\t\t * @param {string} latin1Str The Latin1 string.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\r\n\t\t\t */\r\n\t\t\tparse: function(latin1Str) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar latin1StrLength = latin1Str.length;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar words = [];\r\n\t\t\t\tfor (var i = 0; i < latin1StrLength; i++) {\r\n\t\t\t\t\twords[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new WordArray.init(words, latin1StrLength);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * UTF-8 encoding strategy.\r\n\t\t */\r\n\t\tvar Utf8 = C_enc.Utf8 = {\r\n\t\t\t/**\r\n\t\t\t * Converts a word array to a UTF-8 string.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array.\r\n\t\t\t *\r\n\t\t\t * @return {string} The UTF-8 string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\r\n\t\t\t */\r\n\t\t\tstringify: function(wordArray) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn decodeURIComponent(escape(Latin1.stringify(wordArray)));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tthrow new Error('Malformed UTF-8 data');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a UTF-8 string to a word array.\r\n\t\t\t *\r\n\t\t\t * @param {string} utf8Str The UTF-8 string.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\r\n\t\t\t */\r\n\t\t\tparse: function(utf8Str) {\r\n\t\t\t\treturn Latin1.parse(unescape(encodeURIComponent(utf8Str)));\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Abstract buffered block algorithm template.\r\n\t\t *\r\n\t\t * The property blockSize must be implemented in a concrete subtype.\r\n\t\t *\r\n\t\t * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\r\n\t\t */\r\n\t\tvar BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Resets this block algorithm's data buffer to its initial state.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     bufferedBlockAlgorithm.reset();\r\n\t\t\t */\r\n\t\t\treset: function() {\r\n\t\t\t\t// Initial values\r\n\t\t\t\tthis._data = new WordArray.init();\r\n\t\t\t\tthis._nDataBytes = 0;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adds new data to this block algorithm's buffer.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     bufferedBlockAlgorithm._append('data');\r\n\t\t\t *     bufferedBlockAlgorithm._append(wordArray);\r\n\t\t\t */\r\n\t\t\t_append: function(data) {\r\n\t\t\t\t// Convert string to WordArray, else assume WordArray already\r\n\t\t\t\tif (typeof data == 'string') {\r\n\t\t\t\t\tdata = Utf8.parse(data);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Append\r\n\t\t\t\tthis._data.concat(data);\r\n\t\t\t\tthis._nDataBytes += data.sigBytes;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Processes available data blocks.\r\n\t\t\t *\r\n\t\t\t * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\r\n\t\t\t *\r\n\t\t\t * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The processed data.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var processedData = bufferedBlockAlgorithm._process();\r\n\t\t\t *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\r\n\t\t\t */\r\n\t\t\t_process: function(doFlush) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\t\t\t\tvar dataSigBytes = data.sigBytes;\r\n\t\t\t\tvar blockSize = this.blockSize;\r\n\t\t\t\tvar blockSizeBytes = blockSize * 4;\r\n\r\n\t\t\t\t// Count blocks ready\r\n\t\t\t\tvar nBlocksReady = dataSigBytes / blockSizeBytes;\r\n\t\t\t\tif (doFlush) {\r\n\t\t\t\t\t// Round up to include partial blocks\r\n\t\t\t\t\tnBlocksReady = Math.ceil(nBlocksReady);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Round down to include only full blocks,\r\n\t\t\t\t\t// less the number of blocks that must remain in the buffer\r\n\t\t\t\t\tnBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Count words ready\r\n\t\t\t\tvar nWordsReady = nBlocksReady * blockSize;\r\n\r\n\t\t\t\t// Count bytes ready\r\n\t\t\t\tvar nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\r\n\r\n\t\t\t\t// Process blocks\r\n\t\t\t\tif (nWordsReady) {\r\n\t\t\t\t\tfor (var offset = 0; offset < nWordsReady; offset += blockSize) {\r\n\t\t\t\t\t\t// Perform concrete-algorithm logic\r\n\t\t\t\t\t\tthis._doProcessBlock(dataWords, offset);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Remove processed words\r\n\t\t\t\t\tvar processedWords = dataWords.splice(0, nWordsReady);\r\n\t\t\t\t\tdata.sigBytes -= nBytesReady;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return processed words\r\n\t\t\t\treturn new WordArray.init(processedWords, nBytesReady);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a copy of this object.\r\n\t\t\t *\r\n\t\t\t * @return {Object} The clone.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var clone = bufferedBlockAlgorithm.clone();\r\n\t\t\t */\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Base.clone.call(this);\r\n\t\t\t\tclone._data = this._data.clone();\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t},\r\n\r\n\t\t\t_minBufferSize: 0\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Abstract hasher template.\r\n\t\t *\r\n\t\t * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\r\n\t\t */\r\n\t\tvar Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t */\r\n\t\t\tcfg: Base.extend(),\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created hasher.\r\n\t\t\t *\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var hasher = CryptoJS.algo.SHA256.create();\r\n\t\t\t */\r\n\t\t\tinit: function(cfg) {\r\n\t\t\t\t// Apply config defaults\r\n\t\t\t\tthis.cfg = this.cfg.extend(cfg);\r\n\r\n\t\t\t\t// Set initial values\r\n\t\t\t\tthis.reset();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Resets this hasher to its initial state.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     hasher.reset();\r\n\t\t\t */\r\n\t\t\treset: function() {\r\n\t\t\t\t// Reset data buffer\r\n\t\t\t\tBufferedBlockAlgorithm.reset.call(this);\r\n\r\n\t\t\t\t// Perform concrete-hasher logic\r\n\t\t\t\tthis._doReset();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Updates this hasher with a message.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} messageUpdate The message to append.\r\n\t\t\t *\r\n\t\t\t * @return {Hasher} This hasher.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     hasher.update('message');\r\n\t\t\t *     hasher.update(wordArray);\r\n\t\t\t */\r\n\t\t\tupdate: function(messageUpdate) {\r\n\t\t\t\t// Append\r\n\t\t\t\tthis._append(messageUpdate);\r\n\r\n\t\t\t\t// Update the hash\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Chainable\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Finalizes the hash computation.\r\n\t\t\t * Note that the finalize operation is effectively a destructive, read-once operation.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The hash.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var hash = hasher.finalize();\r\n\t\t\t *     var hash = hasher.finalize('message');\r\n\t\t\t *     var hash = hasher.finalize(wordArray);\r\n\t\t\t */\r\n\t\t\tfinalize: function(messageUpdate) {\r\n\t\t\t\t// Final message update\r\n\t\t\t\tif (messageUpdate) {\r\n\t\t\t\t\tthis._append(messageUpdate);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Perform concrete-hasher logic\r\n\t\t\t\tvar hash = this._doFinalize();\r\n\r\n\t\t\t\treturn hash;\r\n\t\t\t},\r\n\r\n\t\t\tblockSize: 512 / 32,\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a shortcut function to a hasher's object interface.\r\n\t\t\t *\r\n\t\t\t * @param {Hasher} hasher The hasher to create a helper for.\r\n\t\t\t *\r\n\t\t\t * @return {Function} The shortcut function.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\r\n\t\t\t */\r\n\t\t\t_createHelper: function(hasher) {\r\n\t\t\t\treturn function(message, cfg) {\r\n\t\t\t\t\treturn new hasher.init(cfg).finalize(message);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a shortcut function to the HMAC's object interface.\r\n\t\t\t *\r\n\t\t\t * @param {Hasher} hasher The hasher to use in this HMAC helper.\r\n\t\t\t *\r\n\t\t\t * @return {Function} The shortcut function.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\r\n\t\t\t */\r\n\t\t\t_createHmacHelper: function(hasher) {\r\n\t\t\t\treturn function(message, key) {\r\n\t\t\t\t\treturn new C_algo.HMAC.init(hasher, key).finalize(message);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Algorithm namespace.\r\n\t\t */\r\n\t\tvar C_algo = C.algo = {};\r\n\r\n\t\treturn C;\r\n\t}(Math));\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar C_enc = C.enc;\r\n\r\n\t\t/**\r\n\t\t * Base64 encoding strategy.\r\n\t\t */\r\n\t\tvar Base64 = C_enc.Base64 = {\r\n\t\t\t/**\r\n\t\t\t * Converts a word array to a Base64 string.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array.\r\n\t\t\t *\r\n\t\t\t * @return {string} The Base64 string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\r\n\t\t\t */\r\n\t\t\tstringify: function(wordArray) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar words = wordArray.words;\r\n\t\t\t\tvar sigBytes = wordArray.sigBytes;\r\n\t\t\t\tvar map = this._map;\r\n\r\n\t\t\t\t// Clamp excess bits\r\n\t\t\t\twordArray.clamp();\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar base64Chars = [];\r\n\t\t\t\tfor (var i = 0; i < sigBytes; i += 3) {\r\n\t\t\t\t\tvar byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\r\n\t\t\t\t\tvar byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\r\n\t\t\t\t\tvar byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\r\n\r\n\t\t\t\t\tvar triplet = (byte1 << 16) | (byte2 << 8) | byte3;\r\n\r\n\t\t\t\t\tfor (var j = 0;\r\n\t\t\t\t\t\t(j < 4) && (i + j * 0.75 < sigBytes); j++) {\r\n\t\t\t\t\t\tbase64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tvar paddingChar = map.charAt(64);\r\n\t\t\t\tif (paddingChar) {\r\n\t\t\t\t\twhile (base64Chars.length % 4) {\r\n\t\t\t\t\t\tbase64Chars.push(paddingChar);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn base64Chars.join('');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a Base64 string to a word array.\r\n\t\t\t *\r\n\t\t\t * @param {string} base64Str The Base64 string.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\r\n\t\t\t */\r\n\t\t\tparse: function(base64Str) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar base64StrLength = base64Str.length;\r\n\t\t\t\tvar map = this._map;\r\n\t\t\t\tvar reverseMap = this._reverseMap;\r\n\r\n\t\t\t\tif (!reverseMap) {\r\n\t\t\t\t\treverseMap = this._reverseMap = [];\r\n\t\t\t\t\tfor (var j = 0; j < map.length; j++) {\r\n\t\t\t\t\t\treverseMap[map.charCodeAt(j)] = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Ignore padding\r\n\t\t\t\tvar paddingChar = map.charAt(64);\r\n\t\t\t\tif (paddingChar) {\r\n\t\t\t\t\tvar paddingIndex = base64Str.indexOf(paddingChar);\r\n\t\t\t\t\tif (paddingIndex !== -1) {\r\n\t\t\t\t\t\tbase64StrLength = paddingIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\treturn parseLoop(base64Str, base64StrLength, reverseMap);\r\n\r\n\t\t\t},\r\n\r\n\t\t\t_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\r\n\t\t};\r\n\r\n\t\tfunction parseLoop(base64Str, base64StrLength, reverseMap) {\r\n\t\t\tvar words = [];\r\n\t\t\tvar nBytes = 0;\r\n\t\t\tfor (var i = 0; i < base64StrLength; i++) {\r\n\t\t\t\tif (i % 4) {\r\n\t\t\t\t\tvar bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\r\n\t\t\t\t\tvar bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\r\n\t\t\t\t\twords[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\r\n\t\t\t\t\tnBytes++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn WordArray.create(words, nBytes);\r\n\t\t}\r\n\t}());\r\n\r\n\r\n\t(function(Math) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar Hasher = C_lib.Hasher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Constants table\r\n\t\tvar T = [];\r\n\r\n\t\t// Compute constants\r\n\t\t(function() {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tT[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t/**\r\n\t\t * MD5 hash algorithm.\r\n\t\t */\r\n\t\tvar MD5 = C_algo.MD5 = Hasher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = new WordArray.init([\r\n\t\t\t\t\t0x67452301, 0xefcdab89,\r\n\t\t\t\t\t0x98badcfe, 0x10325476\r\n\t\t\t\t]);\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Swap endian\r\n\t\t\t\tfor (var i = 0; i < 16; i++) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar offset_i = offset + i;\r\n\t\t\t\t\tvar M_offset_i = M[offset_i];\r\n\r\n\t\t\t\t\tM[offset_i] = (\r\n\t\t\t\t\t\t(((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar H = this._hash.words;\r\n\r\n\t\t\t\tvar M_offset_0 = M[offset + 0];\r\n\t\t\t\tvar M_offset_1 = M[offset + 1];\r\n\t\t\t\tvar M_offset_2 = M[offset + 2];\r\n\t\t\t\tvar M_offset_3 = M[offset + 3];\r\n\t\t\t\tvar M_offset_4 = M[offset + 4];\r\n\t\t\t\tvar M_offset_5 = M[offset + 5];\r\n\t\t\t\tvar M_offset_6 = M[offset + 6];\r\n\t\t\t\tvar M_offset_7 = M[offset + 7];\r\n\t\t\t\tvar M_offset_8 = M[offset + 8];\r\n\t\t\t\tvar M_offset_9 = M[offset + 9];\r\n\t\t\t\tvar M_offset_10 = M[offset + 10];\r\n\t\t\t\tvar M_offset_11 = M[offset + 11];\r\n\t\t\t\tvar M_offset_12 = M[offset + 12];\r\n\t\t\t\tvar M_offset_13 = M[offset + 13];\r\n\t\t\t\tvar M_offset_14 = M[offset + 14];\r\n\t\t\t\tvar M_offset_15 = M[offset + 15];\r\n\r\n\t\t\t\t// Working varialbes\r\n\t\t\t\tvar a = H[0];\r\n\t\t\t\tvar b = H[1];\r\n\t\t\t\tvar c = H[2];\r\n\t\t\t\tvar d = H[3];\r\n\r\n\t\t\t\t// Computation\r\n\t\t\t\ta = FF(a, b, c, d, M_offset_0, 7, T[0]);\r\n\t\t\t\td = FF(d, a, b, c, M_offset_1, 12, T[1]);\r\n\t\t\t\tc = FF(c, d, a, b, M_offset_2, 17, T[2]);\r\n\t\t\t\tb = FF(b, c, d, a, M_offset_3, 22, T[3]);\r\n\t\t\t\ta = FF(a, b, c, d, M_offset_4, 7, T[4]);\r\n\t\t\t\td = FF(d, a, b, c, M_offset_5, 12, T[5]);\r\n\t\t\t\tc = FF(c, d, a, b, M_offset_6, 17, T[6]);\r\n\t\t\t\tb = FF(b, c, d, a, M_offset_7, 22, T[7]);\r\n\t\t\t\ta = FF(a, b, c, d, M_offset_8, 7, T[8]);\r\n\t\t\t\td = FF(d, a, b, c, M_offset_9, 12, T[9]);\r\n\t\t\t\tc = FF(c, d, a, b, M_offset_10, 17, T[10]);\r\n\t\t\t\tb = FF(b, c, d, a, M_offset_11, 22, T[11]);\r\n\t\t\t\ta = FF(a, b, c, d, M_offset_12, 7, T[12]);\r\n\t\t\t\td = FF(d, a, b, c, M_offset_13, 12, T[13]);\r\n\t\t\t\tc = FF(c, d, a, b, M_offset_14, 17, T[14]);\r\n\t\t\t\tb = FF(b, c, d, a, M_offset_15, 22, T[15]);\r\n\r\n\t\t\t\ta = GG(a, b, c, d, M_offset_1, 5, T[16]);\r\n\t\t\t\td = GG(d, a, b, c, M_offset_6, 9, T[17]);\r\n\t\t\t\tc = GG(c, d, a, b, M_offset_11, 14, T[18]);\r\n\t\t\t\tb = GG(b, c, d, a, M_offset_0, 20, T[19]);\r\n\t\t\t\ta = GG(a, b, c, d, M_offset_5, 5, T[20]);\r\n\t\t\t\td = GG(d, a, b, c, M_offset_10, 9, T[21]);\r\n\t\t\t\tc = GG(c, d, a, b, M_offset_15, 14, T[22]);\r\n\t\t\t\tb = GG(b, c, d, a, M_offset_4, 20, T[23]);\r\n\t\t\t\ta = GG(a, b, c, d, M_offset_9, 5, T[24]);\r\n\t\t\t\td = GG(d, a, b, c, M_offset_14, 9, T[25]);\r\n\t\t\t\tc = GG(c, d, a, b, M_offset_3, 14, T[26]);\r\n\t\t\t\tb = GG(b, c, d, a, M_offset_8, 20, T[27]);\r\n\t\t\t\ta = GG(a, b, c, d, M_offset_13, 5, T[28]);\r\n\t\t\t\td = GG(d, a, b, c, M_offset_2, 9, T[29]);\r\n\t\t\t\tc = GG(c, d, a, b, M_offset_7, 14, T[30]);\r\n\t\t\t\tb = GG(b, c, d, a, M_offset_12, 20, T[31]);\r\n\r\n\t\t\t\ta = HH(a, b, c, d, M_offset_5, 4, T[32]);\r\n\t\t\t\td = HH(d, a, b, c, M_offset_8, 11, T[33]);\r\n\t\t\t\tc = HH(c, d, a, b, M_offset_11, 16, T[34]);\r\n\t\t\t\tb = HH(b, c, d, a, M_offset_14, 23, T[35]);\r\n\t\t\t\ta = HH(a, b, c, d, M_offset_1, 4, T[36]);\r\n\t\t\t\td = HH(d, a, b, c, M_offset_4, 11, T[37]);\r\n\t\t\t\tc = HH(c, d, a, b, M_offset_7, 16, T[38]);\r\n\t\t\t\tb = HH(b, c, d, a, M_offset_10, 23, T[39]);\r\n\t\t\t\ta = HH(a, b, c, d, M_offset_13, 4, T[40]);\r\n\t\t\t\td = HH(d, a, b, c, M_offset_0, 11, T[41]);\r\n\t\t\t\tc = HH(c, d, a, b, M_offset_3, 16, T[42]);\r\n\t\t\t\tb = HH(b, c, d, a, M_offset_6, 23, T[43]);\r\n\t\t\t\ta = HH(a, b, c, d, M_offset_9, 4, T[44]);\r\n\t\t\t\td = HH(d, a, b, c, M_offset_12, 11, T[45]);\r\n\t\t\t\tc = HH(c, d, a, b, M_offset_15, 16, T[46]);\r\n\t\t\t\tb = HH(b, c, d, a, M_offset_2, 23, T[47]);\r\n\r\n\t\t\t\ta = II(a, b, c, d, M_offset_0, 6, T[48]);\r\n\t\t\t\td = II(d, a, b, c, M_offset_7, 10, T[49]);\r\n\t\t\t\tc = II(c, d, a, b, M_offset_14, 15, T[50]);\r\n\t\t\t\tb = II(b, c, d, a, M_offset_5, 21, T[51]);\r\n\t\t\t\ta = II(a, b, c, d, M_offset_12, 6, T[52]);\r\n\t\t\t\td = II(d, a, b, c, M_offset_3, 10, T[53]);\r\n\t\t\t\tc = II(c, d, a, b, M_offset_10, 15, T[54]);\r\n\t\t\t\tb = II(b, c, d, a, M_offset_1, 21, T[55]);\r\n\t\t\t\ta = II(a, b, c, d, M_offset_8, 6, T[56]);\r\n\t\t\t\td = II(d, a, b, c, M_offset_15, 10, T[57]);\r\n\t\t\t\tc = II(c, d, a, b, M_offset_6, 15, T[58]);\r\n\t\t\t\tb = II(b, c, d, a, M_offset_13, 21, T[59]);\r\n\t\t\t\ta = II(a, b, c, d, M_offset_4, 6, T[60]);\r\n\t\t\t\td = II(d, a, b, c, M_offset_11, 10, T[61]);\r\n\t\t\t\tc = II(c, d, a, b, M_offset_2, 15, T[62]);\r\n\t\t\t\tb = II(b, c, d, a, M_offset_9, 21, T[63]);\r\n\r\n\t\t\t\t// Intermediate hash value\r\n\t\t\t\tH[0] = (H[0] + a) | 0;\r\n\t\t\t\tH[1] = (H[1] + b) | 0;\r\n\t\t\t\tH[2] = (H[2] + c) | 0;\r\n\t\t\t\tH[3] = (H[3] + d) | 0;\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\r\n\t\t\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\t\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\r\n\t\t\t\tvar nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\r\n\t\t\t\tvar nBitsTotalL = nBitsTotal;\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\r\n\t\t\t\t\t(((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t(((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\r\n\t\t\t\t);\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\r\n\t\t\t\t\t(((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t(((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tdata.sigBytes = (dataWords.length + 1) * 4;\r\n\r\n\t\t\t\t// Hash final blocks\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar hash = this._hash;\r\n\t\t\t\tvar H = hash.words;\r\n\r\n\t\t\t\t// Swap endian\r\n\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\t// Shortcut\r\n\t\t\t\t\tvar H_i = H[i];\r\n\r\n\t\t\t\t\tH[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return final computed hash\r\n\t\t\t\treturn hash;\r\n\t\t\t},\r\n\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Hasher.clone.call(this);\r\n\t\t\t\tclone._hash = this._hash.clone();\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction FF(a, b, c, d, x, s, t) {\r\n\t\t\tvar n = a + ((b & c) | (~b & d)) + x + t;\r\n\t\t\treturn ((n << s) | (n >>> (32 - s))) + b;\r\n\t\t}\r\n\r\n\t\tfunction GG(a, b, c, d, x, s, t) {\r\n\t\t\tvar n = a + ((b & d) | (c & ~d)) + x + t;\r\n\t\t\treturn ((n << s) | (n >>> (32 - s))) + b;\r\n\t\t}\r\n\r\n\t\tfunction HH(a, b, c, d, x, s, t) {\r\n\t\t\tvar n = a + (b ^ c ^ d) + x + t;\r\n\t\t\treturn ((n << s) | (n >>> (32 - s))) + b;\r\n\t\t}\r\n\r\n\t\tfunction II(a, b, c, d, x, s, t) {\r\n\t\t\tvar n = a + (c ^ (b | ~d)) + x + t;\r\n\t\t\treturn ((n << s) | (n >>> (32 - s))) + b;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.MD5('message');\r\n\t\t *     var hash = CryptoJS.MD5(wordArray);\r\n\t\t */\r\n\t\tC.MD5 = Hasher._createHelper(MD5);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacMD5(message, key);\r\n\t\t */\r\n\t\tC.HmacMD5 = Hasher._createHmacHelper(MD5);\r\n\t}(Math));\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar Hasher = C_lib.Hasher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Reusable object\r\n\t\tvar W = [];\r\n\r\n\t\t/**\r\n\t\t * SHA-1 hash algorithm.\r\n\t\t */\r\n\t\tvar SHA1 = C_algo.SHA1 = Hasher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = new WordArray.init([\r\n\t\t\t\t\t0x67452301, 0xefcdab89,\r\n\t\t\t\t\t0x98badcfe, 0x10325476,\r\n\t\t\t\t\t0xc3d2e1f0\r\n\t\t\t\t]);\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar H = this._hash.words;\r\n\r\n\t\t\t\t// Working variables\r\n\t\t\t\tvar a = H[0];\r\n\t\t\t\tvar b = H[1];\r\n\t\t\t\tvar c = H[2];\r\n\t\t\t\tvar d = H[3];\r\n\t\t\t\tvar e = H[4];\r\n\r\n\t\t\t\t// Computation\r\n\t\t\t\tfor (var i = 0; i < 80; i++) {\r\n\t\t\t\t\tif (i < 16) {\r\n\t\t\t\t\t\tW[i] = M[offset + i] | 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\r\n\t\t\t\t\t\tW[i] = (n << 1) | (n >>> 31);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar t = ((a << 5) | (a >>> 27)) + e + W[i];\r\n\t\t\t\t\tif (i < 20) {\r\n\t\t\t\t\t\tt += ((b & c) | (~b & d)) + 0x5a827999;\r\n\t\t\t\t\t} else if (i < 40) {\r\n\t\t\t\t\t\tt += (b ^ c ^ d) + 0x6ed9eba1;\r\n\t\t\t\t\t} else if (i < 60) {\r\n\t\t\t\t\t\tt += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\r\n\t\t\t\t\t} else /* if (i < 80) */ {\r\n\t\t\t\t\t\tt += (b ^ c ^ d) - 0x359d3e2a;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\te = d;\r\n\t\t\t\t\td = c;\r\n\t\t\t\t\tc = (b << 30) | (b >>> 2);\r\n\t\t\t\t\tb = a;\r\n\t\t\t\t\ta = t;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Intermediate hash value\r\n\t\t\t\tH[0] = (H[0] + a) | 0;\r\n\t\t\t\tH[1] = (H[1] + b) | 0;\r\n\t\t\t\tH[2] = (H[2] + c) | 0;\r\n\t\t\t\tH[3] = (H[3] + d) | 0;\r\n\t\t\t\tH[4] = (H[4] + e) | 0;\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\r\n\t\t\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\t\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal /\r\n\t\t\t\t\t0x100000000);\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n\t\t\t\tdata.sigBytes = dataWords.length * 4;\r\n\r\n\t\t\t\t// Hash final blocks\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Return final computed hash\r\n\t\t\t\treturn this._hash;\r\n\t\t\t},\r\n\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Hasher.clone.call(this);\r\n\t\t\t\tclone._hash = this._hash.clone();\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.SHA1('message');\r\n\t\t *     var hash = CryptoJS.SHA1(wordArray);\r\n\t\t */\r\n\t\tC.SHA1 = Hasher._createHelper(SHA1);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacSHA1(message, key);\r\n\t\t */\r\n\t\tC.HmacSHA1 = Hasher._createHmacHelper(SHA1);\r\n\t}());\r\n\r\n\r\n\t(function(Math) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar Hasher = C_lib.Hasher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Initialization and round constants tables\r\n\t\tvar H = [];\r\n\t\tvar K = [];\r\n\r\n\t\t// Compute constants\r\n\t\t(function() {\r\n\t\t\tfunction isPrime(n) {\r\n\t\t\t\tvar sqrtN = Math.sqrt(n);\r\n\t\t\t\tfor (var factor = 2; factor <= sqrtN; factor++) {\r\n\t\t\t\t\tif (!(n % factor)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\tfunction getFractionalBits(n) {\r\n\t\t\t\treturn ((n - (n | 0)) * 0x100000000) | 0;\r\n\t\t\t}\r\n\r\n\t\t\tvar n = 2;\r\n\t\t\tvar nPrime = 0;\r\n\t\t\twhile (nPrime < 64) {\r\n\t\t\t\tif (isPrime(n)) {\r\n\t\t\t\t\tif (nPrime < 8) {\r\n\t\t\t\t\t\tH[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tK[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n\t\t\t\t\tnPrime++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tn++;\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t// Reusable object\r\n\t\tvar W = [];\r\n\r\n\t\t/**\r\n\t\t * SHA-256 hash algorithm.\r\n\t\t */\r\n\t\tvar SHA256 = C_algo.SHA256 = Hasher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = new WordArray.init(H.slice(0));\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar H = this._hash.words;\r\n\r\n\t\t\t\t// Working variables\r\n\t\t\t\tvar a = H[0];\r\n\t\t\t\tvar b = H[1];\r\n\t\t\t\tvar c = H[2];\r\n\t\t\t\tvar d = H[3];\r\n\t\t\t\tvar e = H[4];\r\n\t\t\t\tvar f = H[5];\r\n\t\t\t\tvar g = H[6];\r\n\t\t\t\tvar h = H[7];\r\n\r\n\t\t\t\t// Computation\r\n\t\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\t\tif (i < 16) {\r\n\t\t\t\t\t\tW[i] = M[offset + i] | 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar gamma0x = W[i - 15];\r\n\t\t\t\t\t\tvar gamma0 = ((gamma0x << 25) | (gamma0x >>> 7)) ^\r\n\t\t\t\t\t\t\t((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n\t\t\t\t\t\t\t(gamma0x >>> 3);\r\n\r\n\t\t\t\t\t\tvar gamma1x = W[i - 2];\r\n\t\t\t\t\t\tvar gamma1 = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n\t\t\t\t\t\t\t((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n\t\t\t\t\t\t\t(gamma1x >>> 10);\r\n\r\n\t\t\t\t\t\tW[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar ch = (e & f) ^ (~e & g);\r\n\t\t\t\t\tvar maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n\t\t\t\t\tvar sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a <<\r\n\t\t\t\t\t\t10) | (a >>> 22));\r\n\t\t\t\t\tvar sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e <<\r\n\t\t\t\t\t\t7) | (e >>> 25));\r\n\r\n\t\t\t\t\tvar t1 = h + sigma1 + ch + K[i] + W[i];\r\n\t\t\t\t\tvar t2 = sigma0 + maj;\r\n\r\n\t\t\t\t\th = g;\r\n\t\t\t\t\tg = f;\r\n\t\t\t\t\tf = e;\r\n\t\t\t\t\te = (d + t1) | 0;\r\n\t\t\t\t\td = c;\r\n\t\t\t\t\tc = b;\r\n\t\t\t\t\tb = a;\r\n\t\t\t\t\ta = (t1 + t2) | 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Intermediate hash value\r\n\t\t\t\tH[0] = (H[0] + a) | 0;\r\n\t\t\t\tH[1] = (H[1] + b) | 0;\r\n\t\t\t\tH[2] = (H[2] + c) | 0;\r\n\t\t\t\tH[3] = (H[3] + d) | 0;\r\n\t\t\t\tH[4] = (H[4] + e) | 0;\r\n\t\t\t\tH[5] = (H[5] + f) | 0;\r\n\t\t\t\tH[6] = (H[6] + g) | 0;\r\n\t\t\t\tH[7] = (H[7] + h) | 0;\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\r\n\t\t\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\t\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal /\r\n\t\t\t\t\t0x100000000);\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n\t\t\t\tdata.sigBytes = dataWords.length * 4;\r\n\r\n\t\t\t\t// Hash final blocks\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Return final computed hash\r\n\t\t\t\treturn this._hash;\r\n\t\t\t},\r\n\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Hasher.clone.call(this);\r\n\t\t\t\tclone._hash = this._hash.clone();\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.SHA256('message');\r\n\t\t *     var hash = CryptoJS.SHA256(wordArray);\r\n\t\t */\r\n\t\tC.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n\t\t */\r\n\t\tC.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n\t}(Math));\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar C_enc = C.enc;\r\n\r\n\t\t/**\r\n\t\t * UTF-16 BE encoding strategy.\r\n\t\t */\r\n\t\tvar Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\r\n\t\t\t/**\r\n\t\t\t * Converts a word array to a UTF-16 BE string.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array.\r\n\t\t\t *\r\n\t\t\t * @return {string} The UTF-16 BE string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\r\n\t\t\t */\r\n\t\t\tstringify: function(wordArray) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar words = wordArray.words;\r\n\t\t\t\tvar sigBytes = wordArray.sigBytes;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar utf16Chars = [];\r\n\t\t\t\tfor (var i = 0; i < sigBytes; i += 2) {\r\n\t\t\t\t\tvar codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\r\n\t\t\t\t\tutf16Chars.push(String.fromCharCode(codePoint));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn utf16Chars.join('');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a UTF-16 BE string to a word array.\r\n\t\t\t *\r\n\t\t\t * @param {string} utf16Str The UTF-16 BE string.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\r\n\t\t\t */\r\n\t\t\tparse: function(utf16Str) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar utf16StrLength = utf16Str.length;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar words = [];\r\n\t\t\t\tfor (var i = 0; i < utf16StrLength; i++) {\r\n\t\t\t\t\twords[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn WordArray.create(words, utf16StrLength * 2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * UTF-16 LE encoding strategy.\r\n\t\t */\r\n\t\tC_enc.Utf16LE = {\r\n\t\t\t/**\r\n\t\t\t * Converts a word array to a UTF-16 LE string.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} wordArray The word array.\r\n\t\t\t *\r\n\t\t\t * @return {string} The UTF-16 LE string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\r\n\t\t\t */\r\n\t\t\tstringify: function(wordArray) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar words = wordArray.words;\r\n\t\t\t\tvar sigBytes = wordArray.sigBytes;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar utf16Chars = [];\r\n\t\t\t\tfor (var i = 0; i < sigBytes; i += 2) {\r\n\t\t\t\t\tvar codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\r\n\t\t\t\t\tutf16Chars.push(String.fromCharCode(codePoint));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn utf16Chars.join('');\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a UTF-16 LE string to a word array.\r\n\t\t\t *\r\n\t\t\t * @param {string} utf16Str The UTF-16 LE string.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The word array.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\r\n\t\t\t */\r\n\t\t\tparse: function(utf16Str) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar utf16StrLength = utf16Str.length;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar words = [];\r\n\t\t\t\tfor (var i = 0; i < utf16StrLength; i++) {\r\n\t\t\t\t\twords[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn WordArray.create(words, utf16StrLength * 2);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfunction swapEndian(word) {\r\n\t\t\treturn ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\r\n\t\t}\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Check if typed arrays are supported\r\n\t\tif (typeof ArrayBuffer != 'function') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\r\n\t\t// Reference original init\r\n\t\tvar superInit = WordArray.init;\r\n\r\n\t\t// Augment WordArray.init to handle typed arrays\r\n\t\tvar subInit = WordArray.init = function(typedArray) {\r\n\t\t\t// Convert buffers to uint8\r\n\t\t\tif (typedArray instanceof ArrayBuffer) {\r\n\t\t\t\ttypedArray = new Uint8Array(typedArray);\r\n\t\t\t}\r\n\r\n\t\t\t// Convert other array views to uint8\r\n\t\t\tif (\r\n\t\t\t\ttypedArray instanceof Int8Array ||\r\n\t\t\t\t(typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\r\n\t\t\t\ttypedArray instanceof Int16Array ||\r\n\t\t\t\ttypedArray instanceof Uint16Array ||\r\n\t\t\t\ttypedArray instanceof Int32Array ||\r\n\t\t\t\ttypedArray instanceof Uint32Array ||\r\n\t\t\t\ttypedArray instanceof Float32Array ||\r\n\t\t\t\ttypedArray instanceof Float64Array\r\n\t\t\t) {\r\n\t\t\t\ttypedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray\r\n\t\t\t\t\t.byteLength);\r\n\t\t\t}\r\n\r\n\t\t\t// Handle Uint8Array\r\n\t\t\tif (typedArray instanceof Uint8Array) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar typedArrayByteLength = typedArray.byteLength;\r\n\r\n\t\t\t\t// Extract bytes\r\n\t\t\t\tvar words = [];\r\n\t\t\t\tfor (var i = 0; i < typedArrayByteLength; i++) {\r\n\t\t\t\t\twords[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Initialize this word array\r\n\t\t\t\tsuperInit.call(this, words, typedArrayByteLength);\r\n\t\t\t} else {\r\n\t\t\t\t// Else call normal init\r\n\t\t\t\tsuperInit.apply(this, arguments);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tsubInit.prototype = WordArray;\r\n\t}());\r\n\r\n\r\n\t/** @preserve\r\n\t(c) 2012 by Cédric Mesnil. All rights reserved.\r\n\r\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\r\n\r\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\r\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\r\n\r\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\t*/\r\n\r\n\t(function(Math) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar Hasher = C_lib.Hasher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Constants table\r\n\t\tvar _zl = WordArray.create([\r\n\t\t\t0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\r\n\t\t\t7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\r\n\t\t\t3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\r\n\t\t\t1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\r\n\t\t\t4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\r\n\t\t]);\r\n\t\tvar _zr = WordArray.create([\r\n\t\t\t5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\r\n\t\t\t6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\r\n\t\t\t15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\r\n\t\t\t8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\r\n\t\t\t12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\r\n\t\t]);\r\n\t\tvar _sl = WordArray.create([\r\n\t\t\t11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\r\n\t\t\t7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\r\n\t\t\t11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\r\n\t\t\t11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\r\n\t\t\t9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\r\n\t\t]);\r\n\t\tvar _sr = WordArray.create([\r\n\t\t\t8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\r\n\t\t\t9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\r\n\t\t\t9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\r\n\t\t\t15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\r\n\t\t\t8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\r\n\t\t]);\r\n\r\n\t\tvar _hl = WordArray.create([0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\r\n\t\tvar _hr = WordArray.create([0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\r\n\r\n\t\t/**\r\n\t\t * RIPEMD160 hash algorithm.\r\n\t\t */\r\n\t\tvar RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476,\r\n\t\t\t\t\t0xC3D2E1F0\r\n\t\t\t\t]);\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\r\n\t\t\t\t// Swap endian\r\n\t\t\t\tfor (var i = 0; i < 16; i++) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar offset_i = offset + i;\r\n\t\t\t\t\tvar M_offset_i = M[offset_i];\r\n\r\n\t\t\t\t\t// Swap\r\n\t\t\t\t\tM[offset_i] = (\r\n\t\t\t\t\t\t(((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar H = this._hash.words;\r\n\t\t\t\tvar hl = _hl.words;\r\n\t\t\t\tvar hr = _hr.words;\r\n\t\t\t\tvar zl = _zl.words;\r\n\t\t\t\tvar zr = _zr.words;\r\n\t\t\t\tvar sl = _sl.words;\r\n\t\t\t\tvar sr = _sr.words;\r\n\r\n\t\t\t\t// Working variables\r\n\t\t\t\tvar al, bl, cl, dl, el;\r\n\t\t\t\tvar ar, br, cr, dr, er;\r\n\r\n\t\t\t\tar = al = H[0];\r\n\t\t\t\tbr = bl = H[1];\r\n\t\t\t\tcr = cl = H[2];\r\n\t\t\t\tdr = dl = H[3];\r\n\t\t\t\ter = el = H[4];\r\n\t\t\t\t// Computation\r\n\t\t\t\tvar t;\r\n\t\t\t\tfor (var i = 0; i < 80; i += 1) {\r\n\t\t\t\t\tt = (al + M[offset + zl[i]]) | 0;\r\n\t\t\t\t\tif (i < 16) {\r\n\t\t\t\t\t\tt += f1(bl, cl, dl) + hl[0];\r\n\t\t\t\t\t} else if (i < 32) {\r\n\t\t\t\t\t\tt += f2(bl, cl, dl) + hl[1];\r\n\t\t\t\t\t} else if (i < 48) {\r\n\t\t\t\t\t\tt += f3(bl, cl, dl) + hl[2];\r\n\t\t\t\t\t} else if (i < 64) {\r\n\t\t\t\t\t\tt += f4(bl, cl, dl) + hl[3];\r\n\t\t\t\t\t} else { // if (i<80) {\r\n\t\t\t\t\t\tt += f5(bl, cl, dl) + hl[4];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt = t | 0;\r\n\t\t\t\t\tt = rotl(t, sl[i]);\r\n\t\t\t\t\tt = (t + el) | 0;\r\n\t\t\t\t\tal = el;\r\n\t\t\t\t\tel = dl;\r\n\t\t\t\t\tdl = rotl(cl, 10);\r\n\t\t\t\t\tcl = bl;\r\n\t\t\t\t\tbl = t;\r\n\r\n\t\t\t\t\tt = (ar + M[offset + zr[i]]) | 0;\r\n\t\t\t\t\tif (i < 16) {\r\n\t\t\t\t\t\tt += f5(br, cr, dr) + hr[0];\r\n\t\t\t\t\t} else if (i < 32) {\r\n\t\t\t\t\t\tt += f4(br, cr, dr) + hr[1];\r\n\t\t\t\t\t} else if (i < 48) {\r\n\t\t\t\t\t\tt += f3(br, cr, dr) + hr[2];\r\n\t\t\t\t\t} else if (i < 64) {\r\n\t\t\t\t\t\tt += f2(br, cr, dr) + hr[3];\r\n\t\t\t\t\t} else { // if (i<80) {\r\n\t\t\t\t\t\tt += f1(br, cr, dr) + hr[4];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tt = t | 0;\r\n\t\t\t\t\tt = rotl(t, sr[i]);\r\n\t\t\t\t\tt = (t + er) | 0;\r\n\t\t\t\t\tar = er;\r\n\t\t\t\t\ter = dr;\r\n\t\t\t\t\tdr = rotl(cr, 10);\r\n\t\t\t\t\tcr = br;\r\n\t\t\t\t\tbr = t;\r\n\t\t\t\t}\r\n\t\t\t\t// Intermediate hash value\r\n\t\t\t\tt = (H[1] + cl + dr) | 0;\r\n\t\t\t\tH[1] = (H[2] + dl + er) | 0;\r\n\t\t\t\tH[2] = (H[3] + el + ar) | 0;\r\n\t\t\t\tH[3] = (H[4] + al + br) | 0;\r\n\t\t\t\tH[4] = (H[0] + bl + cr) | 0;\r\n\t\t\t\tH[0] = t;\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\r\n\t\t\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\t\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\t\t\t\tdataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\r\n\t\t\t\t\t(((nBitsTotal << 8) | (nBitsTotal >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t(((nBitsTotal << 24) | (nBitsTotal >>> 8)) & 0xff00ff00)\r\n\t\t\t\t);\r\n\t\t\t\tdata.sigBytes = (dataWords.length + 1) * 4;\r\n\r\n\t\t\t\t// Hash final blocks\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar hash = this._hash;\r\n\t\t\t\tvar H = hash.words;\r\n\r\n\t\t\t\t// Swap endian\r\n\t\t\t\tfor (var i = 0; i < 5; i++) {\r\n\t\t\t\t\t// Shortcut\r\n\t\t\t\t\tvar H_i = H[i];\r\n\r\n\t\t\t\t\t// Swap\r\n\t\t\t\t\tH[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return final computed hash\r\n\t\t\t\treturn hash;\r\n\t\t\t},\r\n\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Hasher.clone.call(this);\r\n\t\t\t\tclone._hash = this._hash.clone();\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\tfunction f1(x, y, z) {\r\n\t\t\treturn ((x) ^ (y) ^ (z));\r\n\r\n\t\t}\r\n\r\n\t\tfunction f2(x, y, z) {\r\n\t\t\treturn (((x) & (y)) | ((~x) & (z)));\r\n\t\t}\r\n\r\n\t\tfunction f3(x, y, z) {\r\n\t\t\treturn (((x) | (~(y))) ^ (z));\r\n\t\t}\r\n\r\n\t\tfunction f4(x, y, z) {\r\n\t\t\treturn (((x) & (z)) | ((y) & (~(z))));\r\n\t\t}\r\n\r\n\t\tfunction f5(x, y, z) {\r\n\t\t\treturn ((x) ^ ((y) | (~(z))));\r\n\r\n\t\t}\r\n\r\n\t\tfunction rotl(x, n) {\r\n\t\t\treturn (x << n) | (x >>> (32 - n));\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.RIPEMD160('message');\r\n\t\t *     var hash = CryptoJS.RIPEMD160(wordArray);\r\n\t\t */\r\n\t\tC.RIPEMD160 = Hasher._createHelper(RIPEMD160);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\r\n\t\t */\r\n\t\tC.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\r\n\t}(Math));\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar Base = C_lib.Base;\r\n\t\tvar C_enc = C.enc;\r\n\t\tvar Utf8 = C_enc.Utf8;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t/**\r\n\t\t * HMAC algorithm.\r\n\t\t */\r\n\t\tvar HMAC = C_algo.HMAC = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created HMAC.\r\n\t\t\t *\r\n\t\t\t * @param {Hasher} hasher The hash algorithm to use.\r\n\t\t\t * @param {WordArray|string} key The secret key.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\r\n\t\t\t */\r\n\t\t\tinit: function(hasher, key) {\r\n\t\t\t\t// Init hasher\r\n\t\t\t\thasher = this._hasher = new hasher.init();\r\n\r\n\t\t\t\t// Convert string to WordArray, else assume WordArray already\r\n\t\t\t\tif (typeof key == 'string') {\r\n\t\t\t\t\tkey = Utf8.parse(key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar hasherBlockSize = hasher.blockSize;\r\n\t\t\t\tvar hasherBlockSizeBytes = hasherBlockSize * 4;\r\n\r\n\t\t\t\t// Allow arbitrary length keys\r\n\t\t\t\tif (key.sigBytes > hasherBlockSizeBytes) {\r\n\t\t\t\t\tkey = hasher.finalize(key);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Clamp excess bits\r\n\t\t\t\tkey.clamp();\r\n\r\n\t\t\t\t// Clone key for inner and outer pads\r\n\t\t\t\tvar oKey = this._oKey = key.clone();\r\n\t\t\t\tvar iKey = this._iKey = key.clone();\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar oKeyWords = oKey.words;\r\n\t\t\t\tvar iKeyWords = iKey.words;\r\n\r\n\t\t\t\t// XOR keys with pad constants\r\n\t\t\t\tfor (var i = 0; i < hasherBlockSize; i++) {\r\n\t\t\t\t\toKeyWords[i] ^= 0x5c5c5c5c;\r\n\t\t\t\t\tiKeyWords[i] ^= 0x36363636;\r\n\t\t\t\t}\r\n\t\t\t\toKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\r\n\r\n\t\t\t\t// Set initial values\r\n\t\t\t\tthis.reset();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Resets this HMAC to its initial state.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     hmacHasher.reset();\r\n\t\t\t */\r\n\t\t\treset: function() {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar hasher = this._hasher;\r\n\r\n\t\t\t\t// Reset\r\n\t\t\t\thasher.reset();\r\n\t\t\t\thasher.update(this._iKey);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Updates this HMAC with a message.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} messageUpdate The message to append.\r\n\t\t\t *\r\n\t\t\t * @return {HMAC} This HMAC instance.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     hmacHasher.update('message');\r\n\t\t\t *     hmacHasher.update(wordArray);\r\n\t\t\t */\r\n\t\t\tupdate: function(messageUpdate) {\r\n\t\t\t\tthis._hasher.update(messageUpdate);\r\n\r\n\t\t\t\t// Chainable\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Finalizes the HMAC computation.\r\n\t\t\t * Note that the finalize operation is effectively a destructive, read-once operation.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} messageUpdate (Optional) A final message update.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The HMAC.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var hmac = hmacHasher.finalize();\r\n\t\t\t *     var hmac = hmacHasher.finalize('message');\r\n\t\t\t *     var hmac = hmacHasher.finalize(wordArray);\r\n\t\t\t */\r\n\t\t\tfinalize: function(messageUpdate) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar hasher = this._hasher;\r\n\r\n\t\t\t\t// Compute HMAC\r\n\t\t\t\tvar innerHash = hasher.finalize(messageUpdate);\r\n\t\t\t\thasher.reset();\r\n\t\t\t\tvar hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\r\n\r\n\t\t\t\treturn hmac;\r\n\t\t\t}\r\n\t\t});\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar Base = C_lib.Base;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar C_algo = C.algo;\r\n\t\tvar SHA1 = C_algo.SHA1;\r\n\t\tvar HMAC = C_algo.HMAC;\r\n\r\n\t\t/**\r\n\t\t * Password-Based Key Derivation Function 2 algorithm.\r\n\t\t */\r\n\t\tvar PBKDF2 = C_algo.PBKDF2 = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\r\n\t\t\t * @property {Hasher} hasher The hasher to use. Default: SHA1\r\n\t\t\t * @property {number} iterations The number of iterations to perform. Default: 1\r\n\t\t\t */\r\n\t\t\tcfg: Base.extend({\r\n\t\t\t\tkeySize: 128 / 32,\r\n\t\t\t\thasher: SHA1,\r\n\t\t\t\titerations: 1\r\n\t\t\t}),\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created key derivation function.\r\n\t\t\t *\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for the derivation.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var kdf = CryptoJS.algo.PBKDF2.create();\r\n\t\t\t *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\r\n\t\t\t *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\r\n\t\t\t */\r\n\t\t\tinit: function(cfg) {\r\n\t\t\t\tthis.cfg = this.cfg.extend(cfg);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Computes the Password-Based Key Derivation Function 2.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} password The password.\r\n\t\t\t * @param {WordArray|string} salt A salt.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The derived key.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var key = kdf.compute(password, salt);\r\n\t\t\t */\r\n\t\t\tcompute: function(password, salt) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar cfg = this.cfg;\r\n\r\n\t\t\t\t// Init HMAC\r\n\t\t\t\tvar hmac = HMAC.create(cfg.hasher, password);\r\n\r\n\t\t\t\t// Initial values\r\n\t\t\t\tvar derivedKey = WordArray.create();\r\n\t\t\t\tvar blockIndex = WordArray.create([0x00000001]);\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar derivedKeyWords = derivedKey.words;\r\n\t\t\t\tvar blockIndexWords = blockIndex.words;\r\n\t\t\t\tvar keySize = cfg.keySize;\r\n\t\t\t\tvar iterations = cfg.iterations;\r\n\r\n\t\t\t\t// Generate key\r\n\t\t\t\twhile (derivedKeyWords.length < keySize) {\r\n\t\t\t\t\tvar block = hmac.update(salt).finalize(blockIndex);\r\n\t\t\t\t\thmac.reset();\r\n\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar blockWords = block.words;\r\n\t\t\t\t\tvar blockWordsLength = blockWords.length;\r\n\r\n\t\t\t\t\t// Iterations\r\n\t\t\t\t\tvar intermediate = block;\r\n\t\t\t\t\tfor (var i = 1; i < iterations; i++) {\r\n\t\t\t\t\t\tintermediate = hmac.finalize(intermediate);\r\n\t\t\t\t\t\thmac.reset();\r\n\r\n\t\t\t\t\t\t// Shortcut\r\n\t\t\t\t\t\tvar intermediateWords = intermediate.words;\r\n\r\n\t\t\t\t\t\t// XOR intermediate with block\r\n\t\t\t\t\t\tfor (var j = 0; j < blockWordsLength; j++) {\r\n\t\t\t\t\t\t\tblockWords[j] ^= intermediateWords[j];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tderivedKey.concat(block);\r\n\t\t\t\t\tblockIndexWords[0]++;\r\n\t\t\t\t}\r\n\t\t\t\tderivedKey.sigBytes = keySize * 4;\r\n\r\n\t\t\t\treturn derivedKey;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Computes the Password-Based Key Derivation Function 2.\r\n\t\t *\r\n\t\t * @param {WordArray|string} password The password.\r\n\t\t * @param {WordArray|string} salt A salt.\r\n\t\t * @param {Object} cfg (Optional) The configuration options to use for this computation.\r\n\t\t *\r\n\t\t * @return {WordArray} The derived key.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var key = CryptoJS.PBKDF2(password, salt);\r\n\t\t *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\r\n\t\t *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\r\n\t\t */\r\n\t\tC.PBKDF2 = function(password, salt, cfg) {\r\n\t\t\treturn PBKDF2.create(cfg).compute(password, salt);\r\n\t\t};\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar Base = C_lib.Base;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar C_algo = C.algo;\r\n\t\tvar MD5 = C_algo.MD5;\r\n\r\n\t\t/**\r\n\t\t * This key derivation function is meant to conform with EVP_BytesToKey.\r\n\t\t * www.openssl.org/docs/crypto/EVP_BytesToKey.html\r\n\t\t */\r\n\t\tvar EvpKDF = C_algo.EvpKDF = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\r\n\t\t\t * @property {Hasher} hasher The hash algorithm to use. Default: MD5\r\n\t\t\t * @property {number} iterations The number of iterations to perform. Default: 1\r\n\t\t\t */\r\n\t\t\tcfg: Base.extend({\r\n\t\t\t\tkeySize: 128 / 32,\r\n\t\t\t\thasher: MD5,\r\n\t\t\t\titerations: 1\r\n\t\t\t}),\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created key derivation function.\r\n\t\t\t *\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for the derivation.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var kdf = CryptoJS.algo.EvpKDF.create();\r\n\t\t\t *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\r\n\t\t\t *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\r\n\t\t\t */\r\n\t\t\tinit: function(cfg) {\r\n\t\t\t\tthis.cfg = this.cfg.extend(cfg);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Derives a key from a password.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} password The password.\r\n\t\t\t * @param {WordArray|string} salt A salt.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The derived key.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var key = kdf.compute(password, salt);\r\n\t\t\t */\r\n\t\t\tcompute: function(password, salt) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar cfg = this.cfg;\r\n\r\n\t\t\t\t// Init hasher\r\n\t\t\t\tvar hasher = cfg.hasher.create();\r\n\r\n\t\t\t\t// Initial values\r\n\t\t\t\tvar derivedKey = WordArray.create();\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar derivedKeyWords = derivedKey.words;\r\n\t\t\t\tvar keySize = cfg.keySize;\r\n\t\t\t\tvar iterations = cfg.iterations;\r\n\r\n\t\t\t\t// Generate key\r\n\t\t\t\twhile (derivedKeyWords.length < keySize) {\r\n\t\t\t\t\tif (block) {\r\n\t\t\t\t\t\thasher.update(block);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar block = hasher.update(password).finalize(salt);\r\n\t\t\t\t\thasher.reset();\r\n\r\n\t\t\t\t\t// Iterations\r\n\t\t\t\t\tfor (var i = 1; i < iterations; i++) {\r\n\t\t\t\t\t\tblock = hasher.finalize(block);\r\n\t\t\t\t\t\thasher.reset();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tderivedKey.concat(block);\r\n\t\t\t\t}\r\n\t\t\t\tderivedKey.sigBytes = keySize * 4;\r\n\r\n\t\t\t\treturn derivedKey;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Derives a key from a password.\r\n\t\t *\r\n\t\t * @param {WordArray|string} password The password.\r\n\t\t * @param {WordArray|string} salt A salt.\r\n\t\t * @param {Object} cfg (Optional) The configuration options to use for this computation.\r\n\t\t *\r\n\t\t * @return {WordArray} The derived key.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var key = CryptoJS.EvpKDF(password, salt);\r\n\t\t *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\r\n\t\t *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\r\n\t\t */\r\n\t\tC.EvpKDF = function(password, salt, cfg) {\r\n\t\t\treturn EvpKDF.create(cfg).compute(password, salt);\r\n\t\t};\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar C_algo = C.algo;\r\n\t\tvar SHA256 = C_algo.SHA256;\r\n\r\n\t\t/**\r\n\t\t * SHA-224 hash algorithm.\r\n\t\t */\r\n\t\tvar SHA224 = C_algo.SHA224 = SHA256.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = new WordArray.init([\r\n\t\t\t\t\t0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\r\n\t\t\t\t\t0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\r\n\t\t\t\t]);\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\tvar hash = SHA256._doFinalize.call(this);\r\n\r\n\t\t\t\thash.sigBytes -= 4;\r\n\r\n\t\t\t\treturn hash;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.SHA224('message');\r\n\t\t *     var hash = CryptoJS.SHA224(wordArray);\r\n\t\t */\r\n\t\tC.SHA224 = SHA256._createHelper(SHA224);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacSHA224(message, key);\r\n\t\t */\r\n\t\tC.HmacSHA224 = SHA256._createHmacHelper(SHA224);\r\n\t}());\r\n\r\n\r\n\t(function(undefined) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar Base = C_lib.Base;\r\n\t\tvar X32WordArray = C_lib.WordArray;\r\n\r\n\t\t/**\r\n\t\t * x64 namespace.\r\n\t\t */\r\n\t\tvar C_x64 = C.x64 = {};\r\n\r\n\t\t/**\r\n\t\t * A 64-bit word.\r\n\t\t */\r\n\t\tvar X64Word = C_x64.Word = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created 64-bit word.\r\n\t\t\t *\r\n\t\t\t * @param {number} high The high 32 bits.\r\n\t\t\t * @param {number} low The low 32 bits.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\r\n\t\t\t */\r\n\t\t\tinit: function(high, low) {\r\n\t\t\t\tthis.high = high;\r\n\t\t\t\tthis.low = low;\r\n\t\t\t}\r\n\r\n\t\t\t/**\r\n\t\t\t * Bitwise NOTs this word.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after negating.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var negated = x64Word.not();\r\n\t\t\t */\r\n\t\t\t// not: function () {\r\n\t\t\t// var high = ~this.high;\r\n\t\t\t// var low = ~this.low;\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Bitwise ANDs this word with the passed word.\r\n\t\t\t *\r\n\t\t\t * @param {X64Word} word The x64-Word to AND with this word.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after ANDing.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var anded = x64Word.and(anotherX64Word);\r\n\t\t\t */\r\n\t\t\t// and: function (word) {\r\n\t\t\t// var high = this.high & word.high;\r\n\t\t\t// var low = this.low & word.low;\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Bitwise ORs this word with the passed word.\r\n\t\t\t *\r\n\t\t\t * @param {X64Word} word The x64-Word to OR with this word.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after ORing.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var ored = x64Word.or(anotherX64Word);\r\n\t\t\t */\r\n\t\t\t// or: function (word) {\r\n\t\t\t// var high = this.high | word.high;\r\n\t\t\t// var low = this.low | word.low;\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Bitwise XORs this word with the passed word.\r\n\t\t\t *\r\n\t\t\t * @param {X64Word} word The x64-Word to XOR with this word.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after XORing.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var xored = x64Word.xor(anotherX64Word);\r\n\t\t\t */\r\n\t\t\t// xor: function (word) {\r\n\t\t\t// var high = this.high ^ word.high;\r\n\t\t\t// var low = this.low ^ word.low;\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Shifts this word n bits to the left.\r\n\t\t\t *\r\n\t\t\t * @param {number} n The number of bits to shift.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after shifting.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var shifted = x64Word.shiftL(25);\r\n\t\t\t */\r\n\t\t\t// shiftL: function (n) {\r\n\t\t\t// if (n < 32) {\r\n\t\t\t// var high = (this.high << n) | (this.low >>> (32 - n));\r\n\t\t\t// var low = this.low << n;\r\n\t\t\t// } else {\r\n\t\t\t// var high = this.low << (n - 32);\r\n\t\t\t// var low = 0;\r\n\t\t\t// }\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Shifts this word n bits to the right.\r\n\t\t\t *\r\n\t\t\t * @param {number} n The number of bits to shift.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after shifting.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var shifted = x64Word.shiftR(7);\r\n\t\t\t */\r\n\t\t\t// shiftR: function (n) {\r\n\t\t\t// if (n < 32) {\r\n\t\t\t// var low = (this.low >>> n) | (this.high << (32 - n));\r\n\t\t\t// var high = this.high >>> n;\r\n\t\t\t// } else {\r\n\t\t\t// var low = this.high >>> (n - 32);\r\n\t\t\t// var high = 0;\r\n\t\t\t// }\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Rotates this word n bits to the left.\r\n\t\t\t *\r\n\t\t\t * @param {number} n The number of bits to rotate.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after rotating.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var rotated = x64Word.rotL(25);\r\n\t\t\t */\r\n\t\t\t// rotL: function (n) {\r\n\t\t\t// return this.shiftL(n).or(this.shiftR(64 - n));\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Rotates this word n bits to the right.\r\n\t\t\t *\r\n\t\t\t * @param {number} n The number of bits to rotate.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after rotating.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var rotated = x64Word.rotR(7);\r\n\t\t\t */\r\n\t\t\t// rotR: function (n) {\r\n\t\t\t// return this.shiftR(n).or(this.shiftL(64 - n));\r\n\t\t\t// },\r\n\r\n\t\t\t/**\r\n\t\t\t * Adds this word with the passed word.\r\n\t\t\t *\r\n\t\t\t * @param {X64Word} word The x64-Word to add with this word.\r\n\t\t\t *\r\n\t\t\t * @return {X64Word} A new x64-Word object after adding.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var added = x64Word.add(anotherX64Word);\r\n\t\t\t */\r\n\t\t\t// add: function (word) {\r\n\t\t\t// var low = (this.low + word.low) | 0;\r\n\t\t\t// var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\r\n\t\t\t// var high = (this.high + word.high + carry) | 0;\r\n\r\n\t\t\t// return X64Word.create(high, low);\r\n\t\t\t// }\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * An array of 64-bit words.\r\n\t\t *\r\n\t\t * @property {Array} words The array of CryptoJS.x64.Word objects.\r\n\t\t * @property {number} sigBytes The number of significant bytes in this word array.\r\n\t\t */\r\n\t\tvar X64WordArray = C_x64.WordArray = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created word array.\r\n\t\t\t *\r\n\t\t\t * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\r\n\t\t\t * @param {number} sigBytes (Optional) The number of significant bytes in the words.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.x64.WordArray.create();\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.x64.WordArray.create([\r\n\t\t\t *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\r\n\t\t\t *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\r\n\t\t\t *     ]);\r\n\t\t\t *\r\n\t\t\t *     var wordArray = CryptoJS.x64.WordArray.create([\r\n\t\t\t *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\r\n\t\t\t *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\r\n\t\t\t *     ], 10);\r\n\t\t\t */\r\n\t\t\tinit: function(words, sigBytes) {\r\n\t\t\t\twords = this.words = words || [];\r\n\r\n\t\t\t\tif (sigBytes != undefined) {\r\n\t\t\t\t\tthis.sigBytes = sigBytes;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.sigBytes = words.length * 8;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts this 64-bit word array to a 32-bit word array.\r\n\t\t\t *\r\n\t\t\t * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var x32WordArray = x64WordArray.toX32();\r\n\t\t\t */\r\n\t\t\ttoX32: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar x64Words = this.words;\r\n\t\t\t\tvar x64WordsLength = x64Words.length;\r\n\r\n\t\t\t\t// Convert\r\n\t\t\t\tvar x32Words = [];\r\n\t\t\t\tfor (var i = 0; i < x64WordsLength; i++) {\r\n\t\t\t\t\tvar x64Word = x64Words[i];\r\n\t\t\t\t\tx32Words.push(x64Word.high);\r\n\t\t\t\t\tx32Words.push(x64Word.low);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn X32WordArray.create(x32Words, this.sigBytes);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates a copy of this word array.\r\n\t\t\t *\r\n\t\t\t * @return {X64WordArray} The clone.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var clone = x64WordArray.clone();\r\n\t\t\t */\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Base.clone.call(this);\r\n\r\n\t\t\t\t// Clone \"words\" array\r\n\t\t\t\tvar words = clone.words = this.words.slice(0);\r\n\r\n\t\t\t\t// Clone each X64Word object\r\n\t\t\t\tvar wordsLength = words.length;\r\n\t\t\t\tfor (var i = 0; i < wordsLength; i++) {\r\n\t\t\t\t\twords[i] = words[i].clone();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t}\r\n\t\t});\r\n\t}());\r\n\r\n\r\n\t(function(Math) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar Hasher = C_lib.Hasher;\r\n\t\tvar C_x64 = C.x64;\r\n\t\tvar X64Word = C_x64.Word;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Constants tables\r\n\t\tvar RHO_OFFSETS = [];\r\n\t\tvar PI_INDEXES = [];\r\n\t\tvar ROUND_CONSTANTS = [];\r\n\r\n\t\t// Compute Constants\r\n\t\t(function() {\r\n\t\t\t// Compute rho offset constants\r\n\t\t\tvar x = 1,\r\n\t\t\t\ty = 0;\r\n\t\t\tfor (var t = 0; t < 24; t++) {\r\n\t\t\t\tRHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\r\n\r\n\t\t\t\tvar newX = y % 5;\r\n\t\t\t\tvar newY = (2 * x + 3 * y) % 5;\r\n\t\t\t\tx = newX;\r\n\t\t\t\ty = newY;\r\n\t\t\t}\r\n\r\n\t\t\t// Compute pi index constants\r\n\t\t\tfor (var x = 0; x < 5; x++) {\r\n\t\t\t\tfor (var y = 0; y < 5; y++) {\r\n\t\t\t\t\tPI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Compute round constants\r\n\t\t\tvar LFSR = 0x01;\r\n\t\t\tfor (var i = 0; i < 24; i++) {\r\n\t\t\t\tvar roundConstantMsw = 0;\r\n\t\t\t\tvar roundConstantLsw = 0;\r\n\r\n\t\t\t\tfor (var j = 0; j < 7; j++) {\r\n\t\t\t\t\tif (LFSR & 0x01) {\r\n\t\t\t\t\t\tvar bitPosition = (1 << j) - 1;\r\n\t\t\t\t\t\tif (bitPosition < 32) {\r\n\t\t\t\t\t\t\troundConstantLsw ^= 1 << bitPosition;\r\n\t\t\t\t\t\t} else /* if (bitPosition >= 32) */ {\r\n\t\t\t\t\t\t\troundConstantMsw ^= 1 << (bitPosition - 32);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Compute next LFSR\r\n\t\t\t\t\tif (LFSR & 0x80) {\r\n\t\t\t\t\t\t// Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\r\n\t\t\t\t\t\tLFSR = (LFSR << 1) ^ 0x71;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tLFSR <<= 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t// Reusable objects for temporary values\r\n\t\tvar T = [];\r\n\t\t(function() {\r\n\t\t\tfor (var i = 0; i < 25; i++) {\r\n\t\t\t\tT[i] = X64Word.create();\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t/**\r\n\t\t * SHA-3 hash algorithm.\r\n\t\t */\r\n\t\tvar SHA3 = C_algo.SHA3 = Hasher.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {number} outputLength\r\n\t\t\t *   The desired number of bits in the output hash.\r\n\t\t\t *   Only values permitted are: 224, 256, 384, 512.\r\n\t\t\t *   Default: 512\r\n\t\t\t */\r\n\t\t\tcfg: Hasher.cfg.extend({\r\n\t\t\t\toutputLength: 512\r\n\t\t\t}),\r\n\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tvar state = this._state = []\r\n\t\t\t\tfor (var i = 0; i < 25; i++) {\r\n\t\t\t\t\tstate[i] = new X64Word.init();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar state = this._state;\r\n\t\t\t\tvar nBlockSizeLanes = this.blockSize / 2;\r\n\r\n\t\t\t\t// Absorb\r\n\t\t\t\tfor (var i = 0; i < nBlockSizeLanes; i++) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar M2i = M[offset + 2 * i];\r\n\t\t\t\t\tvar M2i1 = M[offset + 2 * i + 1];\r\n\r\n\t\t\t\t\t// Swap endian\r\n\t\t\t\t\tM2i = (\r\n\t\t\t\t\t\t(((M2i << 8) | (M2i >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((M2i << 24) | (M2i >>> 8)) & 0xff00ff00)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tM2i1 = (\r\n\t\t\t\t\t\t(((M2i1 << 8) | (M2i1 >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((M2i1 << 24) | (M2i1 >>> 8)) & 0xff00ff00)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Absorb message into state\r\n\t\t\t\t\tvar lane = state[i];\r\n\t\t\t\t\tlane.high ^= M2i1;\r\n\t\t\t\t\tlane.low ^= M2i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Rounds\r\n\t\t\t\tfor (var round = 0; round < 24; round++) {\r\n\t\t\t\t\t// Theta\r\n\t\t\t\t\tfor (var x = 0; x < 5; x++) {\r\n\t\t\t\t\t\t// Mix column lanes\r\n\t\t\t\t\t\tvar tMsw = 0,\r\n\t\t\t\t\t\t\ttLsw = 0;\r\n\t\t\t\t\t\tfor (var y = 0; y < 5; y++) {\r\n\t\t\t\t\t\t\tvar lane = state[x + 5 * y];\r\n\t\t\t\t\t\t\ttMsw ^= lane.high;\r\n\t\t\t\t\t\t\ttLsw ^= lane.low;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Temporary values\r\n\t\t\t\t\t\tvar Tx = T[x];\r\n\t\t\t\t\t\tTx.high = tMsw;\r\n\t\t\t\t\t\tTx.low = tLsw;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var x = 0; x < 5; x++) {\r\n\t\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\t\tvar Tx4 = T[(x + 4) % 5];\r\n\t\t\t\t\t\tvar Tx1 = T[(x + 1) % 5];\r\n\t\t\t\t\t\tvar Tx1Msw = Tx1.high;\r\n\t\t\t\t\t\tvar Tx1Lsw = Tx1.low;\r\n\r\n\t\t\t\t\t\t// Mix surrounding columns\r\n\t\t\t\t\t\tvar tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\r\n\t\t\t\t\t\tvar tLsw = Tx4.low ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\r\n\t\t\t\t\t\tfor (var y = 0; y < 5; y++) {\r\n\t\t\t\t\t\t\tvar lane = state[x + 5 * y];\r\n\t\t\t\t\t\t\tlane.high ^= tMsw;\r\n\t\t\t\t\t\t\tlane.low ^= tLsw;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Rho Pi\r\n\t\t\t\t\tfor (var laneIndex = 1; laneIndex < 25; laneIndex++) {\r\n\t\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\t\tvar lane = state[laneIndex];\r\n\t\t\t\t\t\tvar laneMsw = lane.high;\r\n\t\t\t\t\t\tvar laneLsw = lane.low;\r\n\t\t\t\t\t\tvar rhoOffset = RHO_OFFSETS[laneIndex];\r\n\r\n\t\t\t\t\t\t// Rotate lanes\r\n\t\t\t\t\t\tif (rhoOffset < 32) {\r\n\t\t\t\t\t\t\tvar tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\r\n\t\t\t\t\t\t\tvar tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\r\n\t\t\t\t\t\t} else /* if (rhoOffset >= 32) */ {\r\n\t\t\t\t\t\t\tvar tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 -\r\n\t\t\t\t\t\t\t\trhoOffset));\r\n\t\t\t\t\t\t\tvar tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 -\r\n\t\t\t\t\t\t\t\trhoOffset));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Transpose lanes\r\n\t\t\t\t\t\tvar TPiLane = T[PI_INDEXES[laneIndex]];\r\n\t\t\t\t\t\tTPiLane.high = tMsw;\r\n\t\t\t\t\t\tTPiLane.low = tLsw;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Rho pi at x = y = 0\r\n\t\t\t\t\tvar T0 = T[0];\r\n\t\t\t\t\tvar state0 = state[0];\r\n\t\t\t\t\tT0.high = state0.high;\r\n\t\t\t\t\tT0.low = state0.low;\r\n\r\n\t\t\t\t\t// Chi\r\n\t\t\t\t\tfor (var x = 0; x < 5; x++) {\r\n\t\t\t\t\t\tfor (var y = 0; y < 5; y++) {\r\n\t\t\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\t\t\tvar laneIndex = x + 5 * y;\r\n\t\t\t\t\t\t\tvar lane = state[laneIndex];\r\n\t\t\t\t\t\t\tvar TLane = T[laneIndex];\r\n\t\t\t\t\t\t\tvar Tx1Lane = T[((x + 1) % 5) + 5 * y];\r\n\t\t\t\t\t\t\tvar Tx2Lane = T[((x + 2) % 5) + 5 * y];\r\n\r\n\t\t\t\t\t\t\t// Mix rows\r\n\t\t\t\t\t\t\tlane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\r\n\t\t\t\t\t\t\tlane.low = TLane.low ^ (~Tx1Lane.low & Tx2Lane.low);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Iota\r\n\t\t\t\t\tvar lane = state[0];\r\n\t\t\t\t\tvar roundConstant = ROUND_CONSTANTS[round];\r\n\t\t\t\t\tlane.high ^= roundConstant.high;\r\n\t\t\t\t\tlane.low ^= roundConstant.low;;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\t\t\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\t\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\t\t\t\tvar blockSizeBits = this.blockSize * 32;\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\r\n\t\t\t\tdataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) -\r\n\t\t\t\t\t1] |= 0x80;\r\n\t\t\t\tdata.sigBytes = dataWords.length * 4;\r\n\r\n\t\t\t\t// Hash final blocks\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar state = this._state;\r\n\t\t\t\tvar outputLengthBytes = this.cfg.outputLength / 8;\r\n\t\t\t\tvar outputLengthLanes = outputLengthBytes / 8;\r\n\r\n\t\t\t\t// Squeeze\r\n\t\t\t\tvar hashWords = [];\r\n\t\t\t\tfor (var i = 0; i < outputLengthLanes; i++) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar lane = state[i];\r\n\t\t\t\t\tvar laneMsw = lane.high;\r\n\t\t\t\t\tvar laneLsw = lane.low;\r\n\r\n\t\t\t\t\t// Swap endian\r\n\t\t\t\t\tlaneMsw = (\r\n\t\t\t\t\t\t(((laneMsw << 8) | (laneMsw >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((laneMsw << 24) | (laneMsw >>> 8)) & 0xff00ff00)\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlaneLsw = (\r\n\t\t\t\t\t\t(((laneLsw << 8) | (laneLsw >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((laneLsw << 24) | (laneLsw >>> 8)) & 0xff00ff00)\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// Squeeze state to retrieve hash\r\n\t\t\t\t\thashWords.push(laneLsw);\r\n\t\t\t\t\thashWords.push(laneMsw);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Return final computed hash\r\n\t\t\t\treturn new WordArray.init(hashWords, outputLengthBytes);\r\n\t\t\t},\r\n\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Hasher.clone.call(this);\r\n\r\n\t\t\t\tvar state = clone._state = this._state.slice(0);\r\n\t\t\t\tfor (var i = 0; i < 25; i++) {\r\n\t\t\t\t\tstate[i] = state[i].clone();\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.SHA3('message');\r\n\t\t *     var hash = CryptoJS.SHA3(wordArray);\r\n\t\t */\r\n\t\tC.SHA3 = Hasher._createHelper(SHA3);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacSHA3(message, key);\r\n\t\t */\r\n\t\tC.HmacSHA3 = Hasher._createHmacHelper(SHA3);\r\n\t}(Math));\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar Hasher = C_lib.Hasher;\r\n\t\tvar C_x64 = C.x64;\r\n\t\tvar X64Word = C_x64.Word;\r\n\t\tvar X64WordArray = C_x64.WordArray;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\tfunction X64Word_create() {\r\n\t\t\treturn X64Word.create.apply(X64Word, arguments);\r\n\t\t}\r\n\r\n\t\t// Constants\r\n\t\tvar K = [\r\n\t\t\tX64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\r\n\t\t\tX64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\r\n\t\t\tX64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\r\n\t\t\tX64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\r\n\t\t\tX64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\r\n\t\t\tX64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\r\n\t\t\tX64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\r\n\t\t\tX64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\r\n\t\t\tX64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\r\n\t\t\tX64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\r\n\t\t\tX64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\r\n\t\t\tX64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\r\n\t\t\tX64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\r\n\t\t\tX64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\r\n\t\t\tX64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\r\n\t\t\tX64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\r\n\t\t\tX64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\r\n\t\t\tX64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\r\n\t\t\tX64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\r\n\t\t\tX64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\r\n\t\t\tX64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\r\n\t\t\tX64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\r\n\t\t\tX64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\r\n\t\t\tX64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\r\n\t\t\tX64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\r\n\t\t\tX64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\r\n\t\t\tX64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\r\n\t\t\tX64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\r\n\t\t\tX64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\r\n\t\t\tX64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\r\n\t\t\tX64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\r\n\t\t\tX64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\r\n\t\t\tX64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\r\n\t\t\tX64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\r\n\t\t\tX64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\r\n\t\t\tX64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\r\n\t\t\tX64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\r\n\t\t\tX64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\r\n\t\t\tX64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\r\n\t\t\tX64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\r\n\t\t];\r\n\r\n\t\t// Reusable objects\r\n\t\tvar W = [];\r\n\t\t(function() {\r\n\t\t\tfor (var i = 0; i < 80; i++) {\r\n\t\t\t\tW[i] = X64Word_create();\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t/**\r\n\t\t * SHA-512 hash algorithm.\r\n\t\t */\r\n\t\tvar SHA512 = C_algo.SHA512 = Hasher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = new X64WordArray.init([\r\n\t\t\t\t\tnew X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(\r\n\t\t\t\t\t\t0xbb67ae85, 0x84caa73b),\r\n\t\t\t\t\tnew X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(\r\n\t\t\t\t\t\t0xa54ff53a, 0x5f1d36f1),\r\n\t\t\t\t\tnew X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(\r\n\t\t\t\t\t\t0x9b05688c, 0x2b3e6c1f),\r\n\t\t\t\t\tnew X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(\r\n\t\t\t\t\t\t0x5be0cd19, 0x137e2179)\r\n\t\t\t\t]);\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar H = this._hash.words;\r\n\r\n\t\t\t\tvar H0 = H[0];\r\n\t\t\t\tvar H1 = H[1];\r\n\t\t\t\tvar H2 = H[2];\r\n\t\t\t\tvar H3 = H[3];\r\n\t\t\t\tvar H4 = H[4];\r\n\t\t\t\tvar H5 = H[5];\r\n\t\t\t\tvar H6 = H[6];\r\n\t\t\t\tvar H7 = H[7];\r\n\r\n\t\t\t\tvar H0h = H0.high;\r\n\t\t\t\tvar H0l = H0.low;\r\n\t\t\t\tvar H1h = H1.high;\r\n\t\t\t\tvar H1l = H1.low;\r\n\t\t\t\tvar H2h = H2.high;\r\n\t\t\t\tvar H2l = H2.low;\r\n\t\t\t\tvar H3h = H3.high;\r\n\t\t\t\tvar H3l = H3.low;\r\n\t\t\t\tvar H4h = H4.high;\r\n\t\t\t\tvar H4l = H4.low;\r\n\t\t\t\tvar H5h = H5.high;\r\n\t\t\t\tvar H5l = H5.low;\r\n\t\t\t\tvar H6h = H6.high;\r\n\t\t\t\tvar H6l = H6.low;\r\n\t\t\t\tvar H7h = H7.high;\r\n\t\t\t\tvar H7l = H7.low;\r\n\r\n\t\t\t\t// Working variables\r\n\t\t\t\tvar ah = H0h;\r\n\t\t\t\tvar al = H0l;\r\n\t\t\t\tvar bh = H1h;\r\n\t\t\t\tvar bl = H1l;\r\n\t\t\t\tvar ch = H2h;\r\n\t\t\t\tvar cl = H2l;\r\n\t\t\t\tvar dh = H3h;\r\n\t\t\t\tvar dl = H3l;\r\n\t\t\t\tvar eh = H4h;\r\n\t\t\t\tvar el = H4l;\r\n\t\t\t\tvar fh = H5h;\r\n\t\t\t\tvar fl = H5l;\r\n\t\t\t\tvar gh = H6h;\r\n\t\t\t\tvar gl = H6l;\r\n\t\t\t\tvar hh = H7h;\r\n\t\t\t\tvar hl = H7l;\r\n\r\n\t\t\t\t// Rounds\r\n\t\t\t\tfor (var i = 0; i < 80; i++) {\r\n\t\t\t\t\t// Shortcut\r\n\t\t\t\t\tvar Wi = W[i];\r\n\r\n\t\t\t\t\t// Extend message\r\n\t\t\t\t\tif (i < 16) {\r\n\t\t\t\t\t\tvar Wih = Wi.high = M[offset + i * 2] | 0;\r\n\t\t\t\t\t\tvar Wil = Wi.low = M[offset + i * 2 + 1] | 0;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Gamma0\r\n\t\t\t\t\t\tvar gamma0x = W[i - 15];\r\n\t\t\t\t\t\tvar gamma0xh = gamma0x.high;\r\n\t\t\t\t\t\tvar gamma0xl = gamma0x.low;\r\n\t\t\t\t\t\tvar gamma0h = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>>\r\n\t\t\t\t\t\t\t8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\r\n\t\t\t\t\t\tvar gamma0l = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>>\r\n\t\t\t\t\t\t\t8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\r\n\r\n\t\t\t\t\t\t// Gamma1\r\n\t\t\t\t\t\tvar gamma1x = W[i - 2];\r\n\t\t\t\t\t\tvar gamma1xh = gamma1x.high;\r\n\t\t\t\t\t\tvar gamma1xl = gamma1x.low;\r\n\t\t\t\t\t\tvar gamma1h = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh <<\r\n\t\t\t\t\t\t\t3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\r\n\t\t\t\t\t\tvar gamma1l = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl <<\r\n\t\t\t\t\t\t\t3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\r\n\r\n\t\t\t\t\t\t// W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\r\n\t\t\t\t\t\tvar Wi7 = W[i - 7];\r\n\t\t\t\t\t\tvar Wi7h = Wi7.high;\r\n\t\t\t\t\t\tvar Wi7l = Wi7.low;\r\n\r\n\t\t\t\t\t\tvar Wi16 = W[i - 16];\r\n\t\t\t\t\t\tvar Wi16h = Wi16.high;\r\n\t\t\t\t\t\tvar Wi16l = Wi16.low;\r\n\r\n\t\t\t\t\t\tvar Wil = gamma0l + Wi7l;\r\n\t\t\t\t\t\tvar Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\r\n\t\t\t\t\t\tvar Wil = Wil + gamma1l;\r\n\t\t\t\t\t\tvar Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\r\n\t\t\t\t\t\tvar Wil = Wil + Wi16l;\r\n\t\t\t\t\t\tvar Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\r\n\r\n\t\t\t\t\t\tWi.high = Wih;\r\n\t\t\t\t\t\tWi.low = Wil;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar chh = (eh & fh) ^ (~eh & gh);\r\n\t\t\t\t\tvar chl = (el & fl) ^ (~el & gl);\r\n\t\t\t\t\tvar majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\r\n\t\t\t\t\tvar majl = (al & bl) ^ (al & cl) ^ (bl & cl);\r\n\r\n\t\t\t\t\tvar sigma0h = ((ah >>> 28) | (al << 4)) ^ ((ah << 30) | (al >>> 2)) ^ ((\r\n\t\t\t\t\t\tah << 25) | (al >>> 7));\r\n\t\t\t\t\tvar sigma0l = ((al >>> 28) | (ah << 4)) ^ ((al << 30) | (ah >>> 2)) ^ ((\r\n\t\t\t\t\t\tal << 25) | (ah >>> 7));\r\n\t\t\t\t\tvar sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((\r\n\t\t\t\t\t\teh << 23) | (el >>> 9));\r\n\t\t\t\t\tvar sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((\r\n\t\t\t\t\t\tel << 23) | (eh >>> 9));\r\n\r\n\t\t\t\t\t// t1 = h + sigma1 + ch + K[i] + W[i]\r\n\t\t\t\t\tvar Ki = K[i];\r\n\t\t\t\t\tvar Kih = Ki.high;\r\n\t\t\t\t\tvar Kil = Ki.low;\r\n\r\n\t\t\t\t\tvar t1l = hl + sigma1l;\r\n\t\t\t\t\tvar t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\r\n\t\t\t\t\tvar t1l = t1l + chl;\r\n\t\t\t\t\tvar t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\r\n\t\t\t\t\tvar t1l = t1l + Kil;\r\n\t\t\t\t\tvar t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\r\n\t\t\t\t\tvar t1l = t1l + Wil;\r\n\t\t\t\t\tvar t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\r\n\r\n\t\t\t\t\t// t2 = sigma0 + maj\r\n\t\t\t\t\tvar t2l = sigma0l + majl;\r\n\t\t\t\t\tvar t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\r\n\r\n\t\t\t\t\t// Update working variables\r\n\t\t\t\t\thh = gh;\r\n\t\t\t\t\thl = gl;\r\n\t\t\t\t\tgh = fh;\r\n\t\t\t\t\tgl = fl;\r\n\t\t\t\t\tfh = eh;\r\n\t\t\t\t\tfl = el;\r\n\t\t\t\t\tel = (dl + t1l) | 0;\r\n\t\t\t\t\teh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\r\n\t\t\t\t\tdh = ch;\r\n\t\t\t\t\tdl = cl;\r\n\t\t\t\t\tch = bh;\r\n\t\t\t\t\tcl = bl;\r\n\t\t\t\t\tbh = ah;\r\n\t\t\t\t\tbl = al;\r\n\t\t\t\t\tal = (t1l + t2l) | 0;\r\n\t\t\t\t\tah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Intermediate hash value\r\n\t\t\t\tH0l = H0.low = (H0l + al);\r\n\t\t\t\tH0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\r\n\t\t\t\tH1l = H1.low = (H1l + bl);\r\n\t\t\t\tH1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\r\n\t\t\t\tH2l = H2.low = (H2l + cl);\r\n\t\t\t\tH2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\r\n\t\t\t\tH3l = H3.low = (H3l + dl);\r\n\t\t\t\tH3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\r\n\t\t\t\tH4l = H4.low = (H4l + el);\r\n\t\t\t\tH4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\r\n\t\t\t\tH5l = H5.low = (H5l + fl);\r\n\t\t\t\tH5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\r\n\t\t\t\tH6l = H6.low = (H6l + gl);\r\n\t\t\t\tH6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\r\n\t\t\t\tH7l = H7.low = (H7l + hl);\r\n\t\t\t\tH7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar data = this._data;\r\n\t\t\t\tvar dataWords = data.words;\r\n\r\n\t\t\t\tvar nBitsTotal = this._nDataBytes * 8;\r\n\t\t\t\tvar nBitsLeft = data.sigBytes * 8;\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n\t\t\t\tdataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal /\r\n\t\t\t\t\t0x100000000);\r\n\t\t\t\tdataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\r\n\t\t\t\tdata.sigBytes = dataWords.length * 4;\r\n\r\n\t\t\t\t// Hash final blocks\r\n\t\t\t\tthis._process();\r\n\r\n\t\t\t\t// Convert hash to 32-bit word array before returning\r\n\t\t\t\tvar hash = this._hash.toX32();\r\n\r\n\t\t\t\t// Return final computed hash\r\n\t\t\t\treturn hash;\r\n\t\t\t},\r\n\r\n\t\t\tclone: function() {\r\n\t\t\t\tvar clone = Hasher.clone.call(this);\r\n\t\t\t\tclone._hash = this._hash.clone();\r\n\r\n\t\t\t\treturn clone;\r\n\t\t\t},\r\n\r\n\t\t\tblockSize: 1024 / 32\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.SHA512('message');\r\n\t\t *     var hash = CryptoJS.SHA512(wordArray);\r\n\t\t */\r\n\t\tC.SHA512 = Hasher._createHelper(SHA512);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacSHA512(message, key);\r\n\t\t */\r\n\t\tC.HmacSHA512 = Hasher._createHmacHelper(SHA512);\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_x64 = C.x64;\r\n\t\tvar X64Word = C_x64.Word;\r\n\t\tvar X64WordArray = C_x64.WordArray;\r\n\t\tvar C_algo = C.algo;\r\n\t\tvar SHA512 = C_algo.SHA512;\r\n\r\n\t\t/**\r\n\t\t * SHA-384 hash algorithm.\r\n\t\t */\r\n\t\tvar SHA384 = C_algo.SHA384 = SHA512.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tthis._hash = new X64WordArray.init([\r\n\t\t\t\t\tnew X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(\r\n\t\t\t\t\t\t0x629a292a, 0x367cd507),\r\n\t\t\t\t\tnew X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(\r\n\t\t\t\t\t\t0x152fecd8, 0xf70e5939),\r\n\t\t\t\t\tnew X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(\r\n\t\t\t\t\t\t0x8eb44a87, 0x68581511),\r\n\t\t\t\t\tnew X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(\r\n\t\t\t\t\t\t0x47b5481d, 0xbefa4fa4)\r\n\t\t\t\t]);\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\tvar hash = SHA512._doFinalize.call(this);\r\n\r\n\t\t\t\thash.sigBytes -= 16;\r\n\r\n\t\t\t\treturn hash;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the hasher's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t *\r\n\t\t * @return {WordArray} The hash.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hash = CryptoJS.SHA384('message');\r\n\t\t *     var hash = CryptoJS.SHA384(wordArray);\r\n\t\t */\r\n\t\tC.SHA384 = SHA512._createHelper(SHA384);\r\n\r\n\t\t/**\r\n\t\t * Shortcut function to the HMAC's object interface.\r\n\t\t *\r\n\t\t * @param {WordArray|string} message The message to hash.\r\n\t\t * @param {WordArray|string} key The secret key.\r\n\t\t *\r\n\t\t * @return {WordArray} The HMAC.\r\n\t\t *\r\n\t\t * @static\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var hmac = CryptoJS.HmacSHA384(message, key);\r\n\t\t */\r\n\t\tC.HmacSHA384 = SHA512._createHmacHelper(SHA384);\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * Cipher core components.\r\n\t */\r\n\tCryptoJS.lib.Cipher || (function(undefined) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar Base = C_lib.Base;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\r\n\t\tvar C_enc = C.enc;\r\n\t\tvar Utf8 = C_enc.Utf8;\r\n\t\tvar Base64 = C_enc.Base64;\r\n\t\tvar C_algo = C.algo;\r\n\t\tvar EvpKDF = C_algo.EvpKDF;\r\n\r\n\t\t/**\r\n\t\t * Abstract base cipher template.\r\n\t\t *\r\n\t\t * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\r\n\t\t * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\r\n\t\t * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\r\n\t\t * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\r\n\t\t */\r\n\t\tvar Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {WordArray} iv The IV to use for this operation.\r\n\t\t\t */\r\n\t\t\tcfg: Base.extend(),\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates this cipher in encryption mode.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} key The key.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @return {Cipher} A cipher instance.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\r\n\t\t\t */\r\n\t\t\tcreateEncryptor: function(key, cfg) {\r\n\t\t\t\treturn this.create(this._ENC_XFORM_MODE, key, cfg);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates this cipher in decryption mode.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} key The key.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @return {Cipher} A cipher instance.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\r\n\t\t\t */\r\n\t\t\tcreateDecryptor: function(key, cfg) {\r\n\t\t\t\treturn this.create(this._DEC_XFORM_MODE, key, cfg);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created cipher.\r\n\t\t\t *\r\n\t\t\t * @param {number} xformMode Either the encryption or decryption transormation mode constant.\r\n\t\t\t * @param {WordArray} key The key.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\r\n\t\t\t */\r\n\t\t\tinit: function(xformMode, key, cfg) {\r\n\t\t\t\t// Apply config defaults\r\n\t\t\t\tthis.cfg = this.cfg.extend(cfg);\r\n\r\n\t\t\t\t// Store transform mode and key\r\n\t\t\t\tthis._xformMode = xformMode;\r\n\t\t\t\tthis._key = key;\r\n\r\n\t\t\t\t// Set initial values\r\n\t\t\t\tthis.reset();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Resets this cipher to its initial state.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     cipher.reset();\r\n\t\t\t */\r\n\t\t\treset: function() {\r\n\t\t\t\t// Reset data buffer\r\n\t\t\t\tBufferedBlockAlgorithm.reset.call(this);\r\n\r\n\t\t\t\t// Perform concrete-cipher logic\r\n\t\t\t\tthis._doReset();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Adds data to be encrypted or decrypted.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The data after processing.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var encrypted = cipher.process('data');\r\n\t\t\t *     var encrypted = cipher.process(wordArray);\r\n\t\t\t */\r\n\t\t\tprocess: function(dataUpdate) {\r\n\t\t\t\t// Append\r\n\t\t\t\tthis._append(dataUpdate);\r\n\r\n\t\t\t\t// Process available blocks\r\n\t\t\t\treturn this._process();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Finalizes the encryption or decryption process.\r\n\t\t\t * Note that the finalize operation is effectively a destructive, read-once operation.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The data after final processing.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var encrypted = cipher.finalize();\r\n\t\t\t *     var encrypted = cipher.finalize('data');\r\n\t\t\t *     var encrypted = cipher.finalize(wordArray);\r\n\t\t\t */\r\n\t\t\tfinalize: function(dataUpdate) {\r\n\t\t\t\t// Final data update\r\n\t\t\t\tif (dataUpdate) {\r\n\t\t\t\t\tthis._append(dataUpdate);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Perform concrete-cipher logic\r\n\t\t\t\tvar finalProcessedData = this._doFinalize();\r\n\r\n\t\t\t\treturn finalProcessedData;\r\n\t\t\t},\r\n\r\n\t\t\tkeySize: 128 / 32,\r\n\r\n\t\t\tivSize: 128 / 32,\r\n\r\n\t\t\t_ENC_XFORM_MODE: 1,\r\n\r\n\t\t\t_DEC_XFORM_MODE: 2,\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates shortcut functions to a cipher's object interface.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher The cipher to create a helper for.\r\n\t\t\t *\r\n\t\t\t * @return {Object} An object with encrypt and decrypt shortcut functions.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\r\n\t\t\t */\r\n\t\t\t_createHelper: (function() {\r\n\t\t\t\tfunction selectCipherStrategy(key) {\r\n\t\t\t\t\tif (typeof key == 'string') {\r\n\t\t\t\t\t\treturn PasswordBasedCipher;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn SerializableCipher;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn function(cipher) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tencrypt: function(message, key, cfg) {\r\n\t\t\t\t\t\t\treturn selectCipherStrategy(key).encrypt(cipher,\r\n\t\t\t\t\t\t\t\tmessage, key, cfg);\r\n\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\tdecrypt: function(ciphertext, key, cfg) {\r\n\t\t\t\t\t\t\treturn selectCipherStrategy(key).decrypt(cipher,\r\n\t\t\t\t\t\t\t\tciphertext, key, cfg);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t};\r\n\t\t\t}())\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Abstract base stream cipher template.\r\n\t\t *\r\n\t\t * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\r\n\t\t */\r\n\t\tvar StreamCipher = C_lib.StreamCipher = Cipher.extend({\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Process partial blocks\r\n\t\t\t\tvar finalProcessedBlocks = this._process(!!'flush');\r\n\r\n\t\t\t\treturn finalProcessedBlocks;\r\n\t\t\t},\r\n\r\n\t\t\tblockSize: 1\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Mode namespace.\r\n\t\t */\r\n\t\tvar C_mode = C.mode = {};\r\n\r\n\t\t/**\r\n\t\t * Abstract base block cipher mode template.\r\n\t\t */\r\n\t\tvar BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Creates this mode for encryption.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher A block cipher instance.\r\n\t\t\t * @param {Array} iv The IV words.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\r\n\t\t\t */\r\n\t\t\tcreateEncryptor: function(cipher, iv) {\r\n\t\t\t\treturn this.Encryptor.create(cipher, iv);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Creates this mode for decryption.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher A block cipher instance.\r\n\t\t\t * @param {Array} iv The IV words.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\r\n\t\t\t */\r\n\t\t\tcreateDecryptor: function(cipher, iv) {\r\n\t\t\t\treturn this.Decryptor.create(cipher, iv);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created mode.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher A block cipher instance.\r\n\t\t\t * @param {Array} iv The IV words.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\r\n\t\t\t */\r\n\t\t\tinit: function(cipher, iv) {\r\n\t\t\t\tthis._cipher = cipher;\r\n\t\t\t\tthis._iv = iv;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Cipher Block Chaining mode.\r\n\t\t */\r\n\t\tvar CBC = C_mode.CBC = (function() {\r\n\t\t\t/**\r\n\t\t\t * Abstract base CBC mode.\r\n\t\t\t */\r\n\t\t\tvar CBC = BlockCipherMode.extend();\r\n\r\n\t\t\t/**\r\n\t\t\t * CBC encryptor.\r\n\t\t\t */\r\n\t\t\tCBC.Encryptor = CBC.extend({\r\n\t\t\t\t/**\r\n\t\t\t\t * Processes the data block at offset.\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Array} words The data words to operate on.\r\n\t\t\t\t * @param {number} offset The offset where the block starts.\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     mode.processBlock(data.words, offset);\r\n\t\t\t\t */\r\n\t\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar cipher = this._cipher;\r\n\t\t\t\t\tvar blockSize = cipher.blockSize;\r\n\r\n\t\t\t\t\t// XOR and encrypt\r\n\t\t\t\t\txorBlock.call(this, words, offset, blockSize);\r\n\t\t\t\t\tcipher.encryptBlock(words, offset);\r\n\r\n\t\t\t\t\t// Remember this block to use with next block\r\n\t\t\t\t\tthis._prevBlock = words.slice(offset, offset + blockSize);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t/**\r\n\t\t\t * CBC decryptor.\r\n\t\t\t */\r\n\t\t\tCBC.Decryptor = CBC.extend({\r\n\t\t\t\t/**\r\n\t\t\t\t * Processes the data block at offset.\r\n\t\t\t\t *\r\n\t\t\t\t * @param {Array} words The data words to operate on.\r\n\t\t\t\t * @param {number} offset The offset where the block starts.\r\n\t\t\t\t *\r\n\t\t\t\t * @example\r\n\t\t\t\t *\r\n\t\t\t\t *     mode.processBlock(data.words, offset);\r\n\t\t\t\t */\r\n\t\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar cipher = this._cipher;\r\n\t\t\t\t\tvar blockSize = cipher.blockSize;\r\n\r\n\t\t\t\t\t// Remember this block to use with next block\r\n\t\t\t\t\tvar thisBlock = words.slice(offset, offset + blockSize);\r\n\r\n\t\t\t\t\t// Decrypt and XOR\r\n\t\t\t\t\tcipher.decryptBlock(words, offset);\r\n\t\t\t\t\txorBlock.call(this, words, offset, blockSize);\r\n\r\n\t\t\t\t\t// This block becomes the previous block\r\n\t\t\t\t\tthis._prevBlock = thisBlock;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tfunction xorBlock(words, offset, blockSize) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar iv = this._iv;\r\n\r\n\t\t\t\t// Choose mixing block\r\n\t\t\t\tif (iv) {\r\n\t\t\t\t\tvar block = iv;\r\n\r\n\t\t\t\t\t// Remove IV for subsequent blocks\r\n\t\t\t\t\tthis._iv = undefined;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar block = this._prevBlock;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// XOR blocks\r\n\t\t\t\tfor (var i = 0; i < blockSize; i++) {\r\n\t\t\t\t\twords[offset + i] ^= block[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn CBC;\r\n\t\t}());\r\n\r\n\t\t/**\r\n\t\t * Padding namespace.\r\n\t\t */\r\n\t\tvar C_pad = C.pad = {};\r\n\r\n\t\t/**\r\n\t\t * PKCS #5/7 padding strategy.\r\n\t\t */\r\n\t\tvar Pkcs7 = C_pad.Pkcs7 = {\r\n\t\t\t/**\r\n\t\t\t * Pads data using the algorithm defined in PKCS #5/7.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} data The data to pad.\r\n\t\t\t * @param {number} blockSize The multiple that the data should be padded to.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\r\n\t\t\t */\r\n\t\t\tpad: function(data, blockSize) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar blockSizeBytes = blockSize * 4;\r\n\r\n\t\t\t\t// Count padding bytes\r\n\t\t\t\tvar nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\r\n\r\n\t\t\t\t// Create padding word\r\n\t\t\t\tvar paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (\r\n\t\t\t\t\tnPaddingBytes << 8) | nPaddingBytes;\r\n\r\n\t\t\t\t// Create padding\r\n\t\t\t\tvar paddingWords = [];\r\n\t\t\t\tfor (var i = 0; i < nPaddingBytes; i += 4) {\r\n\t\t\t\t\tpaddingWords.push(paddingWord);\r\n\t\t\t\t}\r\n\t\t\t\tvar padding = WordArray.create(paddingWords, nPaddingBytes);\r\n\r\n\t\t\t\t// Add padding\r\n\t\t\t\tdata.concat(padding);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\r\n\t\t\t *\r\n\t\t\t * @param {WordArray} data The data to unpad.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     CryptoJS.pad.Pkcs7.unpad(wordArray);\r\n\t\t\t */\r\n\t\t\tunpad: function(data) {\r\n\t\t\t\t// Get number of padding bytes from last byte\r\n\t\t\t\tvar nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\r\n\r\n\t\t\t\t// Remove padding\r\n\t\t\t\tdata.sigBytes -= nPaddingBytes;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Abstract base block cipher template.\r\n\t\t *\r\n\t\t * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\r\n\t\t */\r\n\t\tvar BlockCipher = C_lib.BlockCipher = Cipher.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {Mode} mode The block mode to use. Default: CBC\r\n\t\t\t * @property {Padding} padding The padding strategy to use. Default: Pkcs7\r\n\t\t\t */\r\n\t\t\tcfg: Cipher.cfg.extend({\r\n\t\t\t\tmode: CBC,\r\n\t\t\t\tpadding: Pkcs7\r\n\t\t\t}),\r\n\r\n\t\t\treset: function() {\r\n\t\t\t\t// Reset cipher\r\n\t\t\t\tCipher.reset.call(this);\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar cfg = this.cfg;\r\n\t\t\t\tvar iv = cfg.iv;\r\n\t\t\t\tvar mode = cfg.mode;\r\n\r\n\t\t\t\t// Reset block mode\r\n\t\t\t\tif (this._xformMode == this._ENC_XFORM_MODE) {\r\n\t\t\t\t\tvar modeCreator = mode.createEncryptor;\r\n\t\t\t\t} else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\r\n\t\t\t\t\tvar modeCreator = mode.createDecryptor;\r\n\t\t\t\t\t// Keep at least one block in the buffer for unpadding\r\n\t\t\t\t\tthis._minBufferSize = 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._mode && this._mode.__creator == modeCreator) {\r\n\t\t\t\t\tthis._mode.init(this, iv && iv.words);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._mode = modeCreator.call(mode, this, iv && iv.words);\r\n\t\t\t\t\tthis._mode.__creator = modeCreator;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(words, offset) {\r\n\t\t\t\tthis._mode.processBlock(words, offset);\r\n\t\t\t},\r\n\r\n\t\t\t_doFinalize: function() {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar padding = this.cfg.padding;\r\n\r\n\t\t\t\t// Finalize\r\n\t\t\t\tif (this._xformMode == this._ENC_XFORM_MODE) {\r\n\t\t\t\t\t// Pad data\r\n\t\t\t\t\tpadding.pad(this._data, this.blockSize);\r\n\r\n\t\t\t\t\t// Process final blocks\r\n\t\t\t\t\tvar finalProcessedBlocks = this._process(!!'flush');\r\n\t\t\t\t} else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\r\n\t\t\t\t\t// Process final blocks\r\n\t\t\t\t\tvar finalProcessedBlocks = this._process(!!'flush');\r\n\r\n\t\t\t\t\t// Unpad data\r\n\t\t\t\t\tpadding.unpad(finalProcessedBlocks);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn finalProcessedBlocks;\r\n\t\t\t},\r\n\r\n\t\t\tblockSize: 128 / 32\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * A collection of cipher parameters.\r\n\t\t *\r\n\t\t * @property {WordArray} ciphertext The raw ciphertext.\r\n\t\t * @property {WordArray} key The key to this ciphertext.\r\n\t\t * @property {WordArray} iv The IV used in the ciphering operation.\r\n\t\t * @property {WordArray} salt The salt used with a key derivation function.\r\n\t\t * @property {Cipher} algorithm The cipher algorithm.\r\n\t\t * @property {Mode} mode The block mode used in the ciphering operation.\r\n\t\t * @property {Padding} padding The padding scheme used in the ciphering operation.\r\n\t\t * @property {number} blockSize The block size of the cipher.\r\n\t\t * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\r\n\t\t */\r\n\t\tvar CipherParams = C_lib.CipherParams = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Initializes a newly created cipher params object.\r\n\t\t\t *\r\n\t\t\t * @param {Object} cipherParams An object with any of the possible cipher parameters.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var cipherParams = CryptoJS.lib.CipherParams.create({\r\n\t\t\t *         ciphertext: ciphertextWordArray,\r\n\t\t\t *         key: keyWordArray,\r\n\t\t\t *         iv: ivWordArray,\r\n\t\t\t *         salt: saltWordArray,\r\n\t\t\t *         algorithm: CryptoJS.algo.AES,\r\n\t\t\t *         mode: CryptoJS.mode.CBC,\r\n\t\t\t *         padding: CryptoJS.pad.PKCS7,\r\n\t\t\t *         blockSize: 4,\r\n\t\t\t *         formatter: CryptoJS.format.OpenSSL\r\n\t\t\t *     });\r\n\t\t\t */\r\n\t\t\tinit: function(cipherParams) {\r\n\t\t\t\tthis.mixIn(cipherParams);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts this cipher params object to a string.\r\n\t\t\t *\r\n\t\t\t * @param {Format} formatter (Optional) The formatting strategy to use.\r\n\t\t\t *\r\n\t\t\t * @return {string} The stringified cipher params.\r\n\t\t\t *\r\n\t\t\t * @throws Error If neither the formatter nor the default formatter is set.\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var string = cipherParams + '';\r\n\t\t\t *     var string = cipherParams.toString();\r\n\t\t\t *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\r\n\t\t\t */\r\n\t\t\ttoString: function(formatter) {\r\n\t\t\t\treturn (formatter || this.formatter).stringify(this);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Format namespace.\r\n\t\t */\r\n\t\tvar C_format = C.format = {};\r\n\r\n\t\t/**\r\n\t\t * OpenSSL formatting strategy.\r\n\t\t */\r\n\t\tvar OpenSSLFormatter = C_format.OpenSSL = {\r\n\t\t\t/**\r\n\t\t\t * Converts a cipher params object to an OpenSSL-compatible string.\r\n\t\t\t *\r\n\t\t\t * @param {CipherParams} cipherParams The cipher params object.\r\n\t\t\t *\r\n\t\t\t * @return {string} The OpenSSL-compatible string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\r\n\t\t\t */\r\n\t\t\tstringify: function(cipherParams) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar ciphertext = cipherParams.ciphertext;\r\n\t\t\t\tvar salt = cipherParams.salt;\r\n\r\n\t\t\t\t// Format\r\n\t\t\t\tif (salt) {\r\n\t\t\t\t\tvar wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt)\r\n\t\t\t\t\t\t.concat(ciphertext);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar wordArray = ciphertext;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn wordArray.toString(Base64);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts an OpenSSL-compatible string to a cipher params object.\r\n\t\t\t *\r\n\t\t\t * @param {string} openSSLStr The OpenSSL-compatible string.\r\n\t\t\t *\r\n\t\t\t * @return {CipherParams} The cipher params object.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\r\n\t\t\t */\r\n\t\t\tparse: function(openSSLStr) {\r\n\t\t\t\t// Parse base64\r\n\t\t\t\tvar ciphertext = Base64.parse(openSSLStr);\r\n\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar ciphertextWords = ciphertext.words;\r\n\r\n\t\t\t\t// Test for salt\r\n\t\t\t\tif (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\r\n\t\t\t\t\t// Extract salt\r\n\t\t\t\t\tvar salt = WordArray.create(ciphertextWords.slice(2, 4));\r\n\r\n\t\t\t\t\t// Remove salt from ciphertext\r\n\t\t\t\t\tciphertextWords.splice(0, 4);\r\n\t\t\t\t\tciphertext.sigBytes -= 16;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn CipherParams.create({\r\n\t\t\t\t\tciphertext: ciphertext,\r\n\t\t\t\t\tsalt: salt\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * A cipher wrapper that returns ciphertext as a serializable cipher params object.\r\n\t\t */\r\n\t\tvar SerializableCipher = C_lib.SerializableCipher = Base.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\r\n\t\t\t */\r\n\t\t\tcfg: Base.extend({\r\n\t\t\t\tformat: OpenSSLFormatter\r\n\t\t\t}),\r\n\r\n\t\t\t/**\r\n\t\t\t * Encrypts a message.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher The cipher algorithm to use.\r\n\t\t\t * @param {WordArray|string} message The message to encrypt.\r\n\t\t\t * @param {WordArray} key The key.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @return {CipherParams} A cipher params object.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\r\n\t\t\t *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\r\n\t\t\t *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\r\n\t\t\t */\r\n\t\t\tencrypt: function(cipher, message, key, cfg) {\r\n\t\t\t\t// Apply config defaults\r\n\t\t\t\tcfg = this.cfg.extend(cfg);\r\n\r\n\t\t\t\t// Encrypt\r\n\t\t\t\tvar encryptor = cipher.createEncryptor(key, cfg);\r\n\t\t\t\tvar ciphertext = encryptor.finalize(message);\r\n\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar cipherCfg = encryptor.cfg;\r\n\r\n\t\t\t\t// Create and return serializable cipher params\r\n\t\t\t\treturn CipherParams.create({\r\n\t\t\t\t\tciphertext: ciphertext,\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tiv: cipherCfg.iv,\r\n\t\t\t\t\talgorithm: cipher,\r\n\t\t\t\t\tmode: cipherCfg.mode,\r\n\t\t\t\t\tpadding: cipherCfg.padding,\r\n\t\t\t\t\tblockSize: cipher.blockSize,\r\n\t\t\t\t\tformatter: cfg.format\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Decrypts serialized ciphertext.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher The cipher algorithm to use.\r\n\t\t\t * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\r\n\t\t\t * @param {WordArray} key The key.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The plaintext.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\r\n\t\t\t *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\r\n\t\t\t */\r\n\t\t\tdecrypt: function(cipher, ciphertext, key, cfg) {\r\n\t\t\t\t// Apply config defaults\r\n\t\t\t\tcfg = this.cfg.extend(cfg);\r\n\r\n\t\t\t\t// Convert string to CipherParams\r\n\t\t\t\tciphertext = this._parse(ciphertext, cfg.format);\r\n\r\n\t\t\t\t// Decrypt\r\n\t\t\t\tvar plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext\r\n\t\t\t\t\t.ciphertext);\r\n\r\n\t\t\t\treturn plaintext;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts serialized ciphertext to CipherParams,\r\n\t\t\t * else assumed CipherParams already and returns ciphertext unchanged.\r\n\t\t\t *\r\n\t\t\t * @param {CipherParams|string} ciphertext The ciphertext.\r\n\t\t\t * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\r\n\t\t\t *\r\n\t\t\t * @return {CipherParams} The unserialized ciphertext.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\r\n\t\t\t */\r\n\t\t\t_parse: function(ciphertext, format) {\r\n\t\t\t\tif (typeof ciphertext == 'string') {\r\n\t\t\t\t\treturn format.parse(ciphertext, this);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ciphertext;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Key derivation function namespace.\r\n\t\t */\r\n\t\tvar C_kdf = C.kdf = {};\r\n\r\n\t\t/**\r\n\t\t * OpenSSL key derivation function.\r\n\t\t */\r\n\t\tvar OpenSSLKdf = C_kdf.OpenSSL = {\r\n\t\t\t/**\r\n\t\t\t * Derives a key and IV from a password.\r\n\t\t\t *\r\n\t\t\t * @param {string} password The password to derive from.\r\n\t\t\t * @param {number} keySize The size in words of the key to generate.\r\n\t\t\t * @param {number} ivSize The size in words of the IV to generate.\r\n\t\t\t * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\r\n\t\t\t *\r\n\t\t\t * @return {CipherParams} A cipher params object with the key, IV, and salt.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\r\n\t\t\t *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\r\n\t\t\t */\r\n\t\t\texecute: function(password, keySize, ivSize, salt) {\r\n\t\t\t\t// Generate random salt\r\n\t\t\t\tif (!salt) {\r\n\t\t\t\t\tsalt = WordArray.random(64 / 8);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Derive key and IV\r\n\t\t\t\tvar key = EvpKDF.create({\r\n\t\t\t\t\tkeySize: keySize + ivSize\r\n\t\t\t\t}).compute(password, salt);\r\n\r\n\t\t\t\t// Separate key and IV\r\n\t\t\t\tvar iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\r\n\t\t\t\tkey.sigBytes = keySize * 4;\r\n\r\n\t\t\t\t// Return params\r\n\t\t\t\treturn CipherParams.create({\r\n\t\t\t\t\tkey: key,\r\n\t\t\t\t\tiv: iv,\r\n\t\t\t\t\tsalt: salt\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * A serializable cipher wrapper that derives the key from a password,\r\n\t\t * and returns ciphertext as a serializable cipher params object.\r\n\t\t */\r\n\t\tvar PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\r\n\t\t\t */\r\n\t\t\tcfg: SerializableCipher.cfg.extend({\r\n\t\t\t\tkdf: OpenSSLKdf\r\n\t\t\t}),\r\n\r\n\t\t\t/**\r\n\t\t\t * Encrypts a message using a password.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher The cipher algorithm to use.\r\n\t\t\t * @param {WordArray|string} message The message to encrypt.\r\n\t\t\t * @param {string} password The password.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @return {CipherParams} A cipher params object.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\r\n\t\t\t *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\r\n\t\t\t */\r\n\t\t\tencrypt: function(cipher, message, password, cfg) {\r\n\t\t\t\t// Apply config defaults\r\n\t\t\t\tcfg = this.cfg.extend(cfg);\r\n\r\n\t\t\t\t// Derive key and other params\r\n\t\t\t\tvar derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher\r\n\t\t\t\t.ivSize);\r\n\r\n\t\t\t\t// Add IV to config\r\n\t\t\t\tcfg.iv = derivedParams.iv;\r\n\r\n\t\t\t\t// Encrypt\r\n\t\t\t\tvar ciphertext = SerializableCipher.encrypt.call(this, cipher, message,\r\n\t\t\t\t\tderivedParams.key, cfg);\r\n\r\n\t\t\t\t// Mix in derived params\r\n\t\t\t\tciphertext.mixIn(derivedParams);\r\n\r\n\t\t\t\treturn ciphertext;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Decrypts serialized ciphertext using a password.\r\n\t\t\t *\r\n\t\t\t * @param {Cipher} cipher The cipher algorithm to use.\r\n\t\t\t * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\r\n\t\t\t * @param {string} password The password.\r\n\t\t\t * @param {Object} cfg (Optional) The configuration options to use for this operation.\r\n\t\t\t *\r\n\t\t\t * @return {WordArray} The plaintext.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\r\n\t\t\t *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\r\n\t\t\t */\r\n\t\t\tdecrypt: function(cipher, ciphertext, password, cfg) {\r\n\t\t\t\t// Apply config defaults\r\n\t\t\t\tcfg = this.cfg.extend(cfg);\r\n\r\n\t\t\t\t// Convert string to CipherParams\r\n\t\t\t\tciphertext = this._parse(ciphertext, cfg.format);\r\n\r\n\t\t\t\t// Derive key and other params\r\n\t\t\t\tvar derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize,\r\n\t\t\t\t\tciphertext.salt);\r\n\r\n\t\t\t\t// Add IV to config\r\n\t\t\t\tcfg.iv = derivedParams.iv;\r\n\r\n\t\t\t\t// Decrypt\r\n\t\t\t\tvar plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext,\r\n\t\t\t\t\tderivedParams.key, cfg);\r\n\r\n\t\t\t\treturn plaintext;\r\n\t\t\t}\r\n\t\t});\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * Cipher Feedback block mode.\r\n\t */\r\n\tCryptoJS.mode.CFB = (function() {\r\n\t\tvar CFB = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n\t\tCFB.Encryptor = CFB.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar cipher = this._cipher;\r\n\t\t\t\tvar blockSize = cipher.blockSize;\r\n\r\n\t\t\t\tgenerateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\r\n\r\n\t\t\t\t// Remember this block to use with next block\r\n\t\t\t\tthis._prevBlock = words.slice(offset, offset + blockSize);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tCFB.Decryptor = CFB.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar cipher = this._cipher;\r\n\t\t\t\tvar blockSize = cipher.blockSize;\r\n\r\n\t\t\t\t// Remember this block to use with next block\r\n\t\t\t\tvar thisBlock = words.slice(offset, offset + blockSize);\r\n\r\n\t\t\t\tgenerateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\r\n\r\n\t\t\t\t// This block becomes the previous block\r\n\t\t\t\tthis._prevBlock = thisBlock;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tfunction generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\r\n\t\t\t// Shortcut\r\n\t\t\tvar iv = this._iv;\r\n\r\n\t\t\t// Generate keystream\r\n\t\t\tif (iv) {\r\n\t\t\t\tvar keystream = iv.slice(0);\r\n\r\n\t\t\t\t// Remove IV for subsequent blocks\r\n\t\t\t\tthis._iv = undefined;\r\n\t\t\t} else {\r\n\t\t\t\tvar keystream = this._prevBlock;\r\n\t\t\t}\r\n\t\t\tcipher.encryptBlock(keystream, 0);\r\n\r\n\t\t\t// Encrypt\r\n\t\t\tfor (var i = 0; i < blockSize; i++) {\r\n\t\t\t\twords[offset + i] ^= keystream[i];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn CFB;\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * Electronic Codebook block mode.\r\n\t */\r\n\tCryptoJS.mode.ECB = (function() {\r\n\t\tvar ECB = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n\t\tECB.Encryptor = ECB.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\tthis._cipher.encryptBlock(words, offset);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tECB.Decryptor = ECB.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\tthis._cipher.decryptBlock(words, offset);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn ECB;\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * ANSI X.923 padding strategy.\r\n\t */\r\n\tCryptoJS.pad.AnsiX923 = {\r\n\t\tpad: function(data, blockSize) {\r\n\t\t\t// Shortcuts\r\n\t\t\tvar dataSigBytes = data.sigBytes;\r\n\t\t\tvar blockSizeBytes = blockSize * 4;\r\n\r\n\t\t\t// Count padding bytes\r\n\t\t\tvar nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\r\n\r\n\t\t\t// Compute last byte position\r\n\t\t\tvar lastBytePos = dataSigBytes + nPaddingBytes - 1;\r\n\r\n\t\t\t// Pad\r\n\t\t\tdata.clamp();\r\n\t\t\tdata.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\r\n\t\t\tdata.sigBytes += nPaddingBytes;\r\n\t\t},\r\n\r\n\t\tunpad: function(data) {\r\n\t\t\t// Get number of padding bytes from last byte\r\n\t\t\tvar nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\r\n\r\n\t\t\t// Remove padding\r\n\t\t\tdata.sigBytes -= nPaddingBytes;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * ISO 10126 padding strategy.\r\n\t */\r\n\tCryptoJS.pad.Iso10126 = {\r\n\t\tpad: function(data, blockSize) {\r\n\t\t\t// Shortcut\r\n\t\t\tvar blockSizeBytes = blockSize * 4;\r\n\r\n\t\t\t// Count padding bytes\r\n\t\t\tvar nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\r\n\r\n\t\t\t// Pad\r\n\t\t\tdata.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\r\n\t\t\tconcat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\r\n\t\t},\r\n\r\n\t\tunpad: function(data) {\r\n\t\t\t// Get number of padding bytes from last byte\r\n\t\t\tvar nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\r\n\r\n\t\t\t// Remove padding\r\n\t\t\tdata.sigBytes -= nPaddingBytes;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * ISO/IEC 9797-1 Padding Method 2.\r\n\t */\r\n\tCryptoJS.pad.Iso97971 = {\r\n\t\tpad: function(data, blockSize) {\r\n\t\t\t// Add 0x80 byte\r\n\t\t\tdata.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\r\n\r\n\t\t\t// Zero pad the rest\r\n\t\t\tCryptoJS.pad.ZeroPadding.pad(data, blockSize);\r\n\t\t},\r\n\r\n\t\tunpad: function(data) {\r\n\t\t\t// Remove zero padding\r\n\t\t\tCryptoJS.pad.ZeroPadding.unpad(data);\r\n\r\n\t\t\t// Remove one more byte -- the 0x80 byte\r\n\t\t\tdata.sigBytes--;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Output Feedback block mode.\r\n\t */\r\n\tCryptoJS.mode.OFB = (function() {\r\n\t\tvar OFB = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n\t\tvar Encryptor = OFB.Encryptor = OFB.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar cipher = this._cipher\r\n\t\t\t\tvar blockSize = cipher.blockSize;\r\n\t\t\t\tvar iv = this._iv;\r\n\t\t\t\tvar keystream = this._keystream;\r\n\r\n\t\t\t\t// Generate keystream\r\n\t\t\t\tif (iv) {\r\n\t\t\t\t\tkeystream = this._keystream = iv.slice(0);\r\n\r\n\t\t\t\t\t// Remove IV for subsequent blocks\r\n\t\t\t\t\tthis._iv = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tcipher.encryptBlock(keystream, 0);\r\n\r\n\t\t\t\t// Encrypt\r\n\t\t\t\tfor (var i = 0; i < blockSize; i++) {\r\n\t\t\t\t\twords[offset + i] ^= keystream[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tOFB.Decryptor = Encryptor;\r\n\r\n\t\treturn OFB;\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * A noop padding strategy.\r\n\t */\r\n\tCryptoJS.pad.NoPadding = {\r\n\t\tpad: function() {},\r\n\r\n\t\tunpad: function() {}\r\n\t};\r\n\r\n\r\n\t(function(undefined) {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar CipherParams = C_lib.CipherParams;\r\n\t\tvar C_enc = C.enc;\r\n\t\tvar Hex = C_enc.Hex;\r\n\t\tvar C_format = C.format;\r\n\r\n\t\tvar HexFormatter = C_format.Hex = {\r\n\t\t\t/**\r\n\t\t\t * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\r\n\t\t\t *\r\n\t\t\t * @param {CipherParams} cipherParams The cipher params object.\r\n\t\t\t *\r\n\t\t\t * @return {string} The hexadecimally encoded string.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\r\n\t\t\t */\r\n\t\t\tstringify: function(cipherParams) {\r\n\t\t\t\treturn cipherParams.ciphertext.toString(Hex);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Converts a hexadecimally encoded ciphertext string to a cipher params object.\r\n\t\t\t *\r\n\t\t\t * @param {string} input The hexadecimally encoded string.\r\n\t\t\t *\r\n\t\t\t * @return {CipherParams} The cipher params object.\r\n\t\t\t *\r\n\t\t\t * @static\r\n\t\t\t *\r\n\t\t\t * @example\r\n\t\t\t *\r\n\t\t\t *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\r\n\t\t\t */\r\n\t\t\tparse: function(input) {\r\n\t\t\t\tvar ciphertext = Hex.parse(input);\r\n\t\t\t\treturn CipherParams.create({\r\n\t\t\t\t\tciphertext: ciphertext\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar BlockCipher = C_lib.BlockCipher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Lookup tables\r\n\t\tvar SBOX = [];\r\n\t\tvar INV_SBOX = [];\r\n\t\tvar SUB_MIX_0 = [];\r\n\t\tvar SUB_MIX_1 = [];\r\n\t\tvar SUB_MIX_2 = [];\r\n\t\tvar SUB_MIX_3 = [];\r\n\t\tvar INV_SUB_MIX_0 = [];\r\n\t\tvar INV_SUB_MIX_1 = [];\r\n\t\tvar INV_SUB_MIX_2 = [];\r\n\t\tvar INV_SUB_MIX_3 = [];\r\n\r\n\t\t// Compute lookup tables\r\n\t\t(function() {\r\n\t\t\t// Compute double table\r\n\t\t\tvar d = [];\r\n\t\t\tfor (var i = 0; i < 256; i++) {\r\n\t\t\t\tif (i < 128) {\r\n\t\t\t\t\td[i] = i << 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\td[i] = (i << 1) ^ 0x11b;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Walk GF(2^8)\r\n\t\t\tvar x = 0;\r\n\t\t\tvar xi = 0;\r\n\t\t\tfor (var i = 0; i < 256; i++) {\r\n\t\t\t\t// Compute sbox\r\n\t\t\t\tvar sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\r\n\t\t\t\tsx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\r\n\t\t\t\tSBOX[x] = sx;\r\n\t\t\t\tINV_SBOX[sx] = x;\r\n\r\n\t\t\t\t// Compute multiplication\r\n\t\t\t\tvar x2 = d[x];\r\n\t\t\t\tvar x4 = d[x2];\r\n\t\t\t\tvar x8 = d[x4];\r\n\r\n\t\t\t\t// Compute sub bytes, mix columns tables\r\n\t\t\t\tvar t = (d[sx] * 0x101) ^ (sx * 0x1010100);\r\n\t\t\t\tSUB_MIX_0[x] = (t << 24) | (t >>> 8);\r\n\t\t\t\tSUB_MIX_1[x] = (t << 16) | (t >>> 16);\r\n\t\t\t\tSUB_MIX_2[x] = (t << 8) | (t >>> 24);\r\n\t\t\t\tSUB_MIX_3[x] = t;\r\n\r\n\t\t\t\t// Compute inv sub bytes, inv mix columns tables\r\n\t\t\t\tvar t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\r\n\t\t\t\tINV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\r\n\t\t\t\tINV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\r\n\t\t\t\tINV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\r\n\t\t\t\tINV_SUB_MIX_3[sx] = t;\r\n\r\n\t\t\t\t// Compute next counter\r\n\t\t\t\tif (!x) {\r\n\t\t\t\t\tx = xi = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tx = x2 ^ d[d[d[x8 ^ x2]]];\r\n\t\t\t\t\txi ^= d[d[xi]];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}());\r\n\r\n\t\t// Precomputed Rcon lookup\r\n\t\tvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\r\n\r\n\t\t/**\r\n\t\t * AES block cipher algorithm.\r\n\t\t */\r\n\t\tvar AES = C_algo.AES = BlockCipher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\t// Skip reset of nRounds has been set before and key did not change\r\n\t\t\t\tif (this._nRounds && this._keyPriorReset === this._key) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar key = this._keyPriorReset = this._key;\r\n\t\t\t\tvar keyWords = key.words;\r\n\t\t\t\tvar keySize = key.sigBytes / 4;\r\n\r\n\t\t\t\t// Compute number of rounds\r\n\t\t\t\tvar nRounds = this._nRounds = keySize + 6;\r\n\r\n\t\t\t\t// Compute number of key schedule rows\r\n\t\t\t\tvar ksRows = (nRounds + 1) * 4;\r\n\r\n\t\t\t\t// Compute key schedule\r\n\t\t\t\tvar keySchedule = this._keySchedule = [];\r\n\t\t\t\tfor (var ksRow = 0; ksRow < ksRows; ksRow++) {\r\n\t\t\t\t\tif (ksRow < keySize) {\r\n\t\t\t\t\t\tkeySchedule[ksRow] = keyWords[ksRow];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar t = keySchedule[ksRow - 1];\r\n\r\n\t\t\t\t\t\tif (!(ksRow % keySize)) {\r\n\t\t\t\t\t\t\t// Rot word\r\n\t\t\t\t\t\t\tt = (t << 8) | (t >>> 24);\r\n\r\n\t\t\t\t\t\t\t// Sub word\r\n\t\t\t\t\t\t\tt = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (\r\n\t\t\t\t\t\t\t\tSBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\r\n\r\n\t\t\t\t\t\t\t// Mix Rcon\r\n\t\t\t\t\t\t\tt ^= RCON[(ksRow / keySize) | 0] << 24;\r\n\t\t\t\t\t\t} else if (keySize > 6 && ksRow % keySize == 4) {\r\n\t\t\t\t\t\t\t// Sub word\r\n\t\t\t\t\t\t\tt = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (\r\n\t\t\t\t\t\t\t\tSBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tkeySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute inv key schedule\r\n\t\t\t\tvar invKeySchedule = this._invKeySchedule = [];\r\n\t\t\t\tfor (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\r\n\t\t\t\t\tvar ksRow = ksRows - invKsRow;\r\n\r\n\t\t\t\t\tif (invKsRow % 4) {\r\n\t\t\t\t\t\tvar t = keySchedule[ksRow];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar t = keySchedule[ksRow - 4];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (invKsRow < 4 || ksRow <= 4) {\r\n\t\t\t\t\t\tinvKeySchedule[invKsRow] = t;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tinvKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^\r\n\t\t\t\t\t\t\tINV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\r\n\t\t\t\t\t\t\tINV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t &\r\n\t\t\t\t\t\t\t\t0xff]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tencryptBlock: function(M, offset) {\r\n\t\t\t\tthis._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1,\r\n\t\t\t\t\tSUB_MIX_2, SUB_MIX_3, SBOX);\r\n\t\t\t},\r\n\r\n\t\t\tdecryptBlock: function(M, offset) {\r\n\t\t\t\t// Swap 2nd and 4th rows\r\n\t\t\t\tvar t = M[offset + 1];\r\n\t\t\t\tM[offset + 1] = M[offset + 3];\r\n\t\t\t\tM[offset + 3] = t;\r\n\r\n\t\t\t\tthis._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0,\r\n\t\t\t\t\tINV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\r\n\r\n\t\t\t\t// Inv swap 2nd and 4th rows\r\n\t\t\t\tvar t = M[offset + 1];\r\n\t\t\t\tM[offset + 1] = M[offset + 3];\r\n\t\t\t\tM[offset + 3] = t;\r\n\t\t\t},\r\n\r\n\t\t\t_doCryptBlock: function(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2,\r\n\t\t\t\tSUB_MIX_3, SBOX) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar nRounds = this._nRounds;\r\n\r\n\t\t\t\t// Get input, add round key\r\n\t\t\t\tvar s0 = M[offset] ^ keySchedule[0];\r\n\t\t\t\tvar s1 = M[offset + 1] ^ keySchedule[1];\r\n\t\t\t\tvar s2 = M[offset + 2] ^ keySchedule[2];\r\n\t\t\t\tvar s3 = M[offset + 3] ^ keySchedule[3];\r\n\r\n\t\t\t\t// Key schedule row counter\r\n\t\t\t\tvar ksRow = 4;\r\n\r\n\t\t\t\t// Rounds\r\n\t\t\t\tfor (var round = 1; round < nRounds; round++) {\r\n\t\t\t\t\t// Shift rows, sub bytes, mix columns, add round key\r\n\t\t\t\t\tvar t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(\r\n\t\t\t\t\t\ts2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\r\n\t\t\t\t\tvar t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(\r\n\t\t\t\t\t\ts3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\r\n\t\t\t\t\tvar t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(\r\n\t\t\t\t\t\ts0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\r\n\t\t\t\t\tvar t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(\r\n\t\t\t\t\t\ts1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\r\n\r\n\t\t\t\t\t// Update state\r\n\t\t\t\t\ts0 = t0;\r\n\t\t\t\t\ts1 = t1;\r\n\t\t\t\t\ts2 = t2;\r\n\t\t\t\t\ts3 = t3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Shift rows, sub bytes, add round key\r\n\t\t\t\tvar t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(\r\n\t\t\t\t\ts2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\r\n\t\t\t\tvar t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(\r\n\t\t\t\t\ts3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\r\n\t\t\t\tvar t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(\r\n\t\t\t\t\ts0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\r\n\t\t\t\tvar t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(\r\n\t\t\t\t\ts1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\r\n\r\n\t\t\t\t// Set output\r\n\t\t\t\tM[offset] = t0;\r\n\t\t\t\tM[offset + 1] = t1;\r\n\t\t\t\tM[offset + 2] = t2;\r\n\t\t\t\tM[offset + 3] = t3;\r\n\t\t\t},\r\n\r\n\t\t\tkeySize: 256 / 32\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.AES = BlockCipher._createHelper(AES);\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar WordArray = C_lib.WordArray;\r\n\t\tvar BlockCipher = C_lib.BlockCipher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Permuted Choice 1 constants\r\n\t\tvar PC1 = [\r\n\t\t\t57, 49, 41, 33, 25, 17, 9, 1,\r\n\t\t\t58, 50, 42, 34, 26, 18, 10, 2,\r\n\t\t\t59, 51, 43, 35, 27, 19, 11, 3,\r\n\t\t\t60, 52, 44, 36, 63, 55, 47, 39,\r\n\t\t\t31, 23, 15, 7, 62, 54, 46, 38,\r\n\t\t\t30, 22, 14, 6, 61, 53, 45, 37,\r\n\t\t\t29, 21, 13, 5, 28, 20, 12, 4\r\n\t\t];\r\n\r\n\t\t// Permuted Choice 2 constants\r\n\t\tvar PC2 = [\r\n\t\t\t14, 17, 11, 24, 1, 5,\r\n\t\t\t3, 28, 15, 6, 21, 10,\r\n\t\t\t23, 19, 12, 4, 26, 8,\r\n\t\t\t16, 7, 27, 20, 13, 2,\r\n\t\t\t41, 52, 31, 37, 47, 55,\r\n\t\t\t30, 40, 51, 45, 33, 48,\r\n\t\t\t44, 49, 39, 56, 34, 53,\r\n\t\t\t46, 42, 50, 36, 29, 32\r\n\t\t];\r\n\r\n\t\t// Cumulative bit shift constants\r\n\t\tvar BIT_SHIFTS = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\r\n\r\n\t\t// SBOXes and round permutation constants\r\n\t\tvar SBOX_P = [{\r\n\t\t\t\t0x0: 0x808200,\r\n\t\t\t\t0x10000000: 0x8000,\r\n\t\t\t\t0x20000000: 0x808002,\r\n\t\t\t\t0x30000000: 0x2,\r\n\t\t\t\t0x40000000: 0x200,\r\n\t\t\t\t0x50000000: 0x808202,\r\n\t\t\t\t0x60000000: 0x800202,\r\n\t\t\t\t0x70000000: 0x800000,\r\n\t\t\t\t0x80000000: 0x202,\r\n\t\t\t\t0x90000000: 0x800200,\r\n\t\t\t\t0xa0000000: 0x8200,\r\n\t\t\t\t0xb0000000: 0x808000,\r\n\t\t\t\t0xc0000000: 0x8002,\r\n\t\t\t\t0xd0000000: 0x800002,\r\n\t\t\t\t0xe0000000: 0x0,\r\n\t\t\t\t0xf0000000: 0x8202,\r\n\t\t\t\t0x8000000: 0x0,\r\n\t\t\t\t0x18000000: 0x808202,\r\n\t\t\t\t0x28000000: 0x8202,\r\n\t\t\t\t0x38000000: 0x8000,\r\n\t\t\t\t0x48000000: 0x808200,\r\n\t\t\t\t0x58000000: 0x200,\r\n\t\t\t\t0x68000000: 0x808002,\r\n\t\t\t\t0x78000000: 0x2,\r\n\t\t\t\t0x88000000: 0x800200,\r\n\t\t\t\t0x98000000: 0x8200,\r\n\t\t\t\t0xa8000000: 0x808000,\r\n\t\t\t\t0xb8000000: 0x800202,\r\n\t\t\t\t0xc8000000: 0x800002,\r\n\t\t\t\t0xd8000000: 0x8002,\r\n\t\t\t\t0xe8000000: 0x202,\r\n\t\t\t\t0xf8000000: 0x800000,\r\n\t\t\t\t0x1: 0x8000,\r\n\t\t\t\t0x10000001: 0x2,\r\n\t\t\t\t0x20000001: 0x808200,\r\n\t\t\t\t0x30000001: 0x800000,\r\n\t\t\t\t0x40000001: 0x808002,\r\n\t\t\t\t0x50000001: 0x8200,\r\n\t\t\t\t0x60000001: 0x200,\r\n\t\t\t\t0x70000001: 0x800202,\r\n\t\t\t\t0x80000001: 0x808202,\r\n\t\t\t\t0x90000001: 0x808000,\r\n\t\t\t\t0xa0000001: 0x800002,\r\n\t\t\t\t0xb0000001: 0x8202,\r\n\t\t\t\t0xc0000001: 0x202,\r\n\t\t\t\t0xd0000001: 0x800200,\r\n\t\t\t\t0xe0000001: 0x8002,\r\n\t\t\t\t0xf0000001: 0x0,\r\n\t\t\t\t0x8000001: 0x808202,\r\n\t\t\t\t0x18000001: 0x808000,\r\n\t\t\t\t0x28000001: 0x800000,\r\n\t\t\t\t0x38000001: 0x200,\r\n\t\t\t\t0x48000001: 0x8000,\r\n\t\t\t\t0x58000001: 0x800002,\r\n\t\t\t\t0x68000001: 0x2,\r\n\t\t\t\t0x78000001: 0x8202,\r\n\t\t\t\t0x88000001: 0x8002,\r\n\t\t\t\t0x98000001: 0x800202,\r\n\t\t\t\t0xa8000001: 0x202,\r\n\t\t\t\t0xb8000001: 0x808200,\r\n\t\t\t\t0xc8000001: 0x800200,\r\n\t\t\t\t0xd8000001: 0x0,\r\n\t\t\t\t0xe8000001: 0x8200,\r\n\t\t\t\t0xf8000001: 0x808002\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x40084010,\r\n\t\t\t\t0x1000000: 0x4000,\r\n\t\t\t\t0x2000000: 0x80000,\r\n\t\t\t\t0x3000000: 0x40080010,\r\n\t\t\t\t0x4000000: 0x40000010,\r\n\t\t\t\t0x5000000: 0x40084000,\r\n\t\t\t\t0x6000000: 0x40004000,\r\n\t\t\t\t0x7000000: 0x10,\r\n\t\t\t\t0x8000000: 0x84000,\r\n\t\t\t\t0x9000000: 0x40004010,\r\n\t\t\t\t0xa000000: 0x40000000,\r\n\t\t\t\t0xb000000: 0x84010,\r\n\t\t\t\t0xc000000: 0x80010,\r\n\t\t\t\t0xd000000: 0x0,\r\n\t\t\t\t0xe000000: 0x4010,\r\n\t\t\t\t0xf000000: 0x40080000,\r\n\t\t\t\t0x800000: 0x40004000,\r\n\t\t\t\t0x1800000: 0x84010,\r\n\t\t\t\t0x2800000: 0x10,\r\n\t\t\t\t0x3800000: 0x40004010,\r\n\t\t\t\t0x4800000: 0x40084010,\r\n\t\t\t\t0x5800000: 0x40000000,\r\n\t\t\t\t0x6800000: 0x80000,\r\n\t\t\t\t0x7800000: 0x40080010,\r\n\t\t\t\t0x8800000: 0x80010,\r\n\t\t\t\t0x9800000: 0x0,\r\n\t\t\t\t0xa800000: 0x4000,\r\n\t\t\t\t0xb800000: 0x40080000,\r\n\t\t\t\t0xc800000: 0x40000010,\r\n\t\t\t\t0xd800000: 0x84000,\r\n\t\t\t\t0xe800000: 0x40084000,\r\n\t\t\t\t0xf800000: 0x4010,\r\n\t\t\t\t0x10000000: 0x0,\r\n\t\t\t\t0x11000000: 0x40080010,\r\n\t\t\t\t0x12000000: 0x40004010,\r\n\t\t\t\t0x13000000: 0x40084000,\r\n\t\t\t\t0x14000000: 0x40080000,\r\n\t\t\t\t0x15000000: 0x10,\r\n\t\t\t\t0x16000000: 0x84010,\r\n\t\t\t\t0x17000000: 0x4000,\r\n\t\t\t\t0x18000000: 0x4010,\r\n\t\t\t\t0x19000000: 0x80000,\r\n\t\t\t\t0x1a000000: 0x80010,\r\n\t\t\t\t0x1b000000: 0x40000010,\r\n\t\t\t\t0x1c000000: 0x84000,\r\n\t\t\t\t0x1d000000: 0x40004000,\r\n\t\t\t\t0x1e000000: 0x40000000,\r\n\t\t\t\t0x1f000000: 0x40084010,\r\n\t\t\t\t0x10800000: 0x84010,\r\n\t\t\t\t0x11800000: 0x80000,\r\n\t\t\t\t0x12800000: 0x40080000,\r\n\t\t\t\t0x13800000: 0x4000,\r\n\t\t\t\t0x14800000: 0x40004000,\r\n\t\t\t\t0x15800000: 0x40084010,\r\n\t\t\t\t0x16800000: 0x10,\r\n\t\t\t\t0x17800000: 0x40000000,\r\n\t\t\t\t0x18800000: 0x40084000,\r\n\t\t\t\t0x19800000: 0x40000010,\r\n\t\t\t\t0x1a800000: 0x40004010,\r\n\t\t\t\t0x1b800000: 0x80010,\r\n\t\t\t\t0x1c800000: 0x0,\r\n\t\t\t\t0x1d800000: 0x4010,\r\n\t\t\t\t0x1e800000: 0x40080010,\r\n\t\t\t\t0x1f800000: 0x84000\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x104,\r\n\t\t\t\t0x100000: 0x0,\r\n\t\t\t\t0x200000: 0x4000100,\r\n\t\t\t\t0x300000: 0x10104,\r\n\t\t\t\t0x400000: 0x10004,\r\n\t\t\t\t0x500000: 0x4000004,\r\n\t\t\t\t0x600000: 0x4010104,\r\n\t\t\t\t0x700000: 0x4010000,\r\n\t\t\t\t0x800000: 0x4000000,\r\n\t\t\t\t0x900000: 0x4010100,\r\n\t\t\t\t0xa00000: 0x10100,\r\n\t\t\t\t0xb00000: 0x4010004,\r\n\t\t\t\t0xc00000: 0x4000104,\r\n\t\t\t\t0xd00000: 0x10000,\r\n\t\t\t\t0xe00000: 0x4,\r\n\t\t\t\t0xf00000: 0x100,\r\n\t\t\t\t0x80000: 0x4010100,\r\n\t\t\t\t0x180000: 0x4010004,\r\n\t\t\t\t0x280000: 0x0,\r\n\t\t\t\t0x380000: 0x4000100,\r\n\t\t\t\t0x480000: 0x4000004,\r\n\t\t\t\t0x580000: 0x10000,\r\n\t\t\t\t0x680000: 0x10004,\r\n\t\t\t\t0x780000: 0x104,\r\n\t\t\t\t0x880000: 0x4,\r\n\t\t\t\t0x980000: 0x100,\r\n\t\t\t\t0xa80000: 0x4010000,\r\n\t\t\t\t0xb80000: 0x10104,\r\n\t\t\t\t0xc80000: 0x10100,\r\n\t\t\t\t0xd80000: 0x4000104,\r\n\t\t\t\t0xe80000: 0x4010104,\r\n\t\t\t\t0xf80000: 0x4000000,\r\n\t\t\t\t0x1000000: 0x4010100,\r\n\t\t\t\t0x1100000: 0x10004,\r\n\t\t\t\t0x1200000: 0x10000,\r\n\t\t\t\t0x1300000: 0x4000100,\r\n\t\t\t\t0x1400000: 0x100,\r\n\t\t\t\t0x1500000: 0x4010104,\r\n\t\t\t\t0x1600000: 0x4000004,\r\n\t\t\t\t0x1700000: 0x0,\r\n\t\t\t\t0x1800000: 0x4000104,\r\n\t\t\t\t0x1900000: 0x4000000,\r\n\t\t\t\t0x1a00000: 0x4,\r\n\t\t\t\t0x1b00000: 0x10100,\r\n\t\t\t\t0x1c00000: 0x4010000,\r\n\t\t\t\t0x1d00000: 0x104,\r\n\t\t\t\t0x1e00000: 0x10104,\r\n\t\t\t\t0x1f00000: 0x4010004,\r\n\t\t\t\t0x1080000: 0x4000000,\r\n\t\t\t\t0x1180000: 0x104,\r\n\t\t\t\t0x1280000: 0x4010100,\r\n\t\t\t\t0x1380000: 0x0,\r\n\t\t\t\t0x1480000: 0x10004,\r\n\t\t\t\t0x1580000: 0x4000100,\r\n\t\t\t\t0x1680000: 0x100,\r\n\t\t\t\t0x1780000: 0x4010004,\r\n\t\t\t\t0x1880000: 0x10000,\r\n\t\t\t\t0x1980000: 0x4010104,\r\n\t\t\t\t0x1a80000: 0x10104,\r\n\t\t\t\t0x1b80000: 0x4000004,\r\n\t\t\t\t0x1c80000: 0x4000104,\r\n\t\t\t\t0x1d80000: 0x4010000,\r\n\t\t\t\t0x1e80000: 0x4,\r\n\t\t\t\t0x1f80000: 0x10100\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x80401000,\r\n\t\t\t\t0x10000: 0x80001040,\r\n\t\t\t\t0x20000: 0x401040,\r\n\t\t\t\t0x30000: 0x80400000,\r\n\t\t\t\t0x40000: 0x0,\r\n\t\t\t\t0x50000: 0x401000,\r\n\t\t\t\t0x60000: 0x80000040,\r\n\t\t\t\t0x70000: 0x400040,\r\n\t\t\t\t0x80000: 0x80000000,\r\n\t\t\t\t0x90000: 0x400000,\r\n\t\t\t\t0xa0000: 0x40,\r\n\t\t\t\t0xb0000: 0x80001000,\r\n\t\t\t\t0xc0000: 0x80400040,\r\n\t\t\t\t0xd0000: 0x1040,\r\n\t\t\t\t0xe0000: 0x1000,\r\n\t\t\t\t0xf0000: 0x80401040,\r\n\t\t\t\t0x8000: 0x80001040,\r\n\t\t\t\t0x18000: 0x40,\r\n\t\t\t\t0x28000: 0x80400040,\r\n\t\t\t\t0x38000: 0x80001000,\r\n\t\t\t\t0x48000: 0x401000,\r\n\t\t\t\t0x58000: 0x80401040,\r\n\t\t\t\t0x68000: 0x0,\r\n\t\t\t\t0x78000: 0x80400000,\r\n\t\t\t\t0x88000: 0x1000,\r\n\t\t\t\t0x98000: 0x80401000,\r\n\t\t\t\t0xa8000: 0x400000,\r\n\t\t\t\t0xb8000: 0x1040,\r\n\t\t\t\t0xc8000: 0x80000000,\r\n\t\t\t\t0xd8000: 0x400040,\r\n\t\t\t\t0xe8000: 0x401040,\r\n\t\t\t\t0xf8000: 0x80000040,\r\n\t\t\t\t0x100000: 0x400040,\r\n\t\t\t\t0x110000: 0x401000,\r\n\t\t\t\t0x120000: 0x80000040,\r\n\t\t\t\t0x130000: 0x0,\r\n\t\t\t\t0x140000: 0x1040,\r\n\t\t\t\t0x150000: 0x80400040,\r\n\t\t\t\t0x160000: 0x80401000,\r\n\t\t\t\t0x170000: 0x80001040,\r\n\t\t\t\t0x180000: 0x80401040,\r\n\t\t\t\t0x190000: 0x80000000,\r\n\t\t\t\t0x1a0000: 0x80400000,\r\n\t\t\t\t0x1b0000: 0x401040,\r\n\t\t\t\t0x1c0000: 0x80001000,\r\n\t\t\t\t0x1d0000: 0x400000,\r\n\t\t\t\t0x1e0000: 0x40,\r\n\t\t\t\t0x1f0000: 0x1000,\r\n\t\t\t\t0x108000: 0x80400000,\r\n\t\t\t\t0x118000: 0x80401040,\r\n\t\t\t\t0x128000: 0x0,\r\n\t\t\t\t0x138000: 0x401000,\r\n\t\t\t\t0x148000: 0x400040,\r\n\t\t\t\t0x158000: 0x80000000,\r\n\t\t\t\t0x168000: 0x80001040,\r\n\t\t\t\t0x178000: 0x40,\r\n\t\t\t\t0x188000: 0x80000040,\r\n\t\t\t\t0x198000: 0x1000,\r\n\t\t\t\t0x1a8000: 0x80001000,\r\n\t\t\t\t0x1b8000: 0x80400040,\r\n\t\t\t\t0x1c8000: 0x1040,\r\n\t\t\t\t0x1d8000: 0x80401000,\r\n\t\t\t\t0x1e8000: 0x400000,\r\n\t\t\t\t0x1f8000: 0x401040\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x80,\r\n\t\t\t\t0x1000: 0x1040000,\r\n\t\t\t\t0x2000: 0x40000,\r\n\t\t\t\t0x3000: 0x20000000,\r\n\t\t\t\t0x4000: 0x20040080,\r\n\t\t\t\t0x5000: 0x1000080,\r\n\t\t\t\t0x6000: 0x21000080,\r\n\t\t\t\t0x7000: 0x40080,\r\n\t\t\t\t0x8000: 0x1000000,\r\n\t\t\t\t0x9000: 0x20040000,\r\n\t\t\t\t0xa000: 0x20000080,\r\n\t\t\t\t0xb000: 0x21040080,\r\n\t\t\t\t0xc000: 0x21040000,\r\n\t\t\t\t0xd000: 0x0,\r\n\t\t\t\t0xe000: 0x1040080,\r\n\t\t\t\t0xf000: 0x21000000,\r\n\t\t\t\t0x800: 0x1040080,\r\n\t\t\t\t0x1800: 0x21000080,\r\n\t\t\t\t0x2800: 0x80,\r\n\t\t\t\t0x3800: 0x1040000,\r\n\t\t\t\t0x4800: 0x40000,\r\n\t\t\t\t0x5800: 0x20040080,\r\n\t\t\t\t0x6800: 0x21040000,\r\n\t\t\t\t0x7800: 0x20000000,\r\n\t\t\t\t0x8800: 0x20040000,\r\n\t\t\t\t0x9800: 0x0,\r\n\t\t\t\t0xa800: 0x21040080,\r\n\t\t\t\t0xb800: 0x1000080,\r\n\t\t\t\t0xc800: 0x20000080,\r\n\t\t\t\t0xd800: 0x21000000,\r\n\t\t\t\t0xe800: 0x1000000,\r\n\t\t\t\t0xf800: 0x40080,\r\n\t\t\t\t0x10000: 0x40000,\r\n\t\t\t\t0x11000: 0x80,\r\n\t\t\t\t0x12000: 0x20000000,\r\n\t\t\t\t0x13000: 0x21000080,\r\n\t\t\t\t0x14000: 0x1000080,\r\n\t\t\t\t0x15000: 0x21040000,\r\n\t\t\t\t0x16000: 0x20040080,\r\n\t\t\t\t0x17000: 0x1000000,\r\n\t\t\t\t0x18000: 0x21040080,\r\n\t\t\t\t0x19000: 0x21000000,\r\n\t\t\t\t0x1a000: 0x1040000,\r\n\t\t\t\t0x1b000: 0x20040000,\r\n\t\t\t\t0x1c000: 0x40080,\r\n\t\t\t\t0x1d000: 0x20000080,\r\n\t\t\t\t0x1e000: 0x0,\r\n\t\t\t\t0x1f000: 0x1040080,\r\n\t\t\t\t0x10800: 0x21000080,\r\n\t\t\t\t0x11800: 0x1000000,\r\n\t\t\t\t0x12800: 0x1040000,\r\n\t\t\t\t0x13800: 0x20040080,\r\n\t\t\t\t0x14800: 0x20000000,\r\n\t\t\t\t0x15800: 0x1040080,\r\n\t\t\t\t0x16800: 0x80,\r\n\t\t\t\t0x17800: 0x21040000,\r\n\t\t\t\t0x18800: 0x40080,\r\n\t\t\t\t0x19800: 0x21040080,\r\n\t\t\t\t0x1a800: 0x0,\r\n\t\t\t\t0x1b800: 0x21000000,\r\n\t\t\t\t0x1c800: 0x1000080,\r\n\t\t\t\t0x1d800: 0x40000,\r\n\t\t\t\t0x1e800: 0x20040000,\r\n\t\t\t\t0x1f800: 0x20000080\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x10000008,\r\n\t\t\t\t0x100: 0x2000,\r\n\t\t\t\t0x200: 0x10200000,\r\n\t\t\t\t0x300: 0x10202008,\r\n\t\t\t\t0x400: 0x10002000,\r\n\t\t\t\t0x500: 0x200000,\r\n\t\t\t\t0x600: 0x200008,\r\n\t\t\t\t0x700: 0x10000000,\r\n\t\t\t\t0x800: 0x0,\r\n\t\t\t\t0x900: 0x10002008,\r\n\t\t\t\t0xa00: 0x202000,\r\n\t\t\t\t0xb00: 0x8,\r\n\t\t\t\t0xc00: 0x10200008,\r\n\t\t\t\t0xd00: 0x202008,\r\n\t\t\t\t0xe00: 0x2008,\r\n\t\t\t\t0xf00: 0x10202000,\r\n\t\t\t\t0x80: 0x10200000,\r\n\t\t\t\t0x180: 0x10202008,\r\n\t\t\t\t0x280: 0x8,\r\n\t\t\t\t0x380: 0x200000,\r\n\t\t\t\t0x480: 0x202008,\r\n\t\t\t\t0x580: 0x10000008,\r\n\t\t\t\t0x680: 0x10002000,\r\n\t\t\t\t0x780: 0x2008,\r\n\t\t\t\t0x880: 0x200008,\r\n\t\t\t\t0x980: 0x2000,\r\n\t\t\t\t0xa80: 0x10002008,\r\n\t\t\t\t0xb80: 0x10200008,\r\n\t\t\t\t0xc80: 0x0,\r\n\t\t\t\t0xd80: 0x10202000,\r\n\t\t\t\t0xe80: 0x202000,\r\n\t\t\t\t0xf80: 0x10000000,\r\n\t\t\t\t0x1000: 0x10002000,\r\n\t\t\t\t0x1100: 0x10200008,\r\n\t\t\t\t0x1200: 0x10202008,\r\n\t\t\t\t0x1300: 0x2008,\r\n\t\t\t\t0x1400: 0x200000,\r\n\t\t\t\t0x1500: 0x10000000,\r\n\t\t\t\t0x1600: 0x10000008,\r\n\t\t\t\t0x1700: 0x202000,\r\n\t\t\t\t0x1800: 0x202008,\r\n\t\t\t\t0x1900: 0x0,\r\n\t\t\t\t0x1a00: 0x8,\r\n\t\t\t\t0x1b00: 0x10200000,\r\n\t\t\t\t0x1c00: 0x2000,\r\n\t\t\t\t0x1d00: 0x10002008,\r\n\t\t\t\t0x1e00: 0x10202000,\r\n\t\t\t\t0x1f00: 0x200008,\r\n\t\t\t\t0x1080: 0x8,\r\n\t\t\t\t0x1180: 0x202000,\r\n\t\t\t\t0x1280: 0x200000,\r\n\t\t\t\t0x1380: 0x10000008,\r\n\t\t\t\t0x1480: 0x10002000,\r\n\t\t\t\t0x1580: 0x2008,\r\n\t\t\t\t0x1680: 0x10202008,\r\n\t\t\t\t0x1780: 0x10200000,\r\n\t\t\t\t0x1880: 0x10202000,\r\n\t\t\t\t0x1980: 0x10200008,\r\n\t\t\t\t0x1a80: 0x2000,\r\n\t\t\t\t0x1b80: 0x202008,\r\n\t\t\t\t0x1c80: 0x200008,\r\n\t\t\t\t0x1d80: 0x0,\r\n\t\t\t\t0x1e80: 0x10000000,\r\n\t\t\t\t0x1f80: 0x10002008\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x100000,\r\n\t\t\t\t0x10: 0x2000401,\r\n\t\t\t\t0x20: 0x400,\r\n\t\t\t\t0x30: 0x100401,\r\n\t\t\t\t0x40: 0x2100401,\r\n\t\t\t\t0x50: 0x0,\r\n\t\t\t\t0x60: 0x1,\r\n\t\t\t\t0x70: 0x2100001,\r\n\t\t\t\t0x80: 0x2000400,\r\n\t\t\t\t0x90: 0x100001,\r\n\t\t\t\t0xa0: 0x2000001,\r\n\t\t\t\t0xb0: 0x2100400,\r\n\t\t\t\t0xc0: 0x2100000,\r\n\t\t\t\t0xd0: 0x401,\r\n\t\t\t\t0xe0: 0x100400,\r\n\t\t\t\t0xf0: 0x2000000,\r\n\t\t\t\t0x8: 0x2100001,\r\n\t\t\t\t0x18: 0x0,\r\n\t\t\t\t0x28: 0x2000401,\r\n\t\t\t\t0x38: 0x2100400,\r\n\t\t\t\t0x48: 0x100000,\r\n\t\t\t\t0x58: 0x2000001,\r\n\t\t\t\t0x68: 0x2000000,\r\n\t\t\t\t0x78: 0x401,\r\n\t\t\t\t0x88: 0x100401,\r\n\t\t\t\t0x98: 0x2000400,\r\n\t\t\t\t0xa8: 0x2100000,\r\n\t\t\t\t0xb8: 0x100001,\r\n\t\t\t\t0xc8: 0x400,\r\n\t\t\t\t0xd8: 0x2100401,\r\n\t\t\t\t0xe8: 0x1,\r\n\t\t\t\t0xf8: 0x100400,\r\n\t\t\t\t0x100: 0x2000000,\r\n\t\t\t\t0x110: 0x100000,\r\n\t\t\t\t0x120: 0x2000401,\r\n\t\t\t\t0x130: 0x2100001,\r\n\t\t\t\t0x140: 0x100001,\r\n\t\t\t\t0x150: 0x2000400,\r\n\t\t\t\t0x160: 0x2100400,\r\n\t\t\t\t0x170: 0x100401,\r\n\t\t\t\t0x180: 0x401,\r\n\t\t\t\t0x190: 0x2100401,\r\n\t\t\t\t0x1a0: 0x100400,\r\n\t\t\t\t0x1b0: 0x1,\r\n\t\t\t\t0x1c0: 0x0,\r\n\t\t\t\t0x1d0: 0x2100000,\r\n\t\t\t\t0x1e0: 0x2000001,\r\n\t\t\t\t0x1f0: 0x400,\r\n\t\t\t\t0x108: 0x100400,\r\n\t\t\t\t0x118: 0x2000401,\r\n\t\t\t\t0x128: 0x2100001,\r\n\t\t\t\t0x138: 0x1,\r\n\t\t\t\t0x148: 0x2000000,\r\n\t\t\t\t0x158: 0x100000,\r\n\t\t\t\t0x168: 0x401,\r\n\t\t\t\t0x178: 0x2100400,\r\n\t\t\t\t0x188: 0x2000001,\r\n\t\t\t\t0x198: 0x2100000,\r\n\t\t\t\t0x1a8: 0x0,\r\n\t\t\t\t0x1b8: 0x2100401,\r\n\t\t\t\t0x1c8: 0x100401,\r\n\t\t\t\t0x1d8: 0x400,\r\n\t\t\t\t0x1e8: 0x2000400,\r\n\t\t\t\t0x1f8: 0x100001\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t0x0: 0x8000820,\r\n\t\t\t\t0x1: 0x20000,\r\n\t\t\t\t0x2: 0x8000000,\r\n\t\t\t\t0x3: 0x20,\r\n\t\t\t\t0x4: 0x20020,\r\n\t\t\t\t0x5: 0x8020820,\r\n\t\t\t\t0x6: 0x8020800,\r\n\t\t\t\t0x7: 0x800,\r\n\t\t\t\t0x8: 0x8020000,\r\n\t\t\t\t0x9: 0x8000800,\r\n\t\t\t\t0xa: 0x20800,\r\n\t\t\t\t0xb: 0x8020020,\r\n\t\t\t\t0xc: 0x820,\r\n\t\t\t\t0xd: 0x0,\r\n\t\t\t\t0xe: 0x8000020,\r\n\t\t\t\t0xf: 0x20820,\r\n\t\t\t\t0x80000000: 0x800,\r\n\t\t\t\t0x80000001: 0x8020820,\r\n\t\t\t\t0x80000002: 0x8000820,\r\n\t\t\t\t0x80000003: 0x8000000,\r\n\t\t\t\t0x80000004: 0x8020000,\r\n\t\t\t\t0x80000005: 0x20800,\r\n\t\t\t\t0x80000006: 0x20820,\r\n\t\t\t\t0x80000007: 0x20,\r\n\t\t\t\t0x80000008: 0x8000020,\r\n\t\t\t\t0x80000009: 0x820,\r\n\t\t\t\t0x8000000a: 0x20020,\r\n\t\t\t\t0x8000000b: 0x8020800,\r\n\t\t\t\t0x8000000c: 0x0,\r\n\t\t\t\t0x8000000d: 0x8020020,\r\n\t\t\t\t0x8000000e: 0x8000800,\r\n\t\t\t\t0x8000000f: 0x20000,\r\n\t\t\t\t0x10: 0x20820,\r\n\t\t\t\t0x11: 0x8020800,\r\n\t\t\t\t0x12: 0x20,\r\n\t\t\t\t0x13: 0x800,\r\n\t\t\t\t0x14: 0x8000800,\r\n\t\t\t\t0x15: 0x8000020,\r\n\t\t\t\t0x16: 0x8020020,\r\n\t\t\t\t0x17: 0x20000,\r\n\t\t\t\t0x18: 0x0,\r\n\t\t\t\t0x19: 0x20020,\r\n\t\t\t\t0x1a: 0x8020000,\r\n\t\t\t\t0x1b: 0x8000820,\r\n\t\t\t\t0x1c: 0x8020820,\r\n\t\t\t\t0x1d: 0x20800,\r\n\t\t\t\t0x1e: 0x820,\r\n\t\t\t\t0x1f: 0x8000000,\r\n\t\t\t\t0x80000010: 0x20000,\r\n\t\t\t\t0x80000011: 0x800,\r\n\t\t\t\t0x80000012: 0x8020020,\r\n\t\t\t\t0x80000013: 0x20820,\r\n\t\t\t\t0x80000014: 0x20,\r\n\t\t\t\t0x80000015: 0x8020000,\r\n\t\t\t\t0x80000016: 0x8000000,\r\n\t\t\t\t0x80000017: 0x8000820,\r\n\t\t\t\t0x80000018: 0x8020820,\r\n\t\t\t\t0x80000019: 0x8000020,\r\n\t\t\t\t0x8000001a: 0x8000800,\r\n\t\t\t\t0x8000001b: 0x0,\r\n\t\t\t\t0x8000001c: 0x20800,\r\n\t\t\t\t0x8000001d: 0x820,\r\n\t\t\t\t0x8000001e: 0x20020,\r\n\t\t\t\t0x8000001f: 0x8020800\r\n\t\t\t}\r\n\t\t];\r\n\r\n\t\t// Masks that select the SBOX input\r\n\t\tvar SBOX_MASK = [\r\n\t\t\t0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\r\n\t\t\t0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\r\n\t\t];\r\n\r\n\t\t/**\r\n\t\t * DES block cipher algorithm.\r\n\t\t */\r\n\t\tvar DES = C_algo.DES = BlockCipher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar key = this._key;\r\n\t\t\t\tvar keyWords = key.words;\r\n\r\n\t\t\t\t// Select 56 bits according to PC1\r\n\t\t\t\tvar keyBits = [];\r\n\t\t\t\tfor (var i = 0; i < 56; i++) {\r\n\t\t\t\t\tvar keyBitPos = PC1[i] - 1;\r\n\t\t\t\t\tkeyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Assemble 16 subkeys\r\n\t\t\t\tvar subKeys = this._subKeys = [];\r\n\t\t\t\tfor (var nSubKey = 0; nSubKey < 16; nSubKey++) {\r\n\t\t\t\t\t// Create subkey\r\n\t\t\t\t\tvar subKey = subKeys[nSubKey] = [];\r\n\r\n\t\t\t\t\t// Shortcut\r\n\t\t\t\t\tvar bitShift = BIT_SHIFTS[nSubKey];\r\n\r\n\t\t\t\t\t// Select 48 bits according to PC2\r\n\t\t\t\t\tfor (var i = 0; i < 24; i++) {\r\n\t\t\t\t\t\t// Select from the left 28 key bits\r\n\t\t\t\t\t\tsubKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 -\r\n\t\t\t\t\t\t\ti % 6);\r\n\r\n\t\t\t\t\t\t// Select from the right 28 key bits\r\n\t\t\t\t\t\tsubKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) +\r\n\t\t\t\t\t\t\tbitShift) % 28)] << (31 - i % 6);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Since each subkey is applied to an expanded 32-bit input,\r\n\t\t\t\t\t// the subkey can be broken into 8 values scaled to 32-bits,\r\n\t\t\t\t\t// which allows the key to be used without expansion\r\n\t\t\t\t\tsubKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\r\n\t\t\t\t\tfor (var i = 1; i < 7; i++) {\r\n\t\t\t\t\t\tsubKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsubKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute inverse subkeys\r\n\t\t\t\tvar invSubKeys = this._invSubKeys = [];\r\n\t\t\t\tfor (var i = 0; i < 16; i++) {\r\n\t\t\t\t\tinvSubKeys[i] = subKeys[15 - i];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tencryptBlock: function(M, offset) {\r\n\t\t\t\tthis._doCryptBlock(M, offset, this._subKeys);\r\n\t\t\t},\r\n\r\n\t\t\tdecryptBlock: function(M, offset) {\r\n\t\t\t\tthis._doCryptBlock(M, offset, this._invSubKeys);\r\n\t\t\t},\r\n\r\n\t\t\t_doCryptBlock: function(M, offset, subKeys) {\r\n\t\t\t\t// Get input\r\n\t\t\t\tthis._lBlock = M[offset];\r\n\t\t\t\tthis._rBlock = M[offset + 1];\r\n\r\n\t\t\t\t// Initial permutation\r\n\t\t\t\texchangeLR.call(this, 4, 0x0f0f0f0f);\r\n\t\t\t\texchangeLR.call(this, 16, 0x0000ffff);\r\n\t\t\t\texchangeRL.call(this, 2, 0x33333333);\r\n\t\t\t\texchangeRL.call(this, 8, 0x00ff00ff);\r\n\t\t\t\texchangeLR.call(this, 1, 0x55555555);\r\n\r\n\t\t\t\t// Rounds\r\n\t\t\t\tfor (var round = 0; round < 16; round++) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar subKey = subKeys[round];\r\n\t\t\t\t\tvar lBlock = this._lBlock;\r\n\t\t\t\t\tvar rBlock = this._rBlock;\r\n\r\n\t\t\t\t\t// Feistel function\r\n\t\t\t\t\tvar f = 0;\r\n\t\t\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\t\t\tf |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._lBlock = rBlock;\r\n\t\t\t\t\tthis._rBlock = lBlock ^ f;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Undo swap from last round\r\n\t\t\t\tvar t = this._lBlock;\r\n\t\t\t\tthis._lBlock = this._rBlock;\r\n\t\t\t\tthis._rBlock = t;\r\n\r\n\t\t\t\t// Final permutation\r\n\t\t\t\texchangeLR.call(this, 1, 0x55555555);\r\n\t\t\t\texchangeRL.call(this, 8, 0x00ff00ff);\r\n\t\t\t\texchangeRL.call(this, 2, 0x33333333);\r\n\t\t\t\texchangeLR.call(this, 16, 0x0000ffff);\r\n\t\t\t\texchangeLR.call(this, 4, 0x0f0f0f0f);\r\n\r\n\t\t\t\t// Set output\r\n\t\t\t\tM[offset] = this._lBlock;\r\n\t\t\t\tM[offset + 1] = this._rBlock;\r\n\t\t\t},\r\n\r\n\t\t\tkeySize: 64 / 32,\r\n\r\n\t\t\tivSize: 64 / 32,\r\n\r\n\t\t\tblockSize: 64 / 32\r\n\t\t});\r\n\r\n\t\t// Swap bits across the left and right words\r\n\t\tfunction exchangeLR(offset, mask) {\r\n\t\t\tvar t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\r\n\t\t\tthis._rBlock ^= t;\r\n\t\t\tthis._lBlock ^= t << offset;\r\n\t\t}\r\n\r\n\t\tfunction exchangeRL(offset, mask) {\r\n\t\t\tvar t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\r\n\t\t\tthis._lBlock ^= t;\r\n\t\t\tthis._rBlock ^= t << offset;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.DES = BlockCipher._createHelper(DES);\r\n\r\n\t\t/**\r\n\t\t * Triple-DES block cipher algorithm.\r\n\t\t */\r\n\t\tvar TripleDES = C_algo.TripleDES = BlockCipher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar key = this._key;\r\n\t\t\t\tvar keyWords = key.words;\r\n\r\n\t\t\t\t// Create DES instances\r\n\t\t\t\tthis._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\r\n\t\t\t\tthis._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\r\n\t\t\t\tthis._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\r\n\t\t\t},\r\n\r\n\t\t\tencryptBlock: function(M, offset) {\r\n\t\t\t\tthis._des1.encryptBlock(M, offset);\r\n\t\t\t\tthis._des2.decryptBlock(M, offset);\r\n\t\t\t\tthis._des3.encryptBlock(M, offset);\r\n\t\t\t},\r\n\r\n\t\t\tdecryptBlock: function(M, offset) {\r\n\t\t\t\tthis._des3.decryptBlock(M, offset);\r\n\t\t\t\tthis._des2.encryptBlock(M, offset);\r\n\t\t\t\tthis._des1.decryptBlock(M, offset);\r\n\t\t\t},\r\n\r\n\t\t\tkeySize: 192 / 32,\r\n\r\n\t\t\tivSize: 64 / 32,\r\n\r\n\t\t\tblockSize: 64 / 32\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.TripleDES = BlockCipher._createHelper(TripleDES);\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar StreamCipher = C_lib.StreamCipher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t/**\r\n\t\t * RC4 stream cipher algorithm.\r\n\t\t */\r\n\t\tvar RC4 = C_algo.RC4 = StreamCipher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar key = this._key;\r\n\t\t\t\tvar keyWords = key.words;\r\n\t\t\t\tvar keySigBytes = key.sigBytes;\r\n\r\n\t\t\t\t// Init sbox\r\n\t\t\t\tvar S = this._S = [];\r\n\t\t\t\tfor (var i = 0; i < 256; i++) {\r\n\t\t\t\t\tS[i] = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Key setup\r\n\t\t\t\tfor (var i = 0, j = 0; i < 256; i++) {\r\n\t\t\t\t\tvar keyByteIndex = i % keySigBytes;\r\n\t\t\t\t\tvar keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) *\r\n\t\t\t\t\t\t8)) & 0xff;\r\n\r\n\t\t\t\t\tj = (j + S[i] + keyByte) % 256;\r\n\r\n\t\t\t\t\t// Swap\r\n\t\t\t\t\tvar t = S[i];\r\n\t\t\t\t\tS[i] = S[j];\r\n\t\t\t\t\tS[j] = t;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Counters\r\n\t\t\t\tthis._i = this._j = 0;\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\tM[offset] ^= generateKeystreamWord.call(this);\r\n\t\t\t},\r\n\r\n\t\t\tkeySize: 256 / 32,\r\n\r\n\t\t\tivSize: 0\r\n\t\t});\r\n\r\n\t\tfunction generateKeystreamWord() {\r\n\t\t\t// Shortcuts\r\n\t\t\tvar S = this._S;\r\n\t\t\tvar i = this._i;\r\n\t\t\tvar j = this._j;\r\n\r\n\t\t\t// Generate keystream word\r\n\t\t\tvar keystreamWord = 0;\r\n\t\t\tfor (var n = 0; n < 4; n++) {\r\n\t\t\t\ti = (i + 1) % 256;\r\n\t\t\t\tj = (j + S[i]) % 256;\r\n\r\n\t\t\t\t// Swap\r\n\t\t\t\tvar t = S[i];\r\n\t\t\t\tS[i] = S[j];\r\n\t\t\t\tS[j] = t;\r\n\r\n\t\t\t\tkeystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\r\n\t\t\t}\r\n\r\n\t\t\t// Update counters\r\n\t\t\tthis._i = i;\r\n\t\t\tthis._j = j;\r\n\r\n\t\t\treturn keystreamWord;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.RC4 = StreamCipher._createHelper(RC4);\r\n\r\n\t\t/**\r\n\t\t * Modified RC4 stream cipher algorithm.\r\n\t\t */\r\n\t\tvar RC4Drop = C_algo.RC4Drop = RC4.extend({\r\n\t\t\t/**\r\n\t\t\t * Configuration options.\r\n\t\t\t *\r\n\t\t\t * @property {number} drop The number of keystream words to drop. Default 192\r\n\t\t\t */\r\n\t\t\tcfg: RC4.cfg.extend({\r\n\t\t\t\tdrop: 192\r\n\t\t\t}),\r\n\r\n\t\t\t_doReset: function() {\r\n\t\t\t\tRC4._doReset.call(this);\r\n\r\n\t\t\t\t// Drop\r\n\t\t\t\tfor (var i = this.cfg.drop; i > 0; i--) {\r\n\t\t\t\t\tgenerateKeystreamWord.call(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.RC4Drop = StreamCipher._createHelper(RC4Drop);\r\n\t}());\r\n\r\n\r\n\t/** @preserve\r\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\r\n\t * derived from CryptoJS.mode.CTR\r\n\t * Jan Hruby jhruby.web@gmail.com\r\n\t */\r\n\tCryptoJS.mode.CTRGladman = (function() {\r\n\t\tvar CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n\t\tfunction incWord(word) {\r\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\r\n\t\t\t\tvar b1 = (word >> 16) & 0xff;\r\n\t\t\t\tvar b2 = (word >> 8) & 0xff;\r\n\t\t\t\tvar b3 = word & 0xff;\r\n\r\n\t\t\t\tif (b1 === 0xff) // overflow b1\r\n\t\t\t\t{\r\n\t\t\t\t\tb1 = 0;\r\n\t\t\t\t\tif (b2 === 0xff) {\r\n\t\t\t\t\t\tb2 = 0;\r\n\t\t\t\t\t\tif (b3 === 0xff) {\r\n\t\t\t\t\t\t\tb3 = 0;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t++b3;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t++b2;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t++b1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tword = 0;\r\n\t\t\t\tword += (b1 << 16);\r\n\t\t\t\tword += (b2 << 8);\r\n\t\t\t\tword += b3;\r\n\t\t\t} else {\r\n\t\t\t\tword += (0x01 << 24);\r\n\t\t\t}\r\n\t\t\treturn word;\r\n\t\t}\r\n\r\n\t\tfunction incCounter(counter) {\r\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0) {\r\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\r\n\t\t\t\tcounter[1] = incWord(counter[1]);\r\n\t\t\t}\r\n\t\t\treturn counter;\r\n\t\t}\r\n\r\n\t\tvar Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar cipher = this._cipher\r\n\t\t\t\tvar blockSize = cipher.blockSize;\r\n\t\t\t\tvar iv = this._iv;\r\n\t\t\t\tvar counter = this._counter;\r\n\r\n\t\t\t\t// Generate keystream\r\n\t\t\t\tif (iv) {\r\n\t\t\t\t\tcounter = this._counter = iv.slice(0);\r\n\r\n\t\t\t\t\t// Remove IV for subsequent blocks\r\n\t\t\t\t\tthis._iv = undefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tincCounter(counter);\r\n\r\n\t\t\t\tvar keystream = counter.slice(0);\r\n\t\t\t\tcipher.encryptBlock(keystream, 0);\r\n\r\n\t\t\t\t// Encrypt\r\n\t\t\t\tfor (var i = 0; i < blockSize; i++) {\r\n\t\t\t\t\twords[offset + i] ^= keystream[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tCTRGladman.Decryptor = Encryptor;\r\n\r\n\t\treturn CTRGladman;\r\n\t}());\r\n\r\n\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar StreamCipher = C_lib.StreamCipher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Reusable objects\r\n\t\tvar S = [];\r\n\t\tvar C_ = [];\r\n\t\tvar G = [];\r\n\r\n\t\t/**\r\n\t\t * Rabbit stream cipher algorithm\r\n\t\t */\r\n\t\tvar Rabbit = C_algo.Rabbit = StreamCipher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar K = this._key.words;\r\n\t\t\t\tvar iv = this.cfg.iv;\r\n\r\n\t\t\t\t// Swap endian\r\n\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\tK[i] = (((K[i] << 8) | (K[i] >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((K[i] << 24) | (K[i] >>> 8)) & 0xff00ff00);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Generate initial state values\r\n\t\t\t\tvar X = this._X = [\r\n\t\t\t\t\tK[0], (K[3] << 16) | (K[2] >>> 16),\r\n\t\t\t\t\tK[1], (K[0] << 16) | (K[3] >>> 16),\r\n\t\t\t\t\tK[2], (K[1] << 16) | (K[0] >>> 16),\r\n\t\t\t\t\tK[3], (K[2] << 16) | (K[1] >>> 16)\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// Generate initial counter values\r\n\t\t\t\tvar C = this._C = [\r\n\t\t\t\t\t(K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\r\n\t\t\t\t\t(K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\r\n\t\t\t\t\t(K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\r\n\t\t\t\t\t(K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// Carry bit\r\n\t\t\t\tthis._b = 0;\r\n\r\n\t\t\t\t// Iterate the system four times\r\n\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\tnextState.call(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Modify the counters\r\n\t\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\t\tC[i] ^= X[(i + 4) & 7];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// IV setup\r\n\t\t\t\tif (iv) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar IV = iv.words;\r\n\t\t\t\t\tvar IV_0 = IV[0];\r\n\t\t\t\t\tvar IV_1 = IV[1];\r\n\r\n\t\t\t\t\t// Generate four subvectors\r\n\t\t\t\t\tvar i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (\r\n\t\t\t\t\t\tIV_0 >>> 8)) & 0xff00ff00);\r\n\t\t\t\t\tvar i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (\r\n\t\t\t\t\t\tIV_1 >>> 8)) & 0xff00ff00);\r\n\t\t\t\t\tvar i1 = (i0 >>> 16) | (i2 & 0xffff0000);\r\n\t\t\t\t\tvar i3 = (i2 << 16) | (i0 & 0x0000ffff);\r\n\r\n\t\t\t\t\t// Modify counter values\r\n\t\t\t\t\tC[0] ^= i0;\r\n\t\t\t\t\tC[1] ^= i1;\r\n\t\t\t\t\tC[2] ^= i2;\r\n\t\t\t\t\tC[3] ^= i3;\r\n\t\t\t\t\tC[4] ^= i0;\r\n\t\t\t\t\tC[5] ^= i1;\r\n\t\t\t\t\tC[6] ^= i2;\r\n\t\t\t\t\tC[7] ^= i3;\r\n\r\n\t\t\t\t\t// Iterate the system four times\r\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\t\tnextState.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar X = this._X;\r\n\r\n\t\t\t\t// Iterate the system\r\n\t\t\t\tnextState.call(this);\r\n\r\n\t\t\t\t// Generate four keystream words\r\n\t\t\t\tS[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\r\n\t\t\t\tS[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\r\n\t\t\t\tS[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\r\n\t\t\t\tS[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\r\n\r\n\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\t// Swap endian\r\n\t\t\t\t\tS[i] = (((S[i] << 8) | (S[i] >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((S[i] << 24) | (S[i] >>> 8)) & 0xff00ff00);\r\n\r\n\t\t\t\t\t// Encrypt\r\n\t\t\t\t\tM[offset + i] ^= S[i];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tblockSize: 128 / 32,\r\n\r\n\t\t\tivSize: 64 / 32\r\n\t\t});\r\n\r\n\t\tfunction nextState() {\r\n\t\t\t// Shortcuts\r\n\t\t\tvar X = this._X;\r\n\t\t\tvar C = this._C;\r\n\r\n\t\t\t// Save old counter values\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tC_[i] = C[i];\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate new counter values\r\n\t\t\tC[0] = (C[0] + 0x4d34d34d + this._b) | 0;\r\n\t\t\tC[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tthis._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\r\n\r\n\t\t\t// Calculate the g-values\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tvar gx = X[i] + C[i];\r\n\r\n\t\t\t\t// Construct high and low argument for squaring\r\n\t\t\t\tvar ga = gx & 0xffff;\r\n\t\t\t\tvar gb = gx >>> 16;\r\n\r\n\t\t\t\t// Calculate high and low result of squaring\r\n\t\t\t\tvar gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\r\n\t\t\t\tvar gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\r\n\r\n\t\t\t\t// High XOR low\r\n\t\t\t\tG[i] = gh ^ gl;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate new state values\r\n\t\t\tX[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\r\n\t\t\tX[1] = (G[1] + ((G[0] << 8) | (G[0] >>> 24)) + G[7]) | 0;\r\n\t\t\tX[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\r\n\t\t\tX[3] = (G[3] + ((G[2] << 8) | (G[2] >>> 24)) + G[1]) | 0;\r\n\t\t\tX[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\r\n\t\t\tX[5] = (G[5] + ((G[4] << 8) | (G[4] >>> 24)) + G[3]) | 0;\r\n\t\t\tX[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\r\n\t\t\tX[7] = (G[7] + ((G[6] << 8) | (G[6] >>> 24)) + G[5]) | 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.Rabbit = StreamCipher._createHelper(Rabbit);\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * Counter block mode.\r\n\t */\r\n\tCryptoJS.mode.CTR = (function() {\r\n\t\tvar CTR = CryptoJS.lib.BlockCipherMode.extend();\r\n\r\n\t\tvar Encryptor = CTR.Encryptor = CTR.extend({\r\n\t\t\tprocessBlock: function(words, offset) {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar cipher = this._cipher\r\n\t\t\t\tvar blockSize = cipher.blockSize;\r\n\t\t\t\tvar iv = this._iv;\r\n\t\t\t\tvar counter = this._counter;\r\n\r\n\t\t\t\t// Generate keystream\r\n\t\t\t\tif (iv) {\r\n\t\t\t\t\tcounter = this._counter = iv.slice(0);\r\n\r\n\t\t\t\t\t// Remove IV for subsequent blocks\r\n\t\t\t\t\tthis._iv = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tvar keystream = counter.slice(0);\r\n\t\t\t\tcipher.encryptBlock(keystream, 0);\r\n\r\n\t\t\t\t// Increment counter\r\n\t\t\t\tcounter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\r\n\r\n\t\t\t\t// Encrypt\r\n\t\t\t\tfor (var i = 0; i < blockSize; i++) {\r\n\t\t\t\t\twords[offset + i] ^= keystream[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tCTR.Decryptor = Encryptor;\r\n\r\n\t\treturn CTR;\r\n\t}());\r\n\r\n\r\n\t(function() {\r\n\t\t// Shortcuts\r\n\t\tvar C = CryptoJS;\r\n\t\tvar C_lib = C.lib;\r\n\t\tvar StreamCipher = C_lib.StreamCipher;\r\n\t\tvar C_algo = C.algo;\r\n\r\n\t\t// Reusable objects\r\n\t\tvar S = [];\r\n\t\tvar C_ = [];\r\n\t\tvar G = [];\r\n\r\n\t\t/**\r\n\t\t * Rabbit stream cipher algorithm.\r\n\t\t *\r\n\t\t * This is a legacy version that neglected to convert the key to little-endian.\r\n\t\t * This error doesn't affect the cipher's security,\r\n\t\t * but it does affect its compatibility with other implementations.\r\n\t\t */\r\n\t\tvar RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\r\n\t\t\t_doReset: function() {\r\n\t\t\t\t// Shortcuts\r\n\t\t\t\tvar K = this._key.words;\r\n\t\t\t\tvar iv = this.cfg.iv;\r\n\r\n\t\t\t\t// Generate initial state values\r\n\t\t\t\tvar X = this._X = [\r\n\t\t\t\t\tK[0], (K[3] << 16) | (K[2] >>> 16),\r\n\t\t\t\t\tK[1], (K[0] << 16) | (K[3] >>> 16),\r\n\t\t\t\t\tK[2], (K[1] << 16) | (K[0] >>> 16),\r\n\t\t\t\t\tK[3], (K[2] << 16) | (K[1] >>> 16)\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// Generate initial counter values\r\n\t\t\t\tvar C = this._C = [\r\n\t\t\t\t\t(K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\r\n\t\t\t\t\t(K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\r\n\t\t\t\t\t(K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\r\n\t\t\t\t\t(K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\r\n\t\t\t\t];\r\n\r\n\t\t\t\t// Carry bit\r\n\t\t\t\tthis._b = 0;\r\n\r\n\t\t\t\t// Iterate the system four times\r\n\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\tnextState.call(this);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Modify the counters\r\n\t\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\t\tC[i] ^= X[(i + 4) & 7];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// IV setup\r\n\t\t\t\tif (iv) {\r\n\t\t\t\t\t// Shortcuts\r\n\t\t\t\t\tvar IV = iv.words;\r\n\t\t\t\t\tvar IV_0 = IV[0];\r\n\t\t\t\t\tvar IV_1 = IV[1];\r\n\r\n\t\t\t\t\t// Generate four subvectors\r\n\t\t\t\t\tvar i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (\r\n\t\t\t\t\t\tIV_0 >>> 8)) & 0xff00ff00);\r\n\t\t\t\t\tvar i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (\r\n\t\t\t\t\t\tIV_1 >>> 8)) & 0xff00ff00);\r\n\t\t\t\t\tvar i1 = (i0 >>> 16) | (i2 & 0xffff0000);\r\n\t\t\t\t\tvar i3 = (i2 << 16) | (i0 & 0x0000ffff);\r\n\r\n\t\t\t\t\t// Modify counter values\r\n\t\t\t\t\tC[0] ^= i0;\r\n\t\t\t\t\tC[1] ^= i1;\r\n\t\t\t\t\tC[2] ^= i2;\r\n\t\t\t\t\tC[3] ^= i3;\r\n\t\t\t\t\tC[4] ^= i0;\r\n\t\t\t\t\tC[5] ^= i1;\r\n\t\t\t\t\tC[6] ^= i2;\r\n\t\t\t\t\tC[7] ^= i3;\r\n\r\n\t\t\t\t\t// Iterate the system four times\r\n\t\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\t\tnextState.call(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t_doProcessBlock: function(M, offset) {\r\n\t\t\t\t// Shortcut\r\n\t\t\t\tvar X = this._X;\r\n\r\n\t\t\t\t// Iterate the system\r\n\t\t\t\tnextState.call(this);\r\n\r\n\t\t\t\t// Generate four keystream words\r\n\t\t\t\tS[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\r\n\t\t\t\tS[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\r\n\t\t\t\tS[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\r\n\t\t\t\tS[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\r\n\r\n\t\t\t\tfor (var i = 0; i < 4; i++) {\r\n\t\t\t\t\t// Swap endian\r\n\t\t\t\t\tS[i] = (((S[i] << 8) | (S[i] >>> 24)) & 0x00ff00ff) |\r\n\t\t\t\t\t\t(((S[i] << 24) | (S[i] >>> 8)) & 0xff00ff00);\r\n\r\n\t\t\t\t\t// Encrypt\r\n\t\t\t\t\tM[offset + i] ^= S[i];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tblockSize: 128 / 32,\r\n\r\n\t\t\tivSize: 64 / 32\r\n\t\t});\r\n\r\n\t\tfunction nextState() {\r\n\t\t\t// Shortcuts\r\n\t\t\tvar X = this._X;\r\n\t\t\tvar C = this._C;\r\n\r\n\t\t\t// Save old counter values\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tC_[i] = C[i];\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate new counter values\r\n\t\t\tC[0] = (C[0] + 0x4d34d34d + this._b) | 0;\r\n\t\t\tC[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tC[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\r\n\t\t\tthis._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\r\n\r\n\t\t\t// Calculate the g-values\r\n\t\t\tfor (var i = 0; i < 8; i++) {\r\n\t\t\t\tvar gx = X[i] + C[i];\r\n\r\n\t\t\t\t// Construct high and low argument for squaring\r\n\t\t\t\tvar ga = gx & 0xffff;\r\n\t\t\t\tvar gb = gx >>> 16;\r\n\r\n\t\t\t\t// Calculate high and low result of squaring\r\n\t\t\t\tvar gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\r\n\t\t\t\tvar gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\r\n\r\n\t\t\t\t// High XOR low\r\n\t\t\t\tG[i] = gh ^ gl;\r\n\t\t\t}\r\n\r\n\t\t\t// Calculate new state values\r\n\t\t\tX[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\r\n\t\t\tX[1] = (G[1] + ((G[0] << 8) | (G[0] >>> 24)) + G[7]) | 0;\r\n\t\t\tX[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\r\n\t\t\tX[3] = (G[3] + ((G[2] << 8) | (G[2] >>> 24)) + G[1]) | 0;\r\n\t\t\tX[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\r\n\t\t\tX[5] = (G[5] + ((G[4] << 8) | (G[4] >>> 24)) + G[3]) | 0;\r\n\t\t\tX[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\r\n\t\t\tX[7] = (G[7] + ((G[6] << 8) | (G[6] >>> 24)) + G[5]) | 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Shortcut functions to the cipher's object interface.\r\n\t\t *\r\n\t\t * @example\r\n\t\t *\r\n\t\t *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\r\n\t\t *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\r\n\t\t */\r\n\t\tC.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\r\n\t}());\r\n\r\n\r\n\t/**\r\n\t * Zero padding strategy.\r\n\t */\r\n\tCryptoJS.pad.ZeroPadding = {\r\n\t\tpad: function(data, blockSize) {\r\n\t\t\t// Shortcut\r\n\t\t\tvar blockSizeBytes = blockSize * 4;\r\n\r\n\t\t\t// Pad\r\n\t\t\tdata.clamp();\r\n\t\t\tdata.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\r\n\t\t},\r\n\r\n\t\tunpad: function(data) {\r\n\t\t\t// Shortcut\r\n\t\t\tvar dataWords = data.words;\r\n\r\n\t\t\t// Unpad\r\n\t\t\tvar i = data.sigBytes - 1;\r\n\t\t\twhile (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t\tdata.sigBytes = i + 1;\r\n\t\t}\r\n\t};\r\n\r\n\r\n\treturn CryptoJS;\r\n\r\n}));"]}]}